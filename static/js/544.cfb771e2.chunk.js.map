{"version":3,"file":"static/js/544.cfb771e2.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nimport { mobile, tablet, min } from '../../styles/media';\n\nexport const ContainerForm = styled.div`\n    max-width: 335px;\n    max-height: 469px;\n    border-radius: 8px;\n    padding: 40px 24px;\n    background-color: #fff;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    } */\n\n    ${min(tablet)} {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: #111;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    margin-bottom: 8px;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    padding: 14px;\n    width: 100%;\n    height: 46px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    border-color: ${({ errors, touched }) =>\n        touched\n            ? errors\n                ? '#E74A3B;'\n                : '#3CBC81'\n            : 'rgba(220, 227, 229, 0.6)'};\n\n    color: #111;\n    outline: none;\n    font-family: Inter;\n    margin-bottom: 24px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px; /* 112.5% */\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #dce3e5;\n\n        font-weight: 400;\n    }\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        padding: 18px;\n        margin-bottom: 18px;\n\n        font-size: 16px;\n    } */\n\n    ${min(tablet)} {\n        padding: 18px;\n        margin-bottom: 18px;\n        height: 54px;\n        font-size: 16px;\n    }\n`;\n\nexport const InputFormMargin0 = styled(InputForm)`\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        margin-bottom: 0;\n    } */\n\n    ${min(mobile)} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 287px;\n    margin-top: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 14px 103px;\n    padding-bottom: 14px;\n    padding-top: 14px;\n    gap: 11px;\n\n    border-radius: 16px;\n    background: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    border: none;\n    outline: none;\n\n    color: #fff;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: -0.28px;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    } */\n\n    ${min(tablet)} {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    }\n`;\n\nexport const Svg = styled.svg`\n    stroke: white;\n    fill: #3e85f3;\n    width: 18px;\n    height: 18px;\n`;\n\nexport const ButtonEye = styled.svg`\n    position: absolute;\n    top: 70%;\n    left: 75%;\n    width: 24px;\n    height: 24px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    } */\n\n    ${min(tablet)} {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -37px;\n    left: 0;\n    margin-left: 18px;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const ErrorMes = styled.span`\n    position: absolute;\n    bottom: -37px;\n    left: 18px;\n    color: #3cbc81;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const SvgStatus = styled.svg`\n    position: absolute;\n    fill: ${({ error }) => (!error ? 'green' : 'red')};\n    right: 14px;\n    top: 83%;\n    transform: translateY(-50%);\n`;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { BsEyeFill } from 'react-icons/bs';\nimport { BsEyeSlashFill } from 'react-icons/bs';\n\nimport {\n    ContainerForm,\n    Title,\n    Span,\n    InputForm,\n    Button,\n    InputFormMargin0,\n    Error,\n    Label,\n    Svg,\n    ButtonEye,\n    ErrorMes,\n    SvgStatus,\n} from './RegisterForm.styled';\n\nimport sprite from '../../images/icons.svg';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n// import Notiflix from 'notiflix';\n// import { useNavigate } from 'react-router-dom';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n// const baseURL = 'https://goose-track-backend-q3re.onrender.com';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    password: yup.string().min(6).required(),\n});\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    // const navigate = useNavigate();\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    const handlerSubmit = (values, actions) => {\n        dispatch(register(values));\n        // navigate('/user');\n        // console.log(values);\n        actions.resetForm();\n    };\n\n    const [icon, setIcon] = useState(<BsEyeFill />);\n    const [type, setType] = useState('password');\n\n    const handlerEyeClick = () => {\n        if (type === 'password') {\n            setType('text');\n            return setIcon(<BsEyeSlashFill />);\n        }\n        setIcon(<BsEyeFill />);\n        setType('password');\n    };\n\n    return (\n        <ContainerForm>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handlerSubmit}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                    <Form>\n                        <Title>Sign Up</Title>\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Name</Span>\n                                <InputForm\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={values.name}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    errors={errors.name}\n                                    touched={touched.name?.toString()}\n                                />\n\n                                {touched.name &&\n                                    (errors.name ? (\n                                        <Error component=\"div\" name=\"name\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.name && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.name}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.name\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Email</Span>\n                                <InputForm\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={values.email}\n                                    errors={errors.email}\n                                    touched={touched.email?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                {/* <Error component=\"div\" name=\"email\" /> */}\n\n                                {touched.email &&\n                                    (errors.email ? (\n                                        <Error component=\"div\" name=\"email\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.email && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.email}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.email\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Password</Span>\n                                <InputFormMargin0\n                                    type={type}\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    value={values.password}\n                                    errors={errors.password}\n                                    touched={touched.password?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                <ButtonEye onClick={handlerEyeClick}>\n                                    {icon}\n                                </ButtonEye>\n\n                                {/* <Error component=\"div\" name=\"password\" /> */}\n\n                                {touched.password &&\n                                    (errors.password ? (\n                                        <Error\n                                            component=\"div\"\n                                            name=\"password\"\n                                        />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.password && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.password}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.password\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <Button type=\"submit\">\n                            Sign Up\n                            <Svg width=\"20\" height=\"20\">\n                                <use href={`${sprite}#log-in`} />\n                            </Svg>\n                        </Button>\n\n                        {/* <a href={`${baseURL}/auth/google`}>Google</a> */}\n                    </Form>\n                )}\n            </Formik>\n        </ContainerForm>\n    );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport register_goose_rocket_desktop from '../images/login_register/register_goose_rocket_desktop.png';\nimport register_goose_rocket_desktop2x from '../images/login_register/register_goose_rocket_desktop@2x.png';\n\nconst RegisterPage = () => {\n    return (\n        <WrapperRegister>\n            <RegisterForm />\n            <LinkToLogin to=\"/login\">Log In</LinkToLogin>\n            <Picture>\n                <source\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    media=\"(min-width: 1440px)\"\n                />\n                <img\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    width={368}\n                    height={521}\n                    alt=\"\"\n                />\n            </Picture>\n        </WrapperRegister>\n    );\n};\n\nconst WrapperRegister = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: #dcebf7;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n    margin-top: 24px;\n\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 133.333% */\n    text-decoration-line: underline;\n`;\n\nconst Picture = styled.picture`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: block;\n        position: absolute;\n        top: 354px;\n        left: 49px;\n    }\n`;\n\nexport default RegisterPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoints","m","min","tablet","Title","_templateObject2","Label","_templateObject3","Span","_templateObject4","InputForm","Field","_templateObject5","_ref2","errors","touched","_ref3","InputFormMargin0","_templateObject6","_ref4","s","mobile","Button","_templateObject7","_ref5","Svg","_templateObject8","ButtonEye","_templateObject9","_ref6","Error","ErrorMessage","_templateObject10","ErrorMes","_templateObject11","SvgStatus","_templateObject12","_ref7","error","schema","yup","shape","name","required","email","matches","password","dispatch","useDispatch","_useState","useState","_jsx","BsEyeFill","_useState2","_slicedToArray","icon","setIcon","_useState3","_useState4","type","setType","handlerEyeClick","BsEyeSlashFill","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","_touched$name","_touched$email","_touched$password","handleChange","handleBlur","handleSubmit","isSubmitting","_jsxs","Form","htmlFor","placeholder","value","onBlur","onChange","toString","component","width","height","href","concat","sprite","onClick","WrapperRegister","LinkToLogin","NavLink","Picture","l","RegisterForm","to","srcSet","register_goose_rocket_desktop2x","media","alt","desktop","bp"],"sourceRoot":""}