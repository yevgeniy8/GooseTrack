{"version":3,"file":"static/js/544.cfb771e2.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nimport { mobile, tablet, min } from '../../styles/media';\n\nexport const ContainerForm = styled.div`\n    max-width: 335px;\n    max-height: 469px;\n    border-radius: 8px;\n    padding: 40px 24px;\n    background-color: #fff;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    } */\n\n    ${min(tablet)} {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: #111;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    margin-bottom: 8px;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    padding: 14px;\n    width: 100%;\n    height: 46px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    border-color: ${({ errors, touched }) =>\n        touched\n            ? errors\n                ? '#E74A3B;'\n                : '#3CBC81'\n            : 'rgba(220, 227, 229, 0.6)'};\n\n    color: #111;\n    outline: none;\n    font-family: Inter;\n    margin-bottom: 24px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px; /* 112.5% */\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #dce3e5;\n\n        font-weight: 400;\n    }\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        padding: 18px;\n        margin-bottom: 18px;\n\n        font-size: 16px;\n    } */\n\n    ${min(tablet)} {\n        padding: 18px;\n        margin-bottom: 18px;\n        height: 54px;\n        font-size: 16px;\n    }\n`;\n\nexport const InputFormMargin0 = styled(InputForm)`\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        margin-bottom: 0;\n    } */\n\n    ${min(mobile)} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 287px;\n    margin-top: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 14px 103px;\n    padding-bottom: 14px;\n    padding-top: 14px;\n    gap: 11px;\n\n    border-radius: 16px;\n    background: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    border: none;\n    outline: none;\n\n    color: #fff;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: -0.28px;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    } */\n\n    ${min(tablet)} {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    }\n`;\n\nexport const Svg = styled.svg`\n    stroke: white;\n    fill: #3e85f3;\n    width: 18px;\n    height: 18px;\n`;\n\nexport const ButtonEye = styled.svg`\n    position: absolute;\n    top: 70%;\n    left: 75%;\n    width: 24px;\n    height: 24px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    } */\n\n    ${min(tablet)} {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -37px;\n    left: 0;\n    margin-left: 18px;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const ErrorMes = styled.span`\n    position: absolute;\n    bottom: -37px;\n    left: 18px;\n    color: #3cbc81;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const SvgStatus = styled.svg`\n    position: absolute;\n    fill: ${({ error }) => (!error ? 'green' : 'red')};\n    right: 14px;\n    top: 83%;\n    transform: translateY(-50%);\n`;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { BsEyeFill } from 'react-icons/bs';\nimport { BsEyeSlashFill } from 'react-icons/bs';\n\nimport {\n    ContainerForm,\n    Title,\n    Span,\n    InputForm,\n    Button,\n    InputFormMargin0,\n    Error,\n    Label,\n    Svg,\n    ButtonEye,\n    ErrorMes,\n    SvgStatus,\n} from './RegisterForm.styled';\n\nimport sprite from '../../images/icons.svg';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n// import Notiflix from 'notiflix';\n// import { useNavigate } from 'react-router-dom';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n// const baseURL = 'https://goose-track-backend-q3re.onrender.com';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    password: yup.string().min(6).required(),\n});\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    // const navigate = useNavigate();\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    const handlerSubmit = (values, actions) => {\n        dispatch(register(values));\n        // navigate('/user');\n        // console.log(values);\n        actions.resetForm();\n    };\n\n    const [icon, setIcon] = useState(<BsEyeFill />);\n    const [type, setType] = useState('password');\n\n    const handlerEyeClick = () => {\n        if (type === 'password') {\n            setType('text');\n            return setIcon(<BsEyeSlashFill />);\n        }\n        setIcon(<BsEyeFill />);\n        setType('password');\n    };\n\n    return (\n        <ContainerForm>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handlerSubmit}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                    <Form>\n                        <Title>Sign Up</Title>\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Name</Span>\n                                <InputForm\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={values.name}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    errors={errors.name}\n                                    touched={touched.name?.toString()}\n                                />\n\n                                {touched.name &&\n                                    (errors.name ? (\n                                        <Error component=\"div\" name=\"name\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.name && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.name}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.name\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Email</Span>\n                                <InputForm\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={values.email}\n                                    errors={errors.email}\n                                    touched={touched.email?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                {/* <Error component=\"div\" name=\"email\" /> */}\n\n                                {touched.email &&\n                                    (errors.email ? (\n                                        <Error component=\"div\" name=\"email\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.email && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.email}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.email\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Password</Span>\n                                <InputFormMargin0\n                                    type={type}\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    value={values.password}\n                                    errors={errors.password}\n                                    touched={touched.password?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                <ButtonEye onClick={handlerEyeClick}>\n                                    {icon}\n                                </ButtonEye>\n\n                                {/* <Error component=\"div\" name=\"password\" /> */}\n\n                                {touched.password &&\n                                    (errors.password ? (\n                                        <Error\n                                            component=\"div\"\n                                            name=\"password\"\n                                        />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.password && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.password}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.password\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <Button type=\"submit\">\n                            Sign Up\n                            <Svg width=\"20\" height=\"20\">\n                                <use href={`${sprite}#log-in`} />\n                            </Svg>\n                        </Button>\n\n                        {/* <a href={`${baseURL}/auth/google`}>Google</a> */}\n                    </Form>\n                )}\n            </Formik>\n        </ContainerForm>\n    );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport register_goose_rocket_desktop from '../images/login_register/register_goose_rocket_desktop.png';\nimport register_goose_rocket_desktop2x from '../images/login_register/register_goose_rocket_desktop@2x.png';\n\nconst RegisterPage = () => {\n    return (\n        <WrapperRegister>\n            <RegisterForm />\n            <LinkToLogin to=\"/login\">Log In</LinkToLogin>\n            <Picture>\n                <source\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    media=\"(min-width: 1440px)\"\n                />\n                <img\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    width={368}\n                    height={521}\n                    alt=\"\"\n                />\n            </Picture>\n        </WrapperRegister>\n    );\n};\n\nconst WrapperRegister = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: #dcebf7;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n    margin-top: 24px;\n\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 133.333% */\n    text-decoration-line: underline;\n`;\n\nconst Picture = styled.picture`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: block;\n        position: absolute;\n        top: 354px;\n        left: 49px;\n    }\n`;\n\nexport default RegisterPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ContainerForm","styled","theme","breakpoints","m","min","tablet","Title","Label","Span","InputForm","Field","errors","touched","InputFormMargin0","s","mobile","Button","Svg","ButtonEye","Error","ErrorMessage","ErrorMes","SvgStatus","error","schema","yup","shape","name","required","email","matches","password","dispatch","useDispatch","useState","icon","setIcon","type","setType","handlerEyeClick","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","placeholder","value","onBlur","onChange","toString","component","width","height","href","sprite","onClick","WrapperRegister","LinkToLogin","NavLink","Picture","l","to","srcSet","register_goose_rocket_desktop2x","media","alt","desktop","bp"],"sourceRoot":""}