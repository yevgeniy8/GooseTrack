{"version":3,"file":"static/js/54.d23d0e04.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedMonth/utils.js","components/Calendar/ChoosedMonth/ChoosedMonth.styled.jsx","components/Calendar/ChoosedMonth/TaskList.jsx","components/Calendar/ChoosedMonth/CalendarTable.jsx","components/Calendar/ChoosedMonth/MonthCalendarHead.styled.jsx","components/Calendar/ChoosedMonth/MonthCalendarHead.jsx","components/Calendar/ChoosedMonth/ChoosedMonth.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/TaskModal/TaskForm/TaskForm.styled.js","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","redux/calendar/calendarSelector.js"],"sourcesContent":["// import moment from 'moment';\n\nexport const DAYS_MOB = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\nexport const DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nexport const getDaysInMonth = date => {\n    // console.log(date);\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n};\n\nexport const range = end => {\n    const { result } = Array.from({ length: end }).reduce(\n        ({ result, current }) => ({\n            result: [...result, current],\n            current: current + 1,\n        }),\n        { result: [], current: 1 }\n    );\n    return result;\n};\n\nexport const sortDays = date => {\n    const dayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    const sortedDays = [...DAYS.slice(dayIndex), ...DAYS.slice(0, dayIndex)];\n    return sortedDays;\n};\n\nexport const datesAreOnSameDay = (first, second) =>\n    first.getFullYear() === second.getFullYear() &&\n    first.getMonth() === second.getMonth() &&\n    first.getDate() === second.getDate();\n\nexport const getMonthYear = date => {\n    const d = date\n        .toDateString('default', {\n            month: 'long',\n        })\n        .split(' ');\n    // console.log(d);\n    return `${d[1]} ${d[3]}`;\n};\n\nexport const nextMonth = (date, cb) => {\n    const mon = date.getMonth();\n    if (mon < 11) {\n        date.setMonth(mon + 1);\n    } else {\n        date.setMonth(0);\n        date.setFullYear(date.getFullYear() + 1);\n    }\n    cb(new Date(date));\n};\n\nexport const prevMonth = (date, cb) => {\n    const mon = date.getMonth();\n    if (mon > 0) {\n        date.setMonth(mon - 1);\n    } else {\n        date.setMonth(11);\n        date.setFullYear(date.getFullYear() - 1);\n    }\n    cb(new Date(date));\n};\n\nexport const getSortedDays = date => {\n    const daysInMonth = range(getDaysInMonth(date));\n    const index = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    const lastIndex = lastDay.getDay();\n\n    return [\n        ...Array(index === 0 ? 6 : index - 1),\n        ...daysInMonth,\n        ...Array(lastIndex === 0 ? 0 : 7 - lastIndex),\n    ];\n};\n\n// export const priorityColors = {\n//     colorLow: '#3E85F3',\n//     bgColorLow: '#CEEEFD',\n//     colorMedium: '#F3B249',\n//     bgColorMedium: '#FCF0D4',\n//     colorHgh: '#EA3D65',\n//     bgColorHigh: '#FFD2DD',\n// };\n","import styled from '@emotion/styled';\n\n\nexport const Table = styled.div`\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    border-radius: 8px;\n    ${props => props.fullheight}\n    ${props =>\n        props.fullheight &&\n        `grid-template-rows: repeat(${props.is28Days ? 4 : 5}, 1fr);`}\n    div {\n        display: flex;\n        justify-content: space-between;\n        flex-direction: column;\n        align-items: flex-end;\n        padding: 4px;\n        overflow: hidden;\n        // max-width: 165px;\n        height: 95px;\n        background-color: white;\n        border: 1px solid rgba(220, 227, 229, 0.8);\n        \n            @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n              max-width: 155px;\n              height: 134px;\n              padding: 8px;\n            };\n        span {\n            font-family: Inter;\n            font-size: 12px;\n            font-weight: 700;\n            line-height: 14px;\n            letter-spacing: 0em;\n            text-align: center;\n            width: 22px;\n            height: 22px;\n            border-radius: 8px;\n            padding: 4px 8px;\n            // margin: 8px 4px 0 0;\n            // height: fit-content;\n            color: #343434;\n                @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n                //   margin: 14px 14px 0 0;\n                  font-size: 16px;\n                  font-weight: 700;\n                  line-height: 18px;\n                  width: 26px;\n                  height: 26px;\n    };\n        }\n\n        span.active {\n            color: #FFF;\n            background-color: #3E85F3;\n        }\n        // span.active::before {\n        //     color: #3e85f3;\n        //     content: 'Today   ';\n        //     font-size: 16px;\n        // }\n    }\n`;\n","// import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n// import { useState } from 'react';\n\nconst TaskList = ({ currentDate, day, tasks, openModal }) => {\n    if (!day) {\n        return;\n    }\n    const formattedDay = day.toString().padStart(2, '0');\n    const date = currentDate + '-' + formattedDay;\n    const filterTasks = tasks.filter(task => task.date === date);\n\n    return (\n        <List>\n            {filterTasks?.map(task => (\n                <Task\n                    onClick={() => {\n                        openModal(task._id);\n                    }}\n                    key={task._id}\n                    color={`color${task.priority}`} //подтянется, когда пропишем цвета в переменных\n                    bg={`bgcolor${task.priority}`} //подтянется, когда пропишем цвета в переменных\n                >\n                    <p>{task.title}</p>\n                </Task>\n            ))}\n        </List>\n    );\n};\n\nexport default TaskList;\n\nconst List = styled.ul`\n    list-style: none;\n    height: 65px;\n    max-width: 44px;\n    padding: 0 2px;\n    margin: 0;\n    overflow: hidden;\n    // overflow-y: auto;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        max-width: 100%;\n        padding: 0 4px;\n    }\n`;\nconst Task = styled.li`\n    padding: 2px 4px;\n    border-radius: 8px;\n    margin-bottom: 8px;\n    max-width: 100%;\n    color: #3E85F3; //временно, чтобы увидеть стили\n    background-color: #CEEEFD; //временно, чтобы увидеть стили\n    // background-color: ${props => props.bg};\n    // color: ${props => props.color};\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 700;\n    line-height: 14px;\n    letter-spacing: 0em;\n    text-align: left;\n    white-space: nowrap; /* Текст не переносится */\n    overflow: hidden; /* Обрезаем всё за пределами блока */\n    text-overflow: ellipsis; /* Добавляем многоточие */\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        font-size: 14px;\n        line-height: 18px;\n        padding: 4px 10px;\n  };\n    `\n// прописать в переменных, чтобы подтянуть цвет динамически\n// формат нужет без камелкейса, т.к. приоритет приходит с мал.буквы\n    \n    export const priorityColors = {\n    colorLow: '#3E85F3',\n    bgColorLow: '#CEEEFD',\n    colorMedium: '#F3B249',\n    bgColorMedium: '#FCF0D4',\n    colorHgh: '#EA3D65',\n    bgColorHigh: '#FFD2DD',\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from 'redux/calendar/calendarOperations';\nimport { selectTasks } from 'redux/calendar/calendarSelector';\n// import styled from '@emotion/styled';\n\nimport { datesAreOnSameDay, getDaysInMonth, getSortedDays } from './utils';\nimport { Table } from './ChoosedMonth.styled';\n// import { useNavigate, useParams } from 'react-router';\nimport { useParams } from 'react-router';\n\nimport { TaskModal } from '../../TaskModal/TaskModal';\nimport TaskList from './TaskList';\nimport { NavLink } from 'react-router-dom';\n// import moment from 'moment';\n\nconst CalendarTable = () => {\n    const { currentDate } = useParams();\n    // const navigate = useNavigate();\n\n    const date = new Date(currentDate);\n\n    const dispatch = useDispatch();\n    const tasks = useSelector(selectTasks);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    // const handleNavToDay = selectedDate => {\n    //     // const day = moment(selectedDate).format('YYYY-MM-DD');\n    //     // localStorage.getItem('day');\n    //     // // localStorage.setItem('type', 'day');\n    //     // localStorage.setItem('date', day);\n    //     navigate(`/calendar/day/${selectedDate}`);\n    //     // console.log(selectedDate); // Sun Oct 01 2023\n    //     // console.log(day); // 2023-10-01\n    // };\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const openModal = () => setModalOpen(true);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    return (\n        <>\n            <Table fullheight={true} is28Days={getDaysInMonth(date) === 28}>\n                {getSortedDays(date).map((day, index) => (\n                    <div\n                        key={index}\n                        id={`${date.getFullYear()}-${\n                            date.getMonth() + 1\n                        }-${day}`}\n                    >\n                        <NavLink\n                            to={`/calendar/day/${currentDate + '-' + day}`}\n                        >\n                            <span\n                                className={`nonDRAG ${\n                                    datesAreOnSameDay(\n                                        new Date(),\n                                        new Date(\n                                            date.getFullYear(),\n                                            date.getMonth(),\n                                            day\n                                        )\n                                    )\n                                        ? 'active'\n                                        : ''\n                                }`}\n                            >\n                                {day}\n                            </span>\n                        </NavLink>\n                        <TaskList\n                            openModal={openModal}\n                            currentDate={currentDate}\n                            day={day}\n                            tasks={tasks}\n                        />\n                        {/* <List>\n                        <Task>Low, very low priority</Task>\n                        <Task>Medium, medium priority</Task>\n                        <Task>High, very high priority</Task>\n                        </List> */}\n                    </div>\n                ))}\n            </Table>\n            {modalOpen && <TaskModal closeModal={closeModal} />}\n        </>\n    );\n};\n\nexport default CalendarTable;\n\n// const Task = styled.li`\n//     padding: 4 8px;\n//     border-radius: 8px;\n//     margin-bottom: 8px;\n//     max-width: 100%;\n//     color: #3E85F3;\n//     background-color: #CEEEFD;\n//     // background-color: ${props => props.bg};\n//     // color: ${props => props.color};\n//     font-family: Inter;\n//     font-size: 10px;\n//     font-weight: 700;\n//     line-height: 14px;\n//     letter-spacing: 0em;\n//     text-align: left;\n//     white-space: nowrap; /* Текст не переносится */\n//     overflow: hidden; /* Обрезаем всё за пределами блока */\n//     text-overflow: ellipsis; /* Добавляем многоточие */\n//      @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n//         font-size: 14px;\n//         line-height: 18px;\n//   };\n//     `\n\n// const List = styled.ul`\n//     list-style: none;\n//     height: 65px;\n//     max-width: 44px;\n//     padding: 0 2px;\n//     margin: 0;\n//     overflow-y: auto;\n//      @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n//         max-width: 100%;\n//         padding: 0 4px; };\n//     `\n\n//     // color={`color${task.priority}`}\n//     // bg={`bgcolor{task.priority}`}\n\n//     export const priorityColors = {\n//     colorLow: '#3E85F3',\n//     bgColorLow: '#CEEEFD',\n//     colorMedium: '#F3B249',\n//     bgColorMedium: '#FCF0D4',\n//     colorHgh: '#EA3D65',\n//     bgColorHigh: '#FFD2DD',\n// }\n","import styled from '@emotion/styled';\n\nexport const WeekdaysList = styled.ul`\n    display: flex;\n    justify-content: space-around;\n    padding: 14px 0;\n    background-color: rgba(255, 255, 255, 1);\n    border: 1px solid rgba(220, 227, 229, 0.8);\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 15px;\n`;\n\nexport const WeekdaysItem = styled.li`\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: left;\n    text-transform: uppercase;\n    /* &:nth-last-child(-n + 2) {\n        color: #3e85f3;\n    } */\n\n    &:nth-last-of-type(-n + 2) {\n        color: #3e85f3;\n    }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { WeekdaysItem, WeekdaysList } from './MonthCalendarHead.styled';\n\nimport { DAYS, DAYS_MOB } from './utils';\n\nconst MonthCalendarHead = () => {\n    \n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    return (\n        <WeekdaysList>\n            {isMobile?DAYS_MOB.map((day, index) => (\n                <WeekdaysItem key={index}>{day}</WeekdaysItem>\n            )):DAYS.map((day, index) => (\n                <WeekdaysItem key={index}>{day}</WeekdaysItem>\n            ))}\n        </WeekdaysList>\n    );\n};\n\nexport default MonthCalendarHead;\n","import CalendarTable from './CalendarTable';\nimport MonthCalendarHead from './MonthCalendarHead';\n\nconst ChoosedMonth = () => {\n    return (\n        <div>\n            <MonthCalendarHead />\n            <CalendarTable />\n        </div>\n    );\n};\n\nexport default ChoosedMonth;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`; \n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Backdrop, Modal } from './Modal.styled';\n\nconst rootModal = document.querySelector('#modal');\n\nconst CreateModal = ({ children, onClose, }) => {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handleClose = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n    return createPortal(\n        <Backdrop onClick={handleClose} >\n            <Modal >\n                    <div>{children}</div>\n            </Modal>\n        </Backdrop>,\n        rootModal\n    );\n};\n\nexport default CreateModal;\n","// import styled from '@emotion/styled'; \nimport styled from 'styled-components';\n\nimport {\n    Form as FormikForm,\n    Field,\n    ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n    position: relative;\n    width: 303px;\n    max-height: 420px;\n    padding: 48px 18px 40px;\n    background-color: #fff;\n   \n\n    border-radius: 8px;\n    border: #fff;\n\n    @media (min-width: 768px) {\n        width: 396px;\n        padding: 40px 28px;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    color: rgba(52, 52, 52, 0.8);\n\n    font-size: 12px;\n    font-family: Inter;\n    font-weight: 500;\n    line-height: 14px;\n`;\n\nexport const InputTitle = styled(Field)`\n    width: 267px;\n    height: 42px;\n    padding: 12px 14px;\n    border-radius: 8px;\n    background: #f6f6f6;\n    border: 1px solid #f6f6f6;\n\n    color: #343434;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    @media (min-width: 768px) {\n        width: 340px;\n        height: 46px;\n        padding: 14px 18px;\n    }\n\n    &::placeholder {\n        opacity: 1;\n        color: #343434;\n        font-size: 14px;\n        font-family: Inter;\n        font-weight: 600;\n        line-height: 18px;\n    }\n`;\n\nexport const TimeWrapper = styled.div`\n    display: flex;\n    gap: 14px;\n    margin-top: 16px;\n\n    @media (min-width: 768px) {\n        margin-top: 18px;\n    }\n`;\n\nexport const InputTime = styled(Field)`\n    width: 126px;\n    height: 42px;\n    padding: 12px 14px;\n    border-radius: 8px;\n    background: #f6f6f6;\n    border: 1px solid #f6f6f6;\n    cursor: pointer;\n\n    color: #343434;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    @media (min-width: 768px) {\n        width: 163px;\n        height: 46px;\n        padding: 14px 18px;\n    }\n\n    &::-webkit-calendar-picker-indicator {\n        display: none;\n    }\n`;\n\nexport const RadioWrapper = styled.div`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const RadioField = styled(Field)`\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n`;\n\nexport const RadioLabel = styled.label`\n    position: relative;\n    padding-left: 16px;\n    display: flex;\n    align-items: center;\n    margin-top: 16px;\n\n    color: #343434;\n    font-size: 12px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 14px;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 18px;\n        margin-top: 28px;\n    }\n`;\n\nexport const RadioSpan = styled.span`\n    position: absolute;\n    left: 0;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: ${({value}) => {\n        switch (value) {\n            case 'low':\n                return '#72C2F8';\n            case 'medium':\n                return '#F3B249';\n            case 'high':\n                return '#EA3D65';\n            default:\n                return 'black';\n        }\n    }};\n\n    ${RadioLabel}:nth-child(1) ${RadioField}:checked + & {\n        outline: 1.2px solid #72c2f8;\n        outline-offset: 1px;\n    }\n\n    ${RadioLabel}:nth-child(2) ${RadioField}:checked + & {\n        outline: 1.2px solid #f3b249;\n        outline-offset: 1px;\n    }\n\n    ${RadioLabel}:nth-child(3) ${RadioField}:checked + & {\n        outline: 1.2px solid #ea3d65;\n        outline-offset: 1px;\n    }\n`;\n\nexport const ButtonWrapper = styled.div`\n    display: flex;\n    gap: 14px;\n    margin-top: 32px;\n`;\n\nexport const ButtonAction = styled.button`\n    display: flex;\n    width: 135px;\n    height: 42px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    padding: 12px;\n\n    border-radius: 8px;\n    border: none;\n    background-color: #3e85f3;\n    cursor: pointer;\n\n    color: #fff;\n    text-align: center;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    transition: background-color 250ms linear;\n\n    &:hover,\n    &:focus {\n        background-color: #2b78ef;\n    }\n\n    @media (min-width: 768px) {\n        width: 182px;\n        height: 48px;\n        padding: 15px;\n    }\n`;\n\nexport const ButtonCancel = styled.button`\n    width: 118px;\n    height: 42px;\n    padding: 12px;\n\n    border-radius: 8px;\n    border: none;\n    background: #efefef;\n    cursor: pointer;\n\n    color: #111;\n    text-align: center;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    transition: background-color 250ms linear;\n\n    &:hover,\n    &:focus {\n        background-color: #e7e3e3;\n    }\n\n    @media (min-width: 768px) {\n        width: 182px;\n        height: 48px;\n        padding: 15px;\n    }\n`;\n\nexport const ButtonCloseWrap = styled.button`\n    position: absolute;\n    top: 14px;\n    right: 18px;\n\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    stroke: #111111;\n\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #2b78ef;\n    }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n    margin-left: 18px;\n    max-width: 100%;\n    color: #da1414;\n    font-size: 12px;\n    font-family: Inter;\n    line-height: 14px;\n`;\n","import { Formik } from 'formik';\n// import * as Yup from 'yup';\n\nimport close from '../../../images/icons.svg';\n\nimport {\n    ButtonAction,\n    ButtonCancel,\n    ButtonCloseWrap,\n    ButtonWrapper,\n    ErrorMessage,\n    Form,\n    InputTime,\n    InputTitle,\n    Label,\n    RadioField,\n    RadioLabel,\n    RadioSpan,\n    RadioWrapper,\n    TimeWrapper,\n} from './TaskForm.styled';\n\nimport { addTask, fetchTasks } from 'redux/calendar/calendarOperations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\n// const TaskSchema = Yup.object().shape({\n//     title: Yup.string()\n//         .max(250, 'Title is too long')\n//         .required('Title is required'),\n//     start: Yup.string().required('Start time is required'),\n//     end: Yup.string()\n//         .required('End time is required')\n//         .test(\n//             'is-greater',\n//             'End time should be greater than start time',\n//             function (value) {\n//                 const { start } = this.parent;\n//                 if (start && value) {\n//                     const startTime = new Date(`2000-01-01T${start}`);\n//                     const endTime = new Date(`2000-01-01T${value}`);\n//                     return endTime > startTime;\n//                 }\n//                 return true;\n//             }\n//         ),\n//     priority: Yup.string()\n//         .oneOf(['low', 'medium', 'high'])\n//         .required('Priority is required'),\n//     date: Yup.date()\n//         .required('Date is required')\n//         .transform((value, originalValue) => {\n//             if (originalValue) {\n//                 const [year, month, day] = originalValue.split('-');\n//                 return new Date(\n//                     `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n//                 );\n//             }\n//             return value;\n//         }),\n//     category: Yup.string()\n//         .oneOf(['to-do', 'in-progress', 'done'])\n//         .required('Category is required'),\n// });\n\nexport const TaskForm = ({ value, onClose, action }) => {\n    const dispatch = useDispatch();\n\n    const userTask = useSelector(state => state.calendar.tasks);\n\n    console.log(userTask);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    // console.log(value);\n    const { currentDay } = useParams();\n    // console.log(currentDay);\n\n    const handleSubmit = (values, actions) => {\n        if (action) {\n            return console.log(action);\n        }\n\n        const obj = {\n            ...values,\n            category: value,\n            date: currentDay,\n        };\n        console.log(obj);\n        dispatch(addTask(obj));\n        onClose();\n    };\n\n    return (\n        <Formik\n            // initialValues=\n            // {{\n            // title: (action === 'edit' && title) || '',\n            // start: (action === 'edit' && start) || '09:00',\n            // end: (action === 'edit' && end) || '10:00',\n            // priority: (action === 'edit' && priority) || 'low',\n            // }}\n            // validationSchema={TaskSchema}\n            initialValues={{\n                // name: ['low', 'medium', 'high'],\n                title: '',\n                start: '',\n                end: '',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                /* and other goodies */\n            }) => (\n                <Form>\n                    <Label>\n                        Title\n                        <InputTitle\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Enter text\"\n                            value={values.title}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                        />\n                        <ErrorMessage name=\"title\" component=\"div\" />\n                    </Label>\n\n                    <TimeWrapper>\n                        <Label>\n                            Start\n                            <InputTime\n                                type=\"time\"\n                                name=\"start\"\n                                value={values.start}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <ErrorMessage name=\"start\" component=\"div\" />\n                        </Label>\n                        <Label>\n                            End\n                            <InputTime\n                                type=\"time\"\n                                name=\"end\"\n                                value={values.end}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <ErrorMessage name=\"end\" component=\"div\" />\n                        </Label>\n                    </TimeWrapper>\n\n                    <RadioWrapper role=\"group\" aria-labelledby=\"my-radio-group\">\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"low\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"low\" />\n                            Low\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"medium\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"medium\" />\n                            Medium\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"high\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"high\" />\n                            High\n                        </RadioLabel>\n                    </RadioWrapper>\n\n                    {/* <button type=\"submit\">Ok</button> */}\n\n                    <ButtonWrapper>\n                        <ButtonAction type=\"submit\">\n                            {action === 'edit' ? 'Edit' : 'Add'}\n                        </ButtonAction>\n                        <ButtonCancel type=\"button\" onClick={onClose}>\n                            Cancel\n                        </ButtonCancel>\n                    </ButtonWrapper>\n\n                    <ButtonCloseWrap\n                        type=\"button\"\n                        aria-label=\"close button\"\n                        onClick={onClose}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <use href={`${close}#x-close`} />\n                        </svg>\n                    </ButtonCloseWrap>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n","import Modal from '../Modal/Modal';\nimport { TaskForm } from './TaskForm/TaskForm';\n\nexport const TaskModal = ({ action, value, closeModal }) => {\n    return (\n        <Modal onClose={closeModal}>\n            <TaskForm action={action} value={value} onClose={closeModal} />\n        </Modal>\n    );\n};\n","export const selectTasks = state => state.calendar.tasks;\n\nexport const selectError = state => state.calendar.error;\n\nexport const selectIsLoading = state => state.calendar.isLoading;\n\nexport const selectUserTask = state => state.calendar.userTask;\n"],"names":["DAYS_MOB","DAYS","getDaysInMonth","date","Date","getFullYear","getMonth","getDate","getSortedDays","end","daysInMonth","Array","from","length","reduce","_ref","result","current","concat","_toConsumableArray","index","getDay","lastIndex","Table","styled","_templateObject","_taggedTemplateLiteral","props","fullheight","is28Days","theme","breakpoints","m","_ref2","currentDate","day","tasks","openModal","toString","padStart","filterTasks","filter","task","_jsx","List","children","map","Task","onClick","_id","color","priority","bg","title","_templateObject2","_ref3","useParams","dispatch","useDispatch","useSelector","selectTasks","useEffect","fetchTasks","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_jsxs","_Fragment","id","NavLink","to","className","first","second","TaskList","TaskModal","closeModal","WeekdaysList","WeekdaysItem","isMobile","useMediaQuery","maxWidth","MonthCalendarHead","CalendarTable","Backdrop","Modal","rootModal","document","querySelector","onClose","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Form","FormikForm","Label","InputTitle","Field","_templateObject3","TimeWrapper","_templateObject4","InputTime","_templateObject5","RadioWrapper","_templateObject6","RadioField","_templateObject7","RadioLabel","_templateObject8","RadioSpan","_templateObject9","value","ButtonWrapper","_templateObject10","ButtonAction","_templateObject11","ButtonCancel","_templateObject12","ButtonCloseWrap","_templateObject13","ErrorMessage","FormikErrorMessage","_templateObject14","TaskForm","action","userTask","state","calendar","console","log","currentDay","Formik","initialValues","start","onSubmit","values","actions","obj","_objectSpread","category","addTask","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","type","name","placeholder","onBlur","onChange","component","role","width","height","href","close"],"sourceRoot":""}