{"version":3,"file":"static/js/761.ccc68502.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport { mobile, tablet, min } from '../../styles/media';\n\nexport const ContainerForm = styled.div`\n    max-width: 335px;\n    max-height: 469px;\n    border-radius: 8px;\n    padding: 40px 24px;\n    background-color: #fff;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    } */\n\n    ${min(tablet)} {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: #111;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    margin-bottom: 8px;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    padding: 14px;\n    width: 100%;\n    height: 46px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    border-color: ${({ errors, touched }) =>\n        touched\n            ? errors\n                ? '#E74A3B;'\n                : '#3CBC81'\n            : 'rgba(220, 227, 229, 0.6)'};\n\n    color: #111;\n    outline: none;\n    font-family: Inter;\n    margin-bottom: 24px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px; /* 112.5% */\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #dce3e5;\n\n        font-weight: 400;\n    }\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        padding: 18px;\n        margin-bottom: 18px;\n\n        font-size: 16px;\n    } */\n\n    ${min(tablet)} {\n        padding: 18px;\n        margin-bottom: 18px;\n        height: 54px;\n        font-size: 16px;\n    }\n`;\n\nexport const InputFormMargin0 = styled(InputForm)`\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        margin-bottom: 0;\n    } */\n    margin-bottom: 0;\n\n    ${min(mobile)} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 287px;\n    margin-top: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 14px;\n    gap: 11px;\n\n    border-radius: 16px;\n    background-color: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    border: none;\n    outline: none;\n\n    color: #fff;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: -0.28px;\n    stroke: white;\n    fill: #3e85f3;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n        color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n        fill 500ms cubic-bezier(0.4, 0, 0.2, 1),\n        stroke 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    } */\n\n    ${min(tablet)} {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n        &:hover {\n            background-color: #1d56ac;\n            color: ${({ theme }) => theme.colors.white};\n            fill: #1d56ac;\n            stroke: white;\n        }\n    }\n`;\n\n// export const Svg = styled.svg`\n//     stroke: white;\n//     fill: #3e85f3;\n//     width: 18px;\n//     height: 18px;\n// `;\n\nexport const ButtonEye = styled.svg`\n    position: absolute;\n    top: 70%;\n    left: 75%;\n    width: 24px;\n    height: 24px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    } */\n\n    ${min(tablet)} {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -37px;\n    left: 0;\n    margin-left: 18px;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const ErrorMes = styled.span`\n    position: absolute;\n    bottom: -37px;\n    left: 18px;\n    color: #3cbc81;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const SvgStatus = styled.svg`\n    position: absolute;\n    fill: ${({ error }) => (!error ? 'green' : 'red')};\n    right: 14px;\n    top: 83%;\n    transform: translateY(-50%);\n`;\n\nexport const Home = styled(NavLink)`\n    margin-bottom: 32px;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n    transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        color: #1d56ac;\n    }\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { BsEyeFill } from 'react-icons/bs';\nimport { BsEyeSlashFill } from 'react-icons/bs';\n\nimport {\n    ContainerForm,\n    Title,\n    Span,\n    InputForm,\n    Button,\n    InputFormMargin0,\n    Error,\n    Label,\n    SvgStatus,\n    ErrorMes,\n    Home,\n    TitleContainer,\n} from '../RegisterForm/RegisterForm.styled';\n\n// import { Svg } from '../RegisterForm/RegisterForm.styled';\nimport { ButtonEye } from '../RegisterForm/RegisterForm.styled';\n\nimport sprite from '../../images/icons.svg';\n\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst schema = yup.object().shape({\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    password: yup.string().min(6).required(),\n});\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n\n    const [icon, setIcon] = useState(<BsEyeFill />);\n    const [type, setType] = useState('password');\n\n    const handlerEyeClick = () => {\n        if (type === 'password') {\n            setType('text');\n            return setIcon(<BsEyeSlashFill />);\n        }\n        setIcon(<BsEyeFill />);\n        setType('password');\n    };\n\n    // console.log(user);\n\n    const initialValues = {\n        email: '',\n        password: '',\n    };\n\n    const handlerSubmit = (values, actions) => {\n        dispatch(login(values));\n        // console.log(values);\n        actions.resetForm();\n    };\n\n    return (\n        <ContainerForm>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handlerSubmit}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                    <Form>\n                        <TitleContainer>\n                            <Title>Log In</Title>\n                            <Home to={'/'}>Home</Home>\n                        </TitleContainer>\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Email</Span>\n                                <InputForm\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"nadiia@gmail.com\"\n                                    value={values.email}\n                                    errors={errors.email}\n                                    touched={touched.email?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                {/* <Error component=\"div\" name=\"email\" /> */}\n\n                                {touched.email &&\n                                    (errors.email ? (\n                                        <Error component=\"div\" name=\"email\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.email && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.email}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.email\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span>Password</Span>\n                                <InputFormMargin0\n                                    type={type}\n                                    name=\"password\"\n                                    placeholder=\"*******\"\n                                    value={values.password}\n                                    errors={errors.password}\n                                    touched={touched.password?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                <ButtonEye onClick={handlerEyeClick}>\n                                    {icon}\n                                </ButtonEye>\n\n                                {/* <Error component=\"div\" name=\"password\" /> */}\n\n                                {touched.password &&\n                                    (errors.password ? (\n                                        <Error\n                                            component=\"div\"\n                                            name=\"password\"\n                                        />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.password && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.password}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.password\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <Button type=\"submit\">\n                            Log In\n                            <svg width=\"20\" height=\"20\">\n                                <use href={`${sprite}#log-in`} />\n                            </svg>\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </ContainerForm>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport login_goose_rocket_desktop from '../images/login_register/login_goose_rocket_desktop.png';\nimport login_goose_rocket_desktop2x from '../images/login_register/login_goose_rocket_desktop@2x.png';\n\nconst LoginPage = () => {\n    return (\n        <WrapperRegister>\n            <LoginForm />\n            <LinkToLogin to=\"/register\">Sign Up</LinkToLogin>\n            <Picture>\n                <source\n                    srcSet={\n                        (login_goose_rocket_desktop,\n                        login_goose_rocket_desktop2x)\n                    }\n                    media=\"(min-width: 1440px)\"\n                />\n                <img\n                    srcSet={\n                        (login_goose_rocket_desktop,\n                        login_goose_rocket_desktop2x)\n                    }\n                    width={368}\n                    height={521}\n                    alt=\"\"\n                />\n            </Picture>\n        </WrapperRegister>\n    );\n};\n\nconst WrapperRegister = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: #dcebf7;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n    width: 287px;\n    text-align: center;\n    margin-top: 18px;\n    display: block;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 14px;\n    text-decoration-line: underline;\n    padding: 14px 103px;\n    border-radius: 16px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 24px;\n        font-size: 18px;\n        line-height: 24px;\n        width: 400px;\n        &:hover {\n            background-color: #1d56ac;\n            color: ${({ theme }) => theme.colors.white};\n        }\n    }\n`;\n\nconst Picture = styled.picture`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: block;\n        position: absolute;\n        top: 230px;\n        right: 60px;\n    }\n`;\n\nexport default LoginPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoints","m","min","tablet","Title","_templateObject2","Label","_templateObject3","Span","_templateObject4","InputForm","Field","_templateObject5","_ref2","errors","touched","_ref3","InputFormMargin0","_templateObject6","_ref4","s","mobile","Button","_templateObject7","_ref5","_ref6","colors","white","ButtonEye","_templateObject8","_ref7","Error","ErrorMessage","_templateObject9","ErrorMes","_templateObject10","SvgStatus","_templateObject11","_ref8","error","Home","NavLink","_templateObject12","TitleContainer","_templateObject13","schema","yup","shape","email","matches","required","password","dispatch","useDispatch","_useState","useState","_jsx","BsEyeFill","_useState2","_slicedToArray","icon","setIcon","_useState3","_useState4","type","setType","handlerEyeClick","BsEyeSlashFill","children","Formik","initialValues","validationSchema","onSubmit","values","actions","login","resetForm","_touched$email","_touched$password","handleChange","handleBlur","handleSubmit","isSubmitting","_jsxs","Form","to","htmlFor","name","placeholder","value","toString","onBlur","onChange","component","width","height","href","concat","sprite","onClick","WrapperRegister","LinkToLogin","Picture","l","LoginForm","srcSet","login_goose_rocket_desktop2x","media","alt","desktop","bp"],"sourceRoot":""}