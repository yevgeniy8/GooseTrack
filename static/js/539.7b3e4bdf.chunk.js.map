{"version":3,"file":"static/js/539.7b3e4bdf.chunk.js","mappings":"wRAKaA,EAAgBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0YAUhB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,mBAAmB,IASzDC,GAAkBP,EAAAA,EAAAA,GAAOQ,EAAAA,EAAAA,IAAPR,CAAkBS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yLASpCQ,EAAeV,EAAAA,EAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+VASd,SAAAU,GAAQ,OAAAA,EAALR,MAAkBC,OAAOC,mBAAmB,IAQ1DO,EAAYb,EAAAA,EAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kLAYtBa,EAAYf,EAAAA,EAAAA,MAAYgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0MAaxBe,EAAUjB,EAAAA,EAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,iQAepBiB,EAAWnB,EAAAA,EAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,yNACpB,SAAAmB,GAAQ,OAAAA,EAALjB,MAAkBC,OAAOiB,WAAW,IAWvCC,EAAQvB,EAAAA,EAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,6LAChB,SAAAuB,GAAQ,OAAAA,EAALrB,MAAkBC,OAAOiB,WAAW,IAUvCI,GAAa1B,EAAAA,EAAAA,GAAO2B,EAAAA,GAAP3B,CAAY4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,4RAezB2B,GAAa7B,EAAAA,EAAAA,GAAOQ,EAAAA,EAAAA,IAAPR,CAAkB8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,4OAmB/B6B,EAAQ/B,EAAAA,EAAAA,MAAYgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,mCAIpB+B,EAAOjC,EAAAA,EAAAA,KAAWkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,mNAElB,SAAAiC,GAAQ,OAAAA,EAAL/B,MAAkBC,OAAOiB,WAAW,IAUvCc,EAAYpC,EAAAA,EAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,4LAWtBoC,GAAYtC,EAAAA,EAAAA,GAAOuC,EAAAA,GAAPvC,CAAawC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,spBAerB,SAAAuC,GAAQ,OAAAA,EAALrC,MAAkBC,OAAOiB,WAAW,IAsB3CoB,EAAW1C,EAAAA,EAAAA,IAAU2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,yFAOrB0C,EAAU5C,EAAAA,EAAAA,IAAU6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,yFAMpB4C,GAAS9C,EAAAA,EAAAA,GAAOQ,EAAAA,EAAAA,OAAPR,CAAqB+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,omBAqBf,SAAA8C,GAAQ,OAAAA,EAAL5C,MAAkBC,OAAO4C,kBAAkB,IACzD,SAAAC,GAAQ,OAAAA,EAAL9C,MAAkBC,OAAO8C,KAAK,IAOrCC,GAAQpD,EAAAA,EAAAA,GAAOqD,EAAAA,GAAPrD,CAAoBsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,uS,UC7P5BqD,EAAa,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,IAAK,E,qECenDC,EAAAA,EAAAA,SAAAA,QAAyB,oDAElB,IAAMC,GAAW,SAAHzD,GAAmD,IAA7C0D,EAAgB1D,EAAhB0D,iBAAkBC,EAAS3D,EAAT2D,UAAWC,EAAQ5D,EAAR4D,SACpDC,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAY,eAAA1D,GAAA2D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGqB,OAF7CrB,EAAiBc,EAAEQ,OAAOC,MAAM,KAC1BR,EAAW,IAAIS,UACZC,OAAO,SAAUX,EAAEQ,OAAOC,MAAM,IAAIJ,EAAAE,KAAA,EAGnCvB,EAAAA,EAAAA,MAAY,cAAeiB,GAAU,KAAD,EAAAC,EAAAG,EAAAO,KADlCT,EAAOD,EAAfW,KAAQV,QAEZT,EAAUS,EAAQhB,WAAW,wBAAAkB,EAAAS,OAAA,GAAAf,EAAA,KAChC,gBARiBgB,GAAA,OAAA9E,EAAA+E,MAAA,KAAAC,UAAA,KAUlB,OACIC,EAAAA,EAAAA,MAACtF,EAAe,CACZuF,QAAS,CAAEC,GAAI,IACfC,WAAY,CAAEC,KAAM,UAAWC,SAAU,GAAIC,SAAA,EAE7CC,EAAAA,EAAAA,KAAC1F,EAAY,CAAAyF,UACTC,EAAAA,EAAAA,KAACvF,EAAS,CAACwF,IAAKjC,GAAUN,GAAawC,EAAeC,IAAI,cAE9DH,EAAAA,EAAAA,KAACrF,EAAS,CACNyF,KAAK,OACLC,SAAUnC,EACVoC,KAAK,SACLC,OAAO,sCAEXP,EAAAA,EAAAA,KAACnF,EAAO,CAAC2F,MAAM,KAAKC,OAAO,KAAIV,UAC3BC,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAExBZ,EAAAA,EAAAA,KAACjF,EAAQ,CAAAgF,SAAEpC,GAAY,eACvBqC,EAAAA,EAAAA,KAAC7E,EAAK,CAAA4E,SAAC,WAGnB,ECjCA,I,MAAA,GAfA,SAAqBc,EAAQC,EAASC,GAClC,OAAIF,EAAOE,IAAcD,EAAQC,IAEzBf,EAAAA,EAAAA,KAACxD,EAAO,CAACgE,MAAO,GAAIC,OAAQ,GAAGV,UAC3BC,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,sBAGrBE,EAAQC,IAEXf,EAAAA,EAAAA,KAAC1D,EAAQ,CAACkE,MAAO,GAAIC,OAAQ,GAAGV,UAC5BC,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAHzB,CAOX,E,WCDA,GAXeI,GAAAA,KAAaC,MAAM,CAC9BX,KAAMU,GAAAA,KAAaE,IAAI,IAAIC,WAC3BC,MAAOJ,GAAAA,KAEFI,QACAC,QARW,8CAQU,iBACrBF,WACLG,SAAUN,GAAAA,KAAWE,IAAI,IAAIK,KAAQ,uCACrCC,MAAOR,GAAAA,KAAaK,QAVJ,wBAWhBI,MAAOT,GAAAA,KAAaE,IAAI,M,gCCTfQ,I,SAAmB9H,EAAAA,EAAAA,GAAO+H,KAAP/H,CAAuBC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qrBAqC1C8H,GAAkBhI,EAAAA,EAAAA,IAAUS,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,03GChBzC+H,EAAAA,GAAAA,gBAAe,KAAMC,GAAAA,GACd,IAAMC,GAAW,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBrE,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDsE,EAAapE,EAAA,GAAEL,EAAgBK,EAAA,GAEhCR,GAAO6E,EAAAA,EAAAA,IAAYhF,GAEnBiF,EAAgB,CAClB9B,KAAMhD,EAAKgD,MAAQ,GACnBc,MAAO9D,EAAK8D,OAAS,GACrBI,MAAOlE,EAAKkE,OAAS,GACrBC,MAAOnE,EAAKmE,OAAS,GACrBH,SAAUhE,EAAKgE,UAAY,IAAIC,MAmBnC,OACI9B,EAAAA,EAAAA,MAAC9F,EAAa,CAAAoG,SAAA,EACVC,EAAAA,EAAAA,KAACxC,GAAQ,CACLE,UAAWJ,EAAKI,UAChBC,SAAUL,EAAKgD,KACf7C,iBAAkBA,KAEtBuC,EAAAA,EAAAA,KAACqC,EAAAA,GAAM,CACHD,cAAeA,EACfE,iBAAkBC,GAClBC,SA1BS,SAAHzI,EAA6C0I,GAAa,IAApDnC,EAAIvG,EAAJuG,KAAMkB,EAAKzH,EAALyH,MAAOJ,EAAKrH,EAALqH,MAAOK,EAAK1H,EAAL0H,MAAOH,EAAQvH,EAARuH,SACzC9C,EAAW,IAAIS,SACrBT,EAASU,OAAO,OAAQoB,GACxB9B,EAASU,OAAO,QAASkC,GACzB5C,EAASU,OAAO,QAASsC,GACzBhD,EAASU,OAAO,QAASuC,GACzBjD,EAASU,OAAO,WAAYoC,GACxBY,GACA1D,EAASU,OAAO,SAAUgD,GAG9BF,GAASU,EAAAA,EAAAA,IAASlE,GAGtB,EAYmCuB,SAEtB,SAAAvF,GAQM,IAPHqG,EAAMrG,EAANqG,OACAC,EAAOtG,EAAPsG,QACA6B,EAAMnI,EAANmI,OACAC,EAAKpI,EAALoI,MACA1E,EAAY1D,EAAZ0D,aACA2E,EAAarI,EAAbqI,cACAC,EAAetI,EAAfsI,gBAEA,OACIrD,EAAAA,EAAAA,MAACnE,EAAU,CAAAyE,SAAA,EACPN,EAAAA,EAAAA,MAAChE,EAAU,CACPiE,QAAS,CAAEC,GAAI,IACfC,WAAY,CAAEC,KAAM,UAAWC,SAAU,GAAIC,SAAA,EAE7CC,EAAAA,EAAAA,KAAChE,EAAS,CAAA+D,UACNN,EAAAA,EAAAA,MAAC9D,EAAK,CAACoH,QAAQ,GAAEhD,SAAA,EACbC,EAAAA,EAAAA,KAACnE,EAAI,CAAAkE,SAAC,eACNC,EAAAA,EAAAA,KAAC9D,EAAS,CACNkE,KAAK,OACLE,KAAK,OACL0C,YAAY,kBACZ3C,SAAUnC,EACV+E,MAAON,EAAOrC,KACd4C,UACIrC,EAAOP,MAAQQ,EAAQR,KACjB,cACAQ,EAAQR,KACR,cACA,MAGdN,EAAAA,EAAAA,KAAChD,EAAK,CAACmG,UAAU,MAAM7C,KAAK,SAC3B8C,GAAYvC,EAAQC,EAAS,cAGtCd,EAAAA,EAAAA,KAAChE,EAAS,CAAA+D,UACNN,EAAAA,EAAAA,MAAC9D,EAAK,CAACoH,QAAQ,OAAMhD,SAAA,EACjBC,EAAAA,EAAAA,KAACnE,EAAI,CAAAkE,SAAC,eACNC,EAAAA,EAAAA,KAAC4B,GAAe,CAAA7B,UACZC,EAAAA,EAAAA,KAAC0B,GAAgB,CACbpB,KAAK,WACL+C,SACI,IAAI9B,KAAKoB,EAAOrB,WAChB,IAAIC,KAER+B,WAAW,aACXC,QAAS,IAAIhC,KACbiC,OAAO,KACPC,kBAAgB,EAChBC,wBAAsB,EACtBR,UACIrC,EAAOS,UACPR,EAAQQ,SACF,cACAR,EAAQQ,SACR,cACA,GAEVqC,cAAe,SAAAC,GAAS,OACpBA,EAAUC,OAAO,EAAE,EAKvBxD,SAAU,SAAAyD,GACNjB,EACI,WACAiB,EAER,EACAC,OAAQ,WACJjB,EACI,YACA,EAER,OAGR9C,EAAAA,EAAAA,KAAChD,EAAK,CACFmG,UAAU,MACV7C,KAAK,aAER8C,GACGvC,EACAC,EACA,kBAIZd,EAAAA,EAAAA,KAAChE,EAAS,CAAA+D,UACNN,EAAAA,EAAAA,MAAC9D,EAAK,CAACoH,QAAQ,GAAEhD,SAAA,EACbC,EAAAA,EAAAA,KAACnE,EAAI,CAAAkE,SAAC,WACNC,EAAAA,EAAAA,KAAC9D,EAAS,CACNkE,KAAK,QACLE,KAAK,QACL0C,YAAY,mBAEZC,MAAON,EAAOvB,MACd8B,UACIrC,EAAOO,OAASN,EAAQM,MAClB,cACAN,EAAQM,MACR,cACA,MAGdpB,EAAAA,EAAAA,KAAChD,EAAK,CAACmG,UAAU,MAAM7C,KAAK,UAC3B8C,GAAYvC,EAAQC,EAAS,eAGtCd,EAAAA,EAAAA,KAAChE,EAAS,CAAA+D,UACNN,EAAAA,EAAAA,MAAC9D,EAAK,CAACoH,QAAQ,GAAEhD,SAAA,EACbC,EAAAA,EAAAA,KAACnE,EAAI,CAAAkE,SAAC,WACNC,EAAAA,EAAAA,KAAC9D,EAAS,CACNkE,KAAK,MACLE,KAAK,QACL0C,YAAY,0BAEZC,MAAON,EAAOnB,MACd0B,UAAW,CACPrC,EAAOW,OAASV,EAAQU,MAClB,cACAV,EAAQU,MACR,cACA,OAGdxB,EAAAA,EAAAA,KAAChD,EAAK,CAACmG,UAAU,MAAM7C,KAAK,UAC3B8C,GAAYvC,EAAQC,EAAS,eAGtCd,EAAAA,EAAAA,KAAChE,EAAS,CAAA+D,UACNN,EAAAA,EAAAA,MAAC9D,EAAK,CAACoH,QAAQ,GAAEhD,SAAA,EACbC,EAAAA,EAAAA,KAACnE,EAAI,CAAAkE,SAAC,WACNC,EAAAA,EAAAA,KAAC9D,EAAS,CACNkE,KAAK,OACLE,KAAK,QACL0C,YAAY,wBACZC,MAAON,EAAOlB,MAEdyB,UACIrC,EAAOY,OAASX,EAAQW,MAClB,cACAX,EAAQW,MACR,cACA,MAGdzB,EAAAA,EAAAA,KAAChD,EAAK,CAACmG,UAAU,MAAM7C,KAAK,UAC3B8C,GAAYvC,EAAQC,EAAS,kBAK1Cd,EAAAA,EAAAA,KAACtD,EAAM,CACHgD,QAAS,CAAEC,GAAI,IACfC,WAAY,CAAEC,KAAM,UAAWC,SAAU,GACzCM,KAAK,SACL4D,UAAWpB,EAAM7C,SACpB,mBAKb,MAIhB,ECxOA,GAJoB,WAChB,OAAOC,EAAAA,EAAAA,KAAC+B,GAAQ,GACpB,C","sources":["components/UserForm/UserForm.styled.jsx","redux/auth/authSelectors.js","components/UserForm/UserInfo.jsx","components/UserForm/helpers/handleInput.js","components/UserForm/schemas/userSchema.js","components/UserForm/ReactDatePickerCalendar.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form } from 'formik';\nimport { Field, ErrorMessage } from 'formik';\nimport { motion } from 'framer-motion';\n\nexport const MainContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 299px;\n    padding-top: 59px;\n    padding-left: 18px;\n    padding-right: 18px;\n    padding-bottom: 40px;\n    border-radius: 16px;\n    background-color:${({ theme }) => theme.colors.backgroundSecondary};\n    @media (min-width: 768px) {\n        max-width: 704px;\n    }\n    @media (min-width: 1440px) {\n        max-width: 1087px;\n    }\n`;\n\nexport const AvatarContainer = styled(motion.div)`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 40px;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const ImgContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 18px;\n    width: 72px;\n    height: 76px;\n    border: 2px solid #3e85f3;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    @media (min-width: 768px) {\n        width: 124px;\n        height: 124px;\n        margin-bottom: 20px;\n    }\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 100%;\n    height: 100%;\n    /* width: 48px;\n    height: 48px; */\n    border-radius: 50%;\n\n    object-fit: cover;\n    object-position: 50% 50%;\n    \n`;\n\nexport const InputFile = styled.input`\n    position: absolute;\n    top: 39px;\n    left: 32px;\n    width: 50px;\n    opacity: 0;\n    z-index: 2;\n    @media (min-width: 768px) {\n        top: 114px;\n        left: 62px;\n    }\n`;\n\nexport const SvgPlus = styled.svg`\n    stroke: white;\n    fill: #3e85f3;\n    position: absolute;\n    top: 60px;\n    left: 48px;\n    cursor: pointer;\n    @media (min-width: 768px) {\n        top: 112px;\n        left: 84px;\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const UserName = styled.h2`\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.285;\n    @media (min-width: 768px) {\n        margin-bottom: 8px;\n        font-size: 18px;\n    }\n`;\n\nexport const UserP = styled.p`\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-size: 12px;\n    font-weight: 600;\n    font-family: Inter;\n    line-height: 1.1666;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin: 0 auto;\n    @media (min-width: 768px) {\n        max-width: 354px;\n        margin: 0 auto;\n    }\n    @media (min-width: 1440px) {\n        max-width: 758px;\n    }\n`;\n\nexport const FieldsWrap = styled(motion.div)`\n    width: 100%;\n    @media (min-width: 1440px) {\n        max-width: 758px;\n        display: grid;\n        grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n        justify-content: center;\n        gap: 18px 50px;\n    }\n`;\n// export const Wrapper = styled.div`\n//     width: 299px;\n//     @media (min-width: 768px) {\n//         max-width: 354px;\n//     }\n//     @media (min-width: 1140px) {\n//     }\n// `;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-size: 12px;\n    line-height: 1.166;\n    margin-bottom: 8px;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n    line-height: 1.285;\n`;\n\nexport const LabelWrap = styled.div`\n    width: 100%;\n    margin-bottom: 18px;\n    @media (min-width: 768px) {\n        margin-bottom: 24px;\n    }\n    @media (min-width: 1440px) {\n        width: 354px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    outline: none;\n    line-height: 1.28;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: ${({ theme }) => theme.colors.textPrimary};\n        font-weight: 600;\n        font-size: 14px;\n    }\n\n    &.input-error {\n        border: 1px solid #e74a3b;\n    }\n\n    &.input-valid {\n        border: 1px solid #3cbc81;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: #111;\n            font-weight: 600;\n            font-size: 16px;\n        }\n    }\n`;\n\nexport const IconDone = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #3cbc81;\n`;\n\nexport const IconErr = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #e74a3b;\n`;\nexport const Button = styled(motion.button)`\n    margin-top: 30px;\n    /* width: 195px; */\n    padding: 14px 50px;\n    align-self: center;\n    border: none;\n    outline: none;\n\n    border-radius: 16px;\n    background: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    color: #fff;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.333;\n    letter-spacing: -0.36px;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n        color: ${({ theme }) => theme.colors.white};\n    }\n    @media (min-width: 768px) {\n        padding: 15px 84px;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -28px;\n    left: 0;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 14px;\n    @media (min-width: 768px) {\n        bottom: -33px;\n        left: 6px;\n    }\n`;\n","export const selectUser = state => state.auth.user;","import React from 'react';\nimport avatarDefault from '../../images/Avatar.png';\nimport sprite from '../../images/icons.svg';\nimport axios from 'axios';\nimport {\n    AvatarContainer,\n    ImgAvatar,\n    ImgContainer,\n    InputFile,\n    SvgPlus,\n    UserName,\n    UserP,\n} from './UserForm.styled';\nimport { useState } from 'react';\n\naxios.defaults.baseURL = 'https://goose-track-backend-q3re.onrender.com/api';\n\nexport const UserInfo = ({ setCurrentAvatar, avatarURL, userName }) => {\n    const [avatar, setAvatar] = useState(null);\n\n    const handleChange = async e => {\n        setCurrentAvatar(e.target.files[0]);\n        const formData = new FormData();\n        formData.append('avatar', e.target.files[0]);\n        const {\n            data: { newUser },\n        } = await axios.patch('/users/edit', formData);\n        setAvatar(newUser.avatarURL);\n    };\n\n    return (\n        <AvatarContainer\n            animate={{ y: -50 }}\n            transition={{ ease: 'easeOut', duration: 2 }}\n        >\n            <ImgContainer>\n                <ImgAvatar src={avatar || avatarURL || avatarDefault} alt=\"avatar\" />\n            </ImgContainer>\n            <InputFile\n                type=\"file\"\n                onChange={handleChange}\n                name=\"avatar\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n            />\n            <SvgPlus width=\"14\" height=\"14\">\n                <use href={`${sprite}#icon-image`} />\n            </SvgPlus>\n            <UserName>{userName || 'User Name'}</UserName>\n            <UserP>User</UserP>\n        </AvatarContainer>\n    );\n};\n","import { IconErr, IconDone } from \"../UserForm.styled\";\nimport sprite from '../../../images/icons.svg';\n\nfunction handleInput(errors, touched, fieldName) {\n    if (errors[fieldName] && touched[fieldName]) {\n        return (\n            <IconErr width={24} height={24}>\n                <use href={`${sprite}#error-outline`} />\n            </IconErr>\n        );\n    } else if (touched[fieldName]) {\n        return (\n            <IconDone width={24} height={24}>\n                <use href={`${sprite}#done`} />\n            </IconDone>\n        );\n    }\n}\nexport default handleInput;","import * as yup from 'yup';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegexp = /^\\+\\d{1,15}\\d{1,15}$/;\n\nconst schema = yup.object().shape({\n    name: yup.string().max(16).required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    birthday: yup.date().max(new Date(), 'Birthday must be earlier than today'),\n    phone: yup.string().matches(phoneRegexp),\n    skype: yup.string().max(16),\n});\nexport default schema;","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styled from '@emotion/styled';\n\n\nexport const DatePickerStyled = styled(ReactDatePicker)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    outline: none;\n    font-family: Inter;\n\n    line-height: 1.28;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #111;\n        font-weight: 600;\n        font-size: 14px;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: #111;\n            font-weight: 600;\n            font-size: 16px;\n        }\n        &.input-error {\n        border: 1px solid #e74a3b;\n    }\n\n    &.input-valid {\n        border: 1px solid #3cbc81;\n    }\n    }\n`;\nexport const DatePickerWrapp = styled.div`\n    .react-datepicker-wrapper {\n        display: block;\n    }\n    .react-datepicker {\n        position: absolute;\n        top: 34px;\n        left: 27px;\n\n        @media (min-width: 768px) {\n            top: -60px;\n            left: 110px;\n        }\n        background-color: #3e85f3;\n        border-radius: 16px;\n        color: #fff;\n        overflow: hidden;\n        border: none;\n        width: 327px;\n        height: 318px;\n        display: flex;\n        justify-content: center;\n        font-size: 18px;\n        line-height: 1.3;\n\n        @media (min-width: 768px) {\n            width: 373px;\n            height: 354px;\n            font-size: 22px;\n            line-height: 1.3;\n        }\n\n        &__header {\n            background-color: #3e85f3;\n            color: #fff;\n            border-bottom:1px solid rgba(255, 255, 255, 0.20);\n        }\n        &__month-container {\n            background-color: #3e85f3;\n        }\n\n        &__current-month {\n            font-size: 24px;\n            text-align: center;\n            font-family: Inter;\n            font-weight: 600;\n            line-height: 1.666;\n        }\n        &__day {\n            color: #fff;\n            width: 40px;\n            height: 40px;\n            font-size: 14px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            @media (min-width: 768px) {\n                font-size: 18px;\n            }\n            &:hover {\n                border-radius: 50%;\n                background-color: #fff;\n                color: #3e85f3;\n                opacity: 0.7;\n            }\n            &--weekend {\n                opacity: 40%;\n            }\n\n            &--selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n\n                padding: 12px 15px;\n                text-align: center;\n                background-color: white;\n                color: #3e85f3;\n            }\n            &--keyboard-selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n            }\n        }\n        &__day-name {\n            color: #fff;\n            width: 40px;\n        }\n        &__current-month {\n            color: #fff;\n        }\n\n        &__navigation--years {\n            background-color: #fff;\n            border-radius: 50%;\n            width: 15px;\n            height: 15px;\n            margin: 5px auto;\n            &:hover {\n                background-color: #3e85f3;\n                border: 1px solid #fff;\n            }\n        }\n        &__year-option {\n            background-color: #3e85f3;\n            color: #fff;\n            &:hover {\n                background-color: #3e85f3;\n                font-size: 14px;\n                font-weight: 700;\n            }\n        }\n        &__year-dropdown {\n            &::-webkit-scrollbar {\n                width: 15px;\n                height: 20px;\n                background: #3e85f3;\n                border-radius: 8px;\n            }\n            &::-webkit-scrollbar-thumb {\n                background: #fff;\n                border-radius: 8px;\n            }\n        }\n        &__week {\n            \n            display: flex;\n        };\n        &__month{\n            margin:0;\n            padding-bottom:9px;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { FieldsWrap } from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { editUser } from 'redux/auth/authOperations';\nimport { UserInfo } from './UserInfo';\nimport handleInput from './helpers/handleInput';\nimport schema from './schemas/userSchema';\nimport { enGB } from 'date-fns/esm/locale';\nimport { registerLocale } from 'react-datepicker';\nimport {\n    Button,\n    Error,\n    InputForm,\n    Label,\n    LabelWrap,\n    MainContainer,\n    Span,\n    StyledForm,\n} from './UserForm.styled';\nimport {\n    DatePickerStyled,\n    DatePickerWrapp,\n} from './ReactDatePickerCalendar.styled';\n\nregisterLocale('en', enGB);\nexport const UserForm = () => {\n    const dispatch = useDispatch();\n    const [currentAvatar, setCurrentAvatar] = useState(null);\n\n    const user = useSelector(selectUser);\n\n    const initialValues = {\n        name: user.name || '',\n        email: user.email || '',\n        phone: user.phone || '',\n        skype: user.skype || '',\n        birthday: user.birthday || new Date(),\n    };\n\n    const handleSubmit = ({ name, phone, email, skype, birthday }, actions) => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('email', email);\n        formData.append('phone', phone);\n        formData.append('skype', skype);\n        formData.append('birthday', birthday);\n        if (currentAvatar) {\n            formData.append('avatar', currentAvatar);\n        }\n\n        dispatch(editUser(formData));\n\n        // actions.resetForm();\n    };\n\n    return (\n        <MainContainer>\n            <UserInfo\n                avatarURL={user.avatarURL}\n                userName={user.name}\n                setCurrentAvatar={setCurrentAvatar}\n            />\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n            >\n                {({\n                    errors,\n                    touched,\n                    values,\n                    dirty,\n                    handleChange,\n                    setFieldValue,\n                    setFieldTouched,\n                }) => {\n                    return (\n                        <StyledForm>\n                            <FieldsWrap\n                                animate={{ y: -50 }}\n                                transition={{ ease: 'easeOut', duration: 2 }}\n                            >\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>User name</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Enter your name\"\n                                            onChange={handleChange}\n                                            value={values.name}\n                                            className={\n                                                errors.name && touched.name\n                                                    ? 'input-error'\n                                                    : touched.name\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"name\" />\n                                        {handleInput(errors, touched, 'name')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"name\">\n                                        <Span> Birthday</Span>\n                                        <DatePickerWrapp>\n                                            <DatePickerStyled\n                                                name=\"birthday\"\n                                                selected={\n                                                    new Date(values.birthday) ||\n                                                    new Date()\n                                                }\n                                                dateFormat=\"yyyy/MM/dd\"\n                                                maxDate={new Date()}\n                                                locale=\"en\"\n                                                showYearDropdown\n                                                scrollableYearDropdown\n                                                className={\n                                                    errors.birthday &&\n                                                    touched.birthday\n                                                        ? 'input-error'\n                                                        : touched.birthday\n                                                        ? 'input-valid'\n                                                        : ''\n                                                }\n                                                formatWeekDay={nameOfDay =>\n                                                    nameOfDay.charAt(0)\n                                                }\n                                                // showYearDropdown\n                                                // yearDropdownItemNumber={30}\n                                                // scrollableYearDropdown\n                                                onChange={date => {\n                                                    setFieldValue(\n                                                        'birthday',\n                                                        date\n                                                    );\n                                                }}\n                                                onBlur={() => {\n                                                    setFieldTouched(\n                                                        'birthday',\n                                                        true\n                                                    );\n                                                }}\n                                            />\n                                        </DatePickerWrapp>\n                                        <Error\n                                            component=\"div\"\n                                            name=\"birthday\"\n                                        />\n                                        {handleInput(\n                                            errors,\n                                            touched,\n                                            'birthday'\n                                        )}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Email</Span>\n                                        <InputForm\n                                            type=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter your email\"\n                                            // onChange={handleChange}\n                                            value={values.email}\n                                            className={\n                                                errors.email && touched.email\n                                                    ? 'input-error'\n                                                    : touched.email\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"email\" />\n                                        {handleInput(errors, touched, 'email')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Phone</Span>\n                                        <InputForm\n                                            type=\"tel\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter your phone number\"\n                                            // onChange={handleChange}\n                                            value={values.phone}\n                                            className={[\n                                                errors.phone && touched.phone\n                                                    ? 'input-error'\n                                                    : touched.phone\n                                                    ? 'input-valid'\n                                                    : '',\n                                            ]}\n                                        />\n                                        <Error component=\"div\" name=\"phone\" />\n                                        {handleInput(errors, touched, 'phone')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Skype</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"skype\"\n                                            placeholder=\"Add your skype number\"\n                                            value={values.skype}\n                                            // onChange={handleChange}\n                                            className={\n                                                errors.skype && touched.skype\n                                                    ? 'input-error'\n                                                    : touched.skype\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"skype\" />\n                                        {handleInput(errors, touched, 'skype')}\n                                    </Label>\n                                </LabelWrap>\n                            </FieldsWrap>\n\n                            <Button\n                                animate={{ y: -25 }}\n                                transition={{ ease: 'easeOut', duration: 2 }}\n                                type=\"submit\"\n                                disabled={!dirty}\n                            >\n                                Save changes\n                            </Button>\n                        </StyledForm>\n                    );\n                }}\n            </Formik>\n        </MainContainer>\n    );\n};\n","import { UserForm } from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n    return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","backgroundSecondary","AvatarContainer","motion","_templateObject2","ImgContainer","_templateObject3","_ref2","ImgAvatar","_templateObject4","InputFile","_templateObject5","SvgPlus","_templateObject6","UserName","_templateObject7","_ref3","textPrimary","UserP","_templateObject8","_ref4","StyledForm","Form","_templateObject9","FieldsWrap","_templateObject10","Label","_templateObject11","Span","_templateObject12","_ref5","LabelWrap","_templateObject13","InputForm","Field","_templateObject14","_ref6","IconDone","_templateObject15","IconErr","_templateObject16","Button","_templateObject17","_ref7","backgroundBtnHover","_ref8","white","Error","ErrorMessage","_templateObject18","selectUser","state","auth","user","axios","UserInfo","setCurrentAvatar","avatarURL","userName","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","_yield$axios$patch","newUser","wrap","_context","prev","next","target","files","FormData","append","sent","data","stop","_x","apply","arguments","_jsxs","animate","y","transition","ease","duration","children","_jsx","src","avatarDefault","alt","type","onChange","name","accept","width","height","href","concat","sprite","errors","touched","fieldName","yup","shape","max","required","email","matches","birthday","Date","phone","skype","DatePickerStyled","ReactDatePicker","DatePickerWrapp","registerLocale","enGB","UserForm","dispatch","useDispatch","currentAvatar","useSelector","initialValues","Formik","validationSchema","schema","onSubmit","actions","editUser","values","dirty","setFieldValue","setFieldTouched","htmlFor","placeholder","value","className","component","handleInput","selected","dateFormat","maxDate","locale","showYearDropdown","scrollableYearDropdown","formatWeekDay","nameOfDay","charAt","date","onBlur","disabled"],"sourceRoot":""}