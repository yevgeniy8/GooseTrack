{"version":3,"file":"static/js/106.a5465292.chunk.js","mappings":"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","sources":["images/icons.svg","components/UserForm/UserForm.styled.jsx","redux/auth/authSelectors.js","components/UserForm/ReactDatePickerCalendar.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14, _symbol15, _symbol16, _symbol17, _symbol18, _symbol19, _symbol20, _symbol21, _symbol22, _symbol23;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 9v0 0c9 0 13 7 13 7s-4 7-13 7c-9 0-13-7-13-7s4-7 13-7zM16 10c-8 0-11.8 6-11.8 6s3.8 6 11.8 6c8 0 11.8-6 11.8-6s-3.8-6-11.8-6v0 0zM16 20v0 0c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4zM16 19c1.657 0 3-1.343 3-3s-1.343-3-3-3c-1.657 0-3 1.343-3 3s1.343 3 3 3v0 0zM16 17c0.552 0 1-0.448 1-1s-0.448-1-1-1c-0.552 0-1 0.448-1 1s0.448 1 1 1v0 0z\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"log-in\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M20 4h1.6c2.24 0 3.36 0 4.216 0.436 0.753 0.383 1.364 0.995 1.748 1.748 0.436 0.856 0.436 1.976 0.436 4.216v11.2c0 2.24 0 3.36-0.436 4.216-0.384 0.753-0.995 1.364-1.748 1.748-0.856 0.436-1.976 0.436-4.216 0.436h-1.6M13.333 9.333l6.667 6.667M20 16l-6.667 6.667M20 16h-16\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-circle-broken-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M4.451 9.333c2.305-3.985 6.614-6.667 11.55-6.667 7.364 0 13.333 5.97 13.333 13.333s-5.97 13.333-13.333 13.333c-4.935 0-9.244-2.681-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M16 21.333l5.333-5.333-5.333-5.333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M2.667 16h18.667\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"calendar-check\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M28 13.333h-24M28 16.667v-4.933c0-2.24 0-3.36-0.436-4.216-0.383-0.753-0.995-1.365-1.748-1.748-0.856-0.436-1.976-0.436-4.216-0.436h-11.2c-2.24 0-3.36 0-4.216 0.436-0.753 0.383-1.365 0.995-1.748 1.748-0.436 0.856-0.436 1.976-0.436 4.216v11.2c0 2.24 0 3.36 0.436 4.216 0.383 0.753 0.995 1.365 1.748 1.748 0.856 0.436 1.976 0.436 4.216 0.436h5.6M21.333 2.667v5.333M10.667 2.667v5.333M19.333 25.333l2.667 2.667 6-6\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"chart-statistics\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.8 9.037c0-0.759 0.001-1.305 0.038-1.732 0.037-0.436 0.103-0.596 0.134-0.648 0.008-0.013 0.011-0.016 0.015-0.019l0.001-0c0.009-0.006 0.045-0.031 0.138-0.060 0.208-0.064 0.569-0.112 1.207-0.112s1 0.048 1.207 0.112c0.093 0.029 0.129 0.053 0.138 0.060l0.001 0c0.004 0.003 0.007 0.005 0.015 0.019 0.031 0.052 0.097 0.212 0.134 0.648 0.037 0.427 0.037 0.973 0.037 1.732v13.926c0 0.896-0.051 1.503-0.135 1.915-0.084 0.414-0.182 0.531-0.199 0.548-0.006 0.006-0.011 0.011-0.029 0.020-0.023 0.011-0.072 0.029-0.169 0.046-0.221 0.038-0.511 0.041-1.002 0.041-0.499 0-0.793-0.003-1.015-0.042-0.097-0.017-0.146-0.035-0.168-0.045-0.016-0.008-0.020-0.012-0.025-0.017-0.015-0.016-0.112-0.131-0.195-0.547-0.082-0.413-0.132-1.022-0.132-1.92v-13.926zM25.333 4.2c-1.288 0-2.612 0.136-3.305 1.291-0.302 0.504-0.403 1.084-0.449 1.621-0.046 0.535-0.046 1.177-0.046 1.884v13.968c0 0.954 0.050 1.734 0.175 2.363 0.125 0.625 0.343 1.205 0.761 1.652 0.439 0.47 0.975 0.664 1.466 0.748 0.435 0.075 0.92 0.074 1.344 0.074h0.107c0.418 0 0.9 0 1.333-0.074 0.489-0.084 1.023-0.278 1.463-0.745 0.42-0.445 0.643-1.023 0.77-1.651 0.128-0.63 0.18-1.412 0.18-2.367v-13.968c0-0.706 0-1.349-0.046-1.884-0.046-0.536-0.147-1.117-0.449-1.621-0.693-1.155-2.017-1.291-3.305-1.291zM14.505 12.667c-0.033 0.301-0.035 0.651-0.035 1.111v9.778c0 0.011-0 0.022-0 0.033-0.033 1.146 0.175 1.533 0.299 1.666 0.107 0.115 0.376 0.279 1.23 0.279 0.834 0 1.112-0.162 1.226-0.283 0.127-0.134 0.34-0.522 0.303-1.658-0-0.012-0.001-0.024-0.001-0.036v-9.778c0-0.461-0.001-0.811-0.035-1.111-0.033-0.296-0.089-0.448-0.137-0.529l-0.002-0.003c-0.031-0.053-0.198-0.335-1.356-0.335s-1.324 0.282-1.356 0.335l-0.002 0.003c-0.049 0.081-0.104 0.232-0.137 0.529zM12.698 10.973c0.639-1.066 1.819-1.44 3.302-1.44s2.663 0.374 3.302 1.44c0.284 0.475 0.395 0.99 0.445 1.444 0.049 0.438 0.049 0.908 0.049 1.328v9.793c0.039 1.301-0.16 2.461-0.921 3.268-0.777 0.823-1.869 0.995-2.875 0.995-1.015 0-2.112-0.169-2.887-0.999-0.754-0.808-0.944-1.97-0.909-3.261v-9.795c-0-0.42-0-0.89 0.049-1.328 0.050-0.454 0.161-0.969 0.445-1.444zM5.169 19.359c-0.035 0.352-0.036 0.776-0.036 1.344v3.689c0 0.641 0.155 0.816 0.23 0.88 0.122 0.103 0.453 0.261 1.303 0.261 0.832 0 1.167-0.156 1.296-0.264 0.081-0.068 0.237-0.247 0.237-0.877v-3.669l-0.009-0.27c-0.015-0.439-0.026-0.782-0.059-1.085-0.039-0.363-0.099-0.533-0.146-0.616l-0.001-0.002c-0.012-0.027-0.127-0.285-1.319-0.285-1.196 0-1.336 0.261-1.355 0.297l-0.001 0.003c-0.046 0.078-0.106 0.242-0.141 0.593zM3.356 17.618c0.654-1.112 1.877-1.418 3.31-1.418 1.436 0 2.648 0.308 3.288 1.431 0.276 0.485 0.379 1.020 0.43 1.495 0.043 0.395 0.057 0.841 0.072 1.281 0.003 0.086 0.006 0.172 0.009 0.257l0 0.013 0 0.027v3.689c0 0.991-0.256 1.949-1.047 2.613-0.744 0.624-1.741 0.795-2.753 0.795-1.021 0-2.024-0.169-2.767-0.798-0.79-0.669-1.033-1.63-1.033-2.61v-3.725c-0-0.522-0-1.056 0.047-1.532 0.048-0.487 0.155-1.029 0.442-1.517z\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"chevron-down\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.5556,\n    d: \"M8 12l8 8 8-8\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"chevron-left\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M20 24l-8-8 8-8\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"chevron-right\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M12 24l8-8-8-8\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"done\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.133 18.4l-2.9-2.9c-0.244-0.244-0.55-0.361-0.916-0.349s-0.673 0.138-0.917 0.383-0.367 0.556-0.367 0.933c0 0.378 0.122 0.689 0.367 0.933l3.8 3.8c0.244 0.244 0.556 0.367 0.933 0.367s0.689-0.122 0.933-0.367l7.567-7.567c0.244-0.244 0.361-0.55 0.351-0.917s-0.14-0.672-0.384-0.916-0.556-0.367-0.933-0.367c-0.378 0-0.689 0.122-0.933 0.367l-6.6 6.6zM16 29.333c-1.844 0-3.578-0.35-5.2-1.051s-3.033-1.649-4.233-2.849-2.15-2.611-2.849-4.233c-0.7-1.622-1.051-3.356-1.051-5.2s0.35-3.578 1.051-5.2c0.7-1.622 1.649-3.033 2.849-4.233s2.611-2.15 4.233-2.851c1.622-0.7 3.356-1.049 5.2-1.049s3.578 0.35 5.2 1.049c1.622 0.7 3.033 1.651 4.233 2.851s2.15 2.611 2.849 4.233c0.7 1.622 1.051 3.356 1.051 5.2s-0.35 3.578-1.051 5.2c-0.7 1.622-1.649 3.033-2.849 4.233s-2.611 2.15-4.233 2.849c-1.622 0.7-3.356 1.051-5.2 1.051zM16 26.667c2.956 0 5.472-1.039 7.551-3.116s3.116-4.595 3.116-7.551c0-2.956-1.039-5.472-3.116-7.551s-4.595-3.116-7.551-3.116c-2.956 0-5.472 1.039-7.549 3.116s-3.117 4.595-3.117 7.551c0 2.956 1.039 5.472 3.117 7.551s4.594 3.116 7.549 3.116z\"\n  }))), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"error-outline\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.667 20h2.667v2.667h-2.667v-2.667zM14.667 9.333h2.667v8h-2.667v-8zM15.987 2.667c-7.36 0-13.32 5.973-13.32 13.333s5.96 13.333 13.32 13.333c7.373 0 13.347-5.973 13.347-13.333s-5.973-13.333-13.347-13.333zM16 26.667c-5.893 0-10.667-4.773-10.667-10.667s4.773-10.667 10.667-10.667c5.893 0 10.667 4.773 10.667 10.667s-4.773 10.667-10.667 10.667z\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"log-out\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M21.333 22.667l6.667-6.667M28 16l-6.667-6.667M28 16h-16M12 4h-1.6c-2.24 0-3.36 0-4.216 0.436-0.753 0.383-1.365 0.995-1.748 1.748-0.436 0.856-0.436 1.976-0.436 4.216v11.2c0 2.24 0 3.36 0.436 4.216 0.383 0.753 0.995 1.364 1.748 1.748 0.856 0.436 1.976 0.436 4.216 0.436h1.6\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"menu-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.3529,\n    d: \"M4 16h24\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.3529,\n    d: \"M4 8h24\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.3529,\n    d: \"M4 24h24\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"moon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.656 17.393c-0.904 0.24-1.834 0.361-2.769 0.361-2.847 0-5.52-1.107-7.528-3.115-1.319-1.326-2.267-2.975-2.749-4.782s-0.484-3.709-0.002-5.516c0.060-0.226 0.060-0.464-0.001-0.689s-0.18-0.432-0.345-0.597c-0.165-0.165-0.371-0.284-0.597-0.344s-0.464-0.060-0.69 0c-2.262 0.603-4.327 1.79-5.985 3.443-5.197 5.197-5.197 13.657 0 18.857 1.235 1.242 2.705 2.227 4.323 2.898s3.354 1.014 5.106 1.009c1.752 0.005 3.487-0.338 5.105-1.008s3.087-1.655 4.322-2.897c1.654-1.659 2.841-3.724 3.444-5.988 0.060-0.226 0.059-0.463-0.002-0.689s-0.18-0.431-0.345-0.596-0.371-0.284-0.596-0.345c-0.226-0.061-0.463-0.061-0.689-0.001zM23.96 23.128c-0.988 0.993-2.163 1.781-3.458 2.317s-2.682 0.81-4.084 0.807c-1.402 0.003-2.79-0.271-4.085-0.807s-2.471-1.324-3.459-2.318c-4.157-4.159-4.157-10.927 0-15.085 0.803-0.802 1.731-1.47 2.747-1.977-0.149 1.919 0.119 3.847 0.784 5.653s1.712 3.447 3.070 4.811c1.361 1.362 3.002 2.412 4.808 3.077s3.736 0.931 5.656 0.777c-0.51 1.014-1.178 1.941-1.979 2.745z\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M3.333 28.667l7.399-2.846c0.473-0.182 0.71-0.273 0.931-0.392 0.197-0.106 0.384-0.227 0.56-0.364 0.198-0.154 0.378-0.333 0.736-0.692l15.040-15.040c1.473-1.473 1.473-3.861 0-5.333s-3.861-1.473-5.333 0l-15.040 15.040c-0.359 0.359-0.538 0.538-0.692 0.736-0.137 0.176-0.259 0.364-0.364 0.561-0.119 0.221-0.21 0.458-0.392 0.931l-2.846 7.399zM3.333 28.667l2.744-7.135c0.196-0.511 0.295-0.766 0.463-0.883 0.147-0.102 0.329-0.141 0.505-0.107 0.201 0.038 0.395 0.232 0.782 0.619l3.012 3.012c0.387 0.387 0.58 0.58 0.619 0.782 0.034 0.176-0.005 0.358-0.107 0.505-0.117 0.168-0.372 0.267-0.883 0.463l-7.135 2.744z\"\n  }))), _symbol15 || (_symbol15 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 10.667v10.667M10.667 16h10.667M29.333 16c0 7.364-5.97 13.333-13.333 13.333s-13.333-5.97-13.333-13.333c0-7.364 5.97-13.333 13.333-13.333s13.333 5.97 13.333 13.333z\"\n  }))), _symbol16 || (_symbol16 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"add-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 6.667v18.667M6.667 16h18.667\"\n  }))), _symbol17 || (_symbol17 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"slid-arrow-left\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.966 17.067l-1.203-0.818 22.877-0.001v-0.64l-22.733 0.001 1.133-0.651-0.319-0.555-2.608 1.498 2.493 1.695 0.36-0.529z\"\n  }))), _symbol18 || (_symbol18 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"slid-arrow-right\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.936 14.79l1.203 0.818-22.877 0.001v0.64l22.733-0.001-1.133 0.651 0.319 0.555 2.608-1.498-2.493-1.695-0.36 0.529z\"\n  }))), _symbol19 || (_symbol19 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"star\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7455,\n    d: \"M16 1.87l4.396 8.332c0.231 0.439 0.653 0.745 1.142 0.83l9.283 1.606-6.566 6.756c-0.346 0.356-0.507 0.852-0.436 1.343l1.341 9.325-8.454-4.157c-0.445-0.219-0.967-0.219-1.412 0l-8.454 4.157 1.341-9.325c0.071-0.491-0.091-0.987-0.436-1.343l-6.566-6.756 9.283-1.606c0.489-0.085 0.911-0.391 1.142-0.83v0l4.396-8.332zM6.592 30.184c0 0 0-0 0-0l-0 0zM16.128 1.627l0-0c0 0-0 0-0 0z\"\n  }))), _symbol20 || (_symbol20 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sun\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.324 16c0 3.681 2.995 6.676 6.676 6.676s6.676-2.995 6.676-6.676c0-3.681-2.995-6.676-6.676-6.676s-6.676 2.995-6.676 6.676zM16 11.991c2.211 0 4.009 1.799 4.009 4.009s-1.799 4.009-4.009 4.009c-2.211 0-4.009-1.799-4.009-4.009s1.799-4.009 4.009-4.009zM14.664 25.333h2.667v4h-2.667v-4zM14.664 2.667h2.667v4h-2.667v-4zM2.664 14.667h4v2.667h-4v-2.667zM25.331 14.667h4v2.667h-4v-2.667zM5.625 24.484l2.827-2.829 1.887 1.885-2.827 2.829-1.887-1.885zM21.653 8.459l2.829-2.829 1.885 1.885-2.829 2.829-1.885-1.885zM8.456 10.345l-2.829-2.829 1.887-1.885 2.827 2.829-1.884 1.885zM26.368 24.485l-1.885 1.885-2.829-2.829 1.885-1.885 2.829 2.829z\"\n  }))), _symbol21 || (_symbol21 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M12 4h8\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M4 8h24\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M6.667 8l0.801 12.018c0.149 2.231 0.223 3.347 0.588 4.243 0.662 1.627 2.004 2.883 3.672 3.435 0.919 0.304 2.037 0.304 4.273 0.304v0c2.236 0 3.354 0 4.273-0.304 1.668-0.552 3.009-1.808 3.671-3.435 0.365-0.896 0.439-2.012 0.588-4.243l0.801-12.018\"\n  }))), _symbol22 || (_symbol22 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"user-check\",\n    viewBox: \"0 0 32 32\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M21.333 24l2.667 2.667 5.333-5.333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M16 20.667h-6c-1.861 0-2.791 0-3.548 0.23-1.705 0.517-3.038 1.851-3.555 3.556-0.23 0.757-0.23 1.687-0.23 3.548v0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M13.333 16c3.314 0 6-2.686 6-6s-2.686-6-6-6c-3.314 0-6 2.686-6 6s2.686 6 6 6z\"\n  }))), _symbol23 || (_symbol23 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.3529,\n    d: \"M24 8l-16 16\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.3529,\n    d: \"M8 8l16 16\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-image\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color1, #3e85f3)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.8286,\n    d: \"M16 10.667v10.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.8286,\n    d: \"M10.667 16h10.667\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.44e2833c91dbe5991f5f4a4c0e20b0a9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Form } from 'formik';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const MainContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 299px;\n    padding-top: 59px;\n    padding-left: 18px;\n    padding-right: 18px;\n    padding-bottom: 40px;\n    border-radius: 16px;\n    background-color: #fff;\n    @media (min-width: 768px) {\n        max-width: 704px;\n    }\n    @media (min-width: 1140px) {\n        max-width: 1087px;\n    }\n`;\n\nexport const AvatarContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 40px;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const ImgContainer = styled.div`\n    margin-bottom: 18px;\n    width: 72px;\n    height: 76px;\n    @media (min-width: 768px) {\n        width: 124px;\n        height: 130px;\n        margin-bottom: 20px;\n    }\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n\n    object-fit: cover;\n    object-position: 50% 50%;\n    margin-bottom: 18px;\n`;\n\nexport const InputFile = styled.input`\n    position: absolute;\n    top: 39px;\n    left: 32px;\n    width: 50px;\n    opacity: 0;\n    z-index: 2;\n    @media (min-width: 768px) {\n        top: 114px;\n        left: 62px;\n    }\n`;\n\nexport const SvgPlus = styled.svg`\n    stroke: white;\n    fill: #3e85f3;\n    position: absolute;\n    top: 60px;\n    left: 48px;\n    cursor: pointer;\n    @media (min-width: 768px) {\n        top: 112px;\n        left: 84px;\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const UserName = styled.h2`\n    color: #343434;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.285;\n    @media (min-width: 768px) {\n        margin-bottom: 8px;\n        font-size: 18px;\n    }\n`;\n\nexport const UserP = styled.p`\n    color: #343434;\n    font-size: 12px;\n    font-weight: 600;\n    font-family: Inter;\n    line-height: 1.1666;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin: 0 auto;\n    @media (min-width: 768px) {\n        max-width: 354px;\n        margin: 0 auto;\n    }\n    @media (min-width: 1140px) {\n        max-width: 758px;\n    }\n`;\n\nexport const FieldsWrap = styled.div`\n    width: 100%;\n    @media (min-width: 1140px) {\n        max-width: 758px;\n        display: grid;\n        grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n        justify-content: center;\n        gap: 18px 50px;\n    }\n`;\n// export const Wrapper = styled.div`\n//     width: 299px;\n//     @media (min-width: 768px) {\n//         max-width: 354px;\n//     }\n//     @media (min-width: 1140px) {\n//     }\n// `;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: #111;\n    font-family: Inter;\n    font-size: 12px;\n    line-height: 1.166;\n    margin-bottom: 8px;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n    line-height: 1.285;\n`;\n\nexport const LabelWrap = styled.div`\n    width: 100%;\n    margin-bottom: 18px;\n    @media (min-width: 768px) {\n        margin-bottom: 24px;\n    }\n    @media (min-width: 1140px) {\n        width: 354px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    outline: none;\n    font-family: Inter;\n\n    line-height: 1.28;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #111;\n        font-weight: 600;\n        font-size: 14px;\n    }\n\n    &.input-error {\n        border: 1px solid #e74a3b;\n    }\n\n    &.input-valid {\n        border: 1px solid #3cbc81;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: #111;\n            font-weight: 600;\n            font-size: 16px;\n        }\n    }\n`;\n\nexport const IconDone = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #3cbc81;\n`;\n\nexport const IconErr = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #e74a3b;\n`;\nexport const Button = styled.button`\n    margin-top: 30px;\n    /* width: 195px; */\n    padding: 14px 50px;\n    align-self: center;\n    border: none;\n    outline: none;\n\n    border-radius: 16px;\n    background: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    color: #fff;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.333;\n    letter-spacing: -0.36px;\n    @media (min-width: 768px) {\n        padding: 15px 84px;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -28px;\n    left: 0;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 14px;\n    @media (min-width: 768px) {\n        bottom: -33px;\n        left: 6px;\n    }\n`;\n","export const selectUser = state => state.auth.user;","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styled from '@emotion/styled';\n\n\nexport const DatePickerStyled = styled(DatePicker)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    outline: none;\n    font-family: Inter;\n\n    line-height: 1.28;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: #111;\n        font-weight: 600;\n        font-size: 14px;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: #111;\n            font-weight: 600;\n            font-size: 16px;\n        }\n    }\n`;\nexport const DatePickWrapper = styled.div`\n    .react-datepicker-wrapper {\n        display: block;\n    }\n    .react-datepicker {\n        position: absolute;\n        top: 34px;\n        left: 27px;\n\n        @media (min-width: 768px) {\n            top: -60px;\n            left: 110px;\n        }\n        background-color: #3e85f3;\n        border-radius: 16px;\n        color: #fff;\n        overflow: hidden;\n        border: none;\n        width: 327px;\n        height: 318px;\n        display: flex;\n        justify-content: center;\n        font-size: 18px;\n        line-height: 1.3;\n\n        @media (min-width: 768px) {\n            width: 373px;\n            height: 354px;\n            font-size: 22px;\n            line-height: 1.3;\n        }\n\n        &__header {\n            background-color: #3e85f3;\n            color: #fff;\n            border-bottom:1px solid rgba(255, 255, 255, 0.20);\n        }\n        &__month-container {\n            background-color: #3e85f3;\n        }\n\n        &__current-month {\n            font-size: 24px;\n            text-align: center;\n            font-family: Inter;\n            font-weight: 600;\n            line-height: 1.666;\n        }\n        &__day {\n            color: #fff;\n            width: 40px;\n            height: 40px;\n            font-size: 14px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            @media (min-width: 768px) {\n                font-size: 18px;\n            }\n            &:hover {\n                border-radius: 50%;\n                background-color: #fff;\n                color: #3e85f3;\n                opacity: 0.7;\n            }\n            &--weekend {\n                opacity: 40%;\n            }\n\n            &--selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n\n                padding: 12px 15px;\n                text-align: center;\n                background-color: white;\n                color: #3e85f3;\n            }\n            &--keyboard-selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n            }\n        }\n        &__day-name {\n            color: #fff;\n            width: 40px;\n        }\n        &__current-month {\n            color: #fff;\n        }\n\n        &__navigation--years {\n            background-color: #fff;\n            border-radius: 50%;\n            width: 15px;\n            height: 15px;\n            margin: 5px auto;\n            &:hover {\n                background-color: #3e85f3;\n                border: 1px solid #fff;\n            }\n        }\n        &__year-option {\n            background-color: #3e85f3;\n            color: #fff;\n            &:hover {\n                background-color: #3e85f3;\n                font-size: 14px;\n                font-weight: 700;\n            }\n        }\n        &__year-dropdown {\n            &::-webkit-scrollbar {\n                width: 15px;\n                height: 20px;\n                background: #3e85f3;\n                border-radius: 8px;\n            }\n            &::-webkit-scrollbar-thumb {\n                background: #fff;\n                border-radius: 8px;\n            }\n        }\n        &__week {\n            \n            display: flex;\n        };\n        &__month{\n            margin:0;\n            padding-bottom:9px;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport sprite from '../../images/icons.svg';\n\nimport {\n    AvatarContainer,\n    Button,\n    Error,\n    IconDone,\n    IconErr,\n    ImgAvatar,\n    InputFile,\n    InputForm,\n    Label,\n    LabelWrap,\n    MainContainer,\n    Span,\n    StyledForm,\n    SvgPlus,\n    UserName,\n    UserP,\n} from './UserForm.styled';\nimport { ImgContainer } from './UserForm.styled';\nimport { FieldsWrap } from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport {\n    DatePickWrapper,\n    DatePickerStyled,\n} from './ReactDatePickerCalendar.styled';\nimport moment from 'moment/moment';\nimport { editUser } from 'redux/auth/authOperations';\n\nconst dayMoment = moment().format('DD/MM/YYYY');\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegexp = /^\\+380\\d{9}$/;\n\nconst schema = yup.object().shape({\n    name: yup.string().max(16).required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    birthday: yup.date().max(dayMoment, 'Birthday must be earlier than today'),\n    phone: yup.string().matches(phoneRegexp),\n    skype: yup.string().max(16),\n});\n\nfunction handleInput(errors, touched, fieldName) {\n    if (errors[fieldName] && touched[fieldName]) {\n        return (\n            <IconErr width={24} height={24}>\n                <use href={`${sprite}#error-outline`} />\n            </IconErr>\n        );\n    } else if (touched[fieldName]) {\n        return (\n            <IconDone width={24} height={24}>\n                <use href={`${sprite}#done`} />\n            </IconDone>\n        );\n    }\n}\n\nexport const UserForm = () => {\n    const [currentAvatar, setCurrentAvatar] = useState(null);\n    const [currentBirthday, setCurrentBirthday] = useState(new Date());\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(selectUser);\n    // console.log(user);\n\n    const initialValues = {\n        name: user.name || '',\n        email: user.email || '',\n        phone: user.phone || '',\n        skype: user.skype || '',\n    };\n\n    const handleChange = e => {\n        setCurrentAvatar(e.target.files[0]);\n        console.log(currentAvatar);\n    };\n\n    const handleSubmit = (values, actions) => {\n        const newData = {\n            ...values,\n            birthday: currentBirthday,\n        };\n\n        dispatch(editUser(newData));\n\n        actions.resetForm();\n    };\n\n    return (\n        <MainContainer>\n            <AvatarContainer>\n                <ImgContainer>\n                    <ImgAvatar src={user.avatarURL} alt=\"avatar\" />\n                </ImgContainer>\n                <InputFile\n                    type=\"file\"\n                    onChange={handleChange}\n                    name=\"avatar\"\n                    accept=\"image/png, image/jpeg, image/jpg\"\n                />\n                <SvgPlus width=\"14\" height=\"14\">\n                    <use href={`${sprite}#icon-image`} />\n                </SvgPlus>\n                <UserName>{user.name || 'User Name'}</UserName>\n                <UserP>User</UserP>\n            </AvatarContainer>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n            >\n                {({ errors, touched, values, handleChange }) => {\n                    return (\n                        <StyledForm>\n                            <FieldsWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>User name</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Enter your name\"\n                                            onChange={handleChange}\n                                            value={values.name}\n                                            className={\n                                                errors.name && touched.name\n                                                    ? 'input-error'\n                                                    : touched.name\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"name\" />\n                                        {handleInput(errors, touched, 'name')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span> Birthday</Span>\n                                        <DatePickWrapper>\n                                            <DatePickerStyled\n                                                selected={currentBirthday}\n                                                onChange={date =>\n                                                    setCurrentBirthday(date)\n                                                }\n                                                formatWeekDay={nameOfDay =>\n                                                    nameOfDay.charAt(0)\n                                                }\n                                                name=\"birthday\"\n                                                maxDate={new Date()}\n                                                className={\n                                                    errors.birthday\n                                                        ? 'input-error'\n                                                        : ''\n                                                }\n                                                showYearDropdown\n                                                value={user.birthday}\n                                            />\n                                        </DatePickWrapper>\n                                        <Error\n                                            component=\"div\"\n                                            name=\"birthday\"\n                                        />\n                                        {handleInput(\n                                            errors,\n                                            touched,\n                                            'birthday'\n                                        )}\n                                    </Label>\n                                </LabelWrap>\n\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Email</Span>\n                                        <InputForm\n                                            type=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter your email\"\n                                            // onChange={handleChange}\n                                            value={values.email}\n                                            className={\n                                                errors.email && touched.email\n                                                    ? 'input-error'\n                                                    : touched.email\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"email\" />\n                                        {handleInput(errors, touched, 'email')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Phone</Span>\n                                        <InputForm\n                                            type=\"tel\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter your phone number\"\n                                            // onChange={handleChange}\n                                            value={values.phone}\n                                            className={[\n                                                errors.phone && touched.phone\n                                                    ? 'input-error'\n                                                    : touched.phone\n                                                    ? 'input-valid'\n                                                    : '',\n                                            ]}\n                                        />\n                                        <Error component=\"div\" name=\"phone\" />\n                                        {handleInput(errors, touched, 'phone')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Skype</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"skype\"\n                                            placeholder=\"Add your skype number\"\n                                            value={values.skype}\n                                            // onChange={handleChange}\n                                            className={\n                                                errors.skype && touched.skype\n                                                    ? 'input-error'\n                                                    : touched.skype\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"skype\" />\n                                        {handleInput(errors, touched, 'skype')}\n                                    </Label>\n                                </LabelWrap>\n                            </FieldsWrap>\n\n                            <Button type=\"submit\">Save changes</Button>\n                        </StyledForm>\n                    );\n                }}\n            </Formik>\n        </MainContainer>\n    );\n};\n","import { UserForm } from 'components/UserForm/UserForm';\n\nconst AccountPage = () => {\n    return <UserForm />;\n};\n\nexport default AccountPage;\n"],"names":["MainContainer","styled","AvatarContainer","ImgContainer","ImgAvatar","InputFile","SvgPlus","UserName","UserP","StyledForm","Form","FieldsWrap","Label","Span","LabelWrap","InputForm","Field","IconDone","IconErr","Button","Error","ErrorMessage","selectUser","state","auth","user","DatePickerStyled","DatePicker","DatePickWrapper","dayMoment","moment","format","schema","yup","shape","name","max","required","email","matches","birthday","phone","skype","handleInput","errors","touched","fieldName","width","height","href","sprite","UserForm","useState","currentAvatar","setCurrentAvatar","Date","currentBirthday","setCurrentBirthday","dispatch","useDispatch","useSelector","initialValues","src","avatarURL","alt","type","onChange","e","target","files","console","log","accept","validationSchema","onSubmit","values","actions","newData","editUser","resetForm","handleChange","htmlFor","placeholder","value","className","component","selected","date","formatWeekDay","nameOfDay","charAt","maxDate","showYearDropdown"],"sourceRoot":""}