{"version":3,"file":"static/js/544.52eefa8c.chunk.js","mappings":"shBAMaA,EAAgBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qQAKf,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,KAAK,IAEnDC,EAAAA,EAAAA,IAAIC,EAAAA,KAQGC,EAAQT,EAAAA,EAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8WAEjB,SAAAS,GAAQ,OAAAA,EAALP,MAAkBC,OAAOO,KAAK,IASxCL,EAAAA,EAAAA,IAAIC,EAAAA,KAMGK,EAAQb,EAAAA,EAAAA,MAAYc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mCAIpBa,EAAOf,EAAAA,EAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kPAElB,SAAAe,GAAQ,OAAAA,EAALb,MAAkBC,OAAOa,KAAK,IASxCX,EAAAA,EAAAA,IAAIC,EAAAA,KAKGW,GAAYnB,EAAAA,EAAAA,GAAOoB,EAAAA,GAAPpB,CAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gnBAOlB,SAAAoB,GAAA,IAAGC,EAAMD,EAANC,OAAe,OAAAD,EAAPE,QAEjBD,EACI,WACA,UACJ,0BAA0B,IAE3B,SAAAE,GAAQ,OAAAA,EAALrB,MAAkBC,OAAOa,KAAK,IAWlB,SAAAQ,GAAQ,OAAAA,EAALtB,MAAkBC,OAAOa,KAAK,IAI5C,SAAAS,GAAQ,OAAAA,EAALvB,MAAkBC,OAAOuB,WAAW,IAKlDrB,EAAAA,EAAAA,IAAIC,EAAAA,KAQGqB,GAAmB7B,EAAAA,EAAAA,GAAOmB,EAAPnB,CAAiB8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,gFAG3CK,EAAAA,EAAAA,IAAIwB,EAAAA,KAKGC,EAAShC,EAAAA,EAAAA,OAAaiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,u4BAWX,SAAAgC,GAAQ,OAAAA,EAAL9B,MAAkBC,OAAOO,KAAK,IAM5C,SAAAuB,GAAQ,OAAAA,EAAL/B,MAAkBC,OAAOC,KAAK,IAOhC,SAAA8B,GAAQ,OAAAA,EAALhC,MAAkBC,OAAOC,KAAK,IACnC,SAAA+B,GAAQ,OAAAA,EAALjC,MAAkBC,OAAOO,KAAK,IAE3B,SAAA0B,GAAA,IAAGlC,EAAKkC,EAALlC,MAAK,0BAAAmC,OACEnC,EAAMoC,WAAWC,SAAQ,KAAAF,OAAInC,EAAMoC,WAAWE,YAAW,YAAAH,OAAWnC,EAAMoC,WAAWC,SAAQ,KAAAF,OAAInC,EAAMoC,WAAWE,YAAW,WAAAH,OAAUnC,EAAMoC,WAAWC,SAAQ,KAAAF,OAAInC,EAAMoC,WAAWE,YAAW,aAAAH,OAAYnC,EAAMoC,WAAWC,SAAQ,KAAAF,OAAInC,EAAMoC,WAAWE,YAAW,QAE3RnC,EAAAA,EAAAA,IAAIC,EAAAA,KAQsB,SAAAmC,GAAQ,OAAAA,EAALvC,MAAkBC,OAAOuC,kBAAkB,IACzD,SAAAC,GAAQ,OAAAA,EAALzC,MAAkBC,OAAOC,KAAK,IAClC,SAAAwC,GAAQ,OAAAA,EAAL1C,MAAkBC,OAAOuC,kBAAkB,IAC5C,SAAAG,GAAQ,OAAAA,EAAL3C,MAAkBC,OAAOC,KAAK,IAK1C0C,EAAYhD,EAAAA,EAAAA,IAAUiD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,4PAU7BK,EAAAA,EAAAA,IAAIC,EAAAA,KAOG0C,GAAQlD,EAAAA,EAAAA,GAAOmD,EAAAA,GAAPnD,CAAoBoD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,2OAc5BmD,EAAWrD,EAAAA,EAAAA,KAAWsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,oNAYtBqD,EAAYvD,EAAAA,EAAAA,IAAUwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,sHAEvB,SAAAuD,GAAQ,OAAAA,EAALC,MAAgC,MAAV,OAAe,IAMvCC,GAAO3D,EAAAA,EAAAA,GAAO4D,EAAAA,GAAP5D,CAAe6D,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,+bAEtB,SAAA4D,GAAQ,OAAAA,EAAL1D,MAAkBC,OAAOO,KAAK,IAQ5B,SAAAmD,GAAA,IAAG3D,EAAK2D,EAAL3D,MAAK,gBAAAmC,OACRnC,EAAMoC,WAAWC,SAAQ,KAAAF,OAAInC,EAAMoC,WAAWE,YAAW,IAI1D,SAAAsB,GAAQ,OAAAA,EAAL5D,MAAkBC,OAAOuC,kBAAkB,IAGzDrC,EAAAA,EAAAA,IAAIC,EAAAA,KAMGyD,EAAiBjE,EAAAA,EAAAA,IAAUkE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,4F,4LCnMlCiE,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAEFI,QACAC,QATW,8CASU,iBACrBF,WACLG,SAAUN,EAAAA,KAAa7D,IAAI,GAAGgE,aAwOlC,EArOqB,WACjB,IAAMI,GAAWC,EAAAA,EAAAA,MAajBC,GAAwBC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,KAACC,EAAAA,IAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAxCM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBP,EAAAA,EAAAA,UAAS,YAAWQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,EAAkB,WACpB,GAAa,aAATF,EAEA,OADAC,EAAQ,QACDJ,GAAQL,EAAAA,EAAAA,KAACW,EAAAA,IAAc,KAElCN,GAAQL,EAAAA,EAAAA,KAACC,EAAAA,IAAS,KAClBQ,EAAQ,WACZ,EAEA,OACIT,EAAAA,EAAAA,KAAChF,EAAAA,GAAa,CAAA4F,UACVZ,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACHC,cAzBU,CAClBvB,KAAM,GACNE,MAAO,GACPE,SAAU,IAuBFoB,iBAAkB3B,EAClB4B,SArBU,SAAAC,GAClBrB,GAASsB,EAAAA,EAAAA,IAASD,GACtB,EAmBoCL,SAEvB,SAAAxF,GAAA,IAAA+F,EAAAC,EAAAC,EACGJ,EAAM7F,EAAN6F,OACAzE,EAAMpB,EAANoB,OACAC,EAAOrB,EAAPqB,QACA6E,EAAYlG,EAAZkG,aACAC,EAAUnG,EAAVmG,WACYnG,EAAZoG,aACYpG,EAAZqG,aAAY,OAEZC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAf,SAAA,EACDc,EAAAA,EAAAA,MAACxC,EAAAA,GAAc,CAAA0B,SAAA,EACXZ,EAAAA,EAAAA,KAACtE,EAAAA,GAAK,CAAAkF,SAAC,aACPZ,EAAAA,EAAAA,KAACpB,EAAAA,GAAI,CAACgD,GAAI,IAAIhB,SAAC,aAEnBZ,EAAAA,EAAAA,KAAA,OAAAY,UACIc,EAAAA,EAAAA,MAAC5F,EAAAA,GAAK,CAAC+F,QAAQ,GAAEjB,SAAA,EACbZ,EAAAA,EAAAA,KAAChE,EAAAA,GAAI,CACD8F,MAAO,CACHC,OACKtF,EAAQ8C,MACL/C,EAAO+C,KACP,UACH9C,EAAQ8C,OACJ/C,EAAO+C,MACR,YACJ,SACNqB,SACL,UAGDZ,EAAAA,EAAAA,KAAC5D,EAAAA,GAAS,CACNoE,KAAK,OACLjB,KAAK,OACL1C,YAAY,kBACZmF,MAAOf,EAAO1B,KACd0C,OAAQV,EACRW,SAAUZ,EACV9E,OAAQA,EAAO+C,KACf9C,QAAqB,QAAd0E,EAAE1E,EAAQ8C,YAAI,IAAA4B,OAAA,EAAZA,EAAcgB,aAE1B1F,EAAQ8C,OACJ/C,EAAO+C,MACJS,EAAAA,EAAAA,KAAC7B,EAAAA,GAAK,CAACiE,UAAU,MAAM7C,KAAK,UAE5BS,EAAAA,EAAAA,KAAC1B,EAAAA,GAAQ,CAAAsC,SAAC,6BAIjBnE,EAAQ8C,OACLS,EAAAA,EAAAA,KAACxB,EAAAA,GAAS,CACN6D,MAAM,KACNC,OAAO,KACP3D,MAAOnC,EAAO+C,KAAKqB,UAEnBZ,EAAAA,EAAAA,KAAA,OACIuC,KAAI,GAAA/E,OAAKgF,EAAAA,GAAMhF,OACXhB,EAAO+C,KACD,iBACA,mBAQ9BS,EAAAA,EAAAA,KAAA,OAAAY,UACIc,EAAAA,EAAAA,MAAC5F,EAAAA,GAAK,CAAC+F,QAAQ,GAAEjB,SAAA,EACbZ,EAAAA,EAAAA,KAAChE,EAAAA,GAAI,CACD8F,MAAO,CACHC,OACKtF,EAAQgD,OACLjD,EAAOiD,MACP,UACHhD,EAAQgD,QACJjD,EAAOiD,OACR,YACJ,SACNmB,SACL,WAGDZ,EAAAA,EAAAA,KAAC5D,EAAAA,GAAS,CACNoE,KAAK,QACLjB,KAAK,QACL1C,YAAY,cACZmF,MAAOf,EAAOxB,MACdjD,OAAQA,EAAOiD,MACfhD,QAAsB,QAAf2E,EAAE3E,EAAQgD,aAAK,IAAA2B,OAAA,EAAbA,EAAee,WACxBF,OAAQV,EACRW,SAAUZ,IAGb7E,EAAQgD,QACJjD,EAAOiD,OACJO,EAAAA,EAAAA,KAAC7B,EAAAA,GAAK,CAACiE,UAAU,MAAM7C,KAAK,WAE5BS,EAAAA,EAAAA,KAAC1B,EAAAA,GAAQ,CAAAsC,SAAC,6BAKjBnE,EAAQgD,QACLO,EAAAA,EAAAA,KAACxB,EAAAA,GAAS,CACN6D,MAAM,KACNC,OAAO,KACP3D,MAAOnC,EAAOiD,MAAMmB,UAEpBZ,EAAAA,EAAAA,KAAA,OACIuC,KAAI,GAAA/E,OAAKgF,EAAAA,GAAMhF,OACXhB,EAAOiD,MACD,iBACA,mBAQ9BO,EAAAA,EAAAA,KAAA,OAAAY,UACIc,EAAAA,EAAAA,MAAC5F,EAAAA,GAAK,CAAC+F,QAAQ,GAAEjB,SAAA,EACbZ,EAAAA,EAAAA,KAAChE,EAAAA,GAAI,CACD8F,MAAO,CACHC,OACKtF,EAAQkD,UACLnD,EAAOmD,SACP,UACHlD,EAAQkD,WACJnD,EAAOmD,UACR,YACJ,SACNiB,SACL,cAGDZ,EAAAA,EAAAA,KAAClD,EAAAA,GAAgB,CACb0D,KAAMA,EACNjB,KAAK,WACL1C,YAAY,iBACZmF,MAAOf,EAAOtB,SACdnD,OAAQA,EAAOmD,SACflD,QAAyB,QAAlB4E,EAAE5E,EAAQkD,gBAAQ,IAAA0B,OAAA,EAAhBA,EAAkBc,WAC3BF,OAAQV,EACRW,SAAUZ,KAEdtB,EAAAA,EAAAA,KAAC/B,EAAAA,GAAS,CACNuC,KAAK,SACLiC,QAAS/B,EAAgBE,SAExBR,IAGJ3D,EAAQkD,WACJnD,EAAOmD,UACJK,EAAAA,EAAAA,KAAC7B,EAAAA,GAAK,CACFiE,UAAU,MACV7C,KAAK,cAGTS,EAAAA,EAAAA,KAAC1B,EAAAA,GAAQ,CAAAsC,SAAC,6BAKjBnE,EAAQkD,WACLK,EAAAA,EAAAA,KAACxB,EAAAA,GAAS,CACN6D,MAAM,KACNC,OAAO,KACP3D,MAAOnC,EAAOmD,SAASiB,UAEvBZ,EAAAA,EAAAA,KAAA,OACIuC,KAAI,GAAA/E,OAAKgF,EAAAA,GAAMhF,OACXhB,EAAOmD,SACD,iBACA,mBAQ9B+B,EAAAA,EAAAA,MAACzE,EAAAA,GAAM,CAACuD,KAAK,SAAQI,SAAA,CAAC,WAElBZ,EAAAA,EAAAA,KAAA,OAAKqC,MAAM,KAAKC,OAAO,KAAI1B,UACvBZ,EAAAA,EAAAA,KAAA,OAAKuC,KAAI,GAAA/E,OAAKgF,EAAAA,EAAM,oBAGzB,KAK3B,E,yGCpQME,GAAeC,E,QAAAA,IAAiBzH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAmChCyH,EAAkB3H,EAAAA,EAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8OAc5B0H,GAAc5H,EAAAA,EAAAA,GAAO4D,EAAAA,GAAP5D,CAAec,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6yBAmBC,SAAAC,GAAQ,OAAAA,EAALC,MAAkByH,YAAYC,CAAC,IAMtC,SAAAnH,GAAQ,OAAAA,EAALP,MAAkBC,OAAOuC,kBAAkB,IACzD,SAAA3B,GAAQ,OAAAA,EAALb,MAAkBC,OAAOC,KAAK,IAKhDyH,EAAU/H,EAAAA,EAAAA,QAAcgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,iLAGM,SAAAoB,GAAQ,OAAAA,EAALlB,MAAkByH,YAAYG,CAAC,IAQtE,EApFqB,WACjB,OACIvB,EAAAA,EAAAA,MAACkB,EAAe,CAAAhC,SAAA,EACZZ,EAAAA,EAAAA,KAAC0C,EAAY,KACb1C,EAAAA,EAAAA,KAACkD,EAAY,KACblD,EAAAA,EAAAA,KAAC6C,EAAW,CAACjB,GAAG,SAAQhB,SAAC,YACzBc,EAAAA,EAAAA,MAACsB,EAAO,CAAApC,SAAA,EACJZ,EAAAA,EAAAA,KAAA,UACImD,OAEIC,EAEJC,MAAM,yBAEVrD,EAAAA,EAAAA,KAAA,OACImD,OAEIC,EAEJf,MAAO,IACPC,OAAQ,IACRgB,IAAI,UAKxB,C,+HC5CA,IAMQtG,EALI,IAKIvB,EAJJ,IAIY8H,EAHX,KAKP/H,EAAM,SAAAgI,GAAE,uCAAAhG,OAAqCgG,EAAE,O","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport { mobile, tablet, min } from '../../styles/media';\n\nexport const ContainerForm = styled.div`\n    max-width: 335px;\n    max-height: 469px;\n    border-radius: 8px;\n    padding: 40px 24px;\n    background-color: ${({ theme }) => theme.colors.white};\n\n    ${min(tablet)} {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: ${({ theme }) => theme.colors.brand};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: ${({ theme }) => theme.colors.black};\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    margin-bottom: 8px;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    padding: 14px;\n    width: 100%;\n    height: 46px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    border-color: ${({ errors, touched }) =>\n        touched\n            ? errors\n                ? '#E74A3B;'\n                : '#3CBC81'\n            : 'rgba(220, 227, 229, 0.6)'};\n\n    color: ${({ theme }) => theme.colors.black};\n    outline: none;\n    font-family: Inter;\n    margin-bottom: 24px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n\n    &:hover,\n    &:focus {\n        border: 1px solid ${({ theme }) => theme.colors.black};\n    }\n\n    ::placeholder {\n        color: ${({ theme }) => theme.colors.placeholder};\n\n        font-weight: 400;\n    }\n\n    ${min(tablet)} {\n        padding: 18px;\n        margin-bottom: 18px;\n        height: 54px;\n        font-size: 16px;\n    }\n`;\n\nexport const InputFormMargin0 = styled(InputForm)`\n    margin-bottom: 0;\n\n    ${min(mobile)} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 287px;\n    margin-top: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 14px;\n    gap: 11px;\n\n    border-radius: 16px;\n    background-color: ${({ theme }) => theme.colors.brand};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    border: none;\n    outline: none;\n\n    color: ${({ theme }) => theme.colors.white};\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: -0.28px;\n    stroke: ${({ theme }) => theme.colors.white};\n    fill: ${({ theme }) => theme.colors.brand};\n\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}, color ${theme.animations.duration} ${theme.animations.cubicBezier}, fill ${theme.animations.duration} ${theme.animations.cubicBezier}, stroke ${theme.animations.duration} ${theme.animations.cubicBezier},`};\n\n    ${min(tablet)} {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n            color: ${({ theme }) => theme.colors.white};\n            fill: ${({ theme }) => theme.colors.backgroundBtnHover};\n            stroke: ${({ theme }) => theme.colors.white};\n        }\n    }\n`;\n\nexport const ButtonEye = styled.svg`\n    position: absolute;\n    top: 70%;\n    left: 75%;\n    width: 24px;\n    height: 24px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    ${min(tablet)} {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -37px;\n    left: 0;\n    margin-left: 18px;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16;\n`;\n\nexport const ErrorMes = styled.span`\n    position: absolute;\n    bottom: -37px;\n    left: 18px;\n    color: #3cbc81;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16;\n`;\n\nexport const SvgStatus = styled.svg`\n    position: absolute;\n    fill: ${({ error }) => (!error ? 'green' : 'red')};\n    right: 14px;\n    top: 83%;\n    transform: translateY(-50%);\n`;\n\nexport const Home = styled(NavLink)`\n    margin-bottom: 32px;\n    color: ${({ theme }) => theme.colors.brand};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    transition: ${({ theme }) =>\n        ` color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    &:hover,\n    &:focus {\n        color: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { BsEyeFill } from 'react-icons/bs';\nimport { BsEyeSlashFill } from 'react-icons/bs';\n\nimport {\n    ContainerForm,\n    Title,\n    Span,\n    InputForm,\n    Button,\n    InputFormMargin0,\n    Error,\n    Label,\n    ButtonEye,\n    ErrorMes,\n    SvgStatus,\n    Home,\n    TitleContainer,\n} from './RegisterForm.styled';\n\nimport sprite from '../../images/icons.svg';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n// import Notiflix from 'notiflix';\n// import { useNavigate } from 'react-router-dom';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n// const baseURL = 'https://goose-track-backend-q3re.onrender.com';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    password: yup.string().min(6).required(),\n});\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    // const navigate = useNavigate();\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    const handlerSubmit = values => {\n        dispatch(register(values));\n    };\n\n    const [icon, setIcon] = useState(<BsEyeFill />);\n    const [type, setType] = useState('password');\n\n    const handlerEyeClick = () => {\n        if (type === 'password') {\n            setType('text');\n            return setIcon(<BsEyeSlashFill />);\n        }\n        setIcon(<BsEyeFill />);\n        setType('password');\n    };\n\n    return (\n        <ContainerForm>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handlerSubmit}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                }) => (\n                    <Form>\n                        <TitleContainer>\n                            <Title>Sign Up</Title>\n                            <Home to={'/'}>Home</Home>\n                        </TitleContainer>\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span\n                                    style={{\n                                        color:\n                                            (touched.name &&\n                                                errors.name &&\n                                                '#E74A3B') ||\n                                            (touched.name &&\n                                                !errors.name &&\n                                                '#3CBC81') ||\n                                            'black',\n                                    }}\n                                >\n                                    Name\n                                </Span>\n                                <InputForm\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={values.name}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    errors={errors.name}\n                                    touched={touched.name?.toString()}\n                                />\n                                {touched.name &&\n                                    (errors.name ? (\n                                        <Error component=\"div\" name=\"name\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n                                {touched.name && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.name}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.name\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span\n                                    style={{\n                                        color:\n                                            (touched.email &&\n                                                errors.email &&\n                                                '#E74A3B') ||\n                                            (touched.email &&\n                                                !errors.email &&\n                                                '#3CBC81') ||\n                                            'black',\n                                    }}\n                                >\n                                    Email\n                                </Span>\n                                <InputForm\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={values.email}\n                                    errors={errors.email}\n                                    touched={touched.email?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n\n                                {touched.email &&\n                                    (errors.email ? (\n                                        <Error component=\"div\" name=\"email\" />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.email && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.email}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.email\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <div>\n                            <Label htmlFor=\"\">\n                                <Span\n                                    style={{\n                                        color:\n                                            (touched.password &&\n                                                errors.password &&\n                                                '#E74A3B') ||\n                                            (touched.password &&\n                                                !errors.password &&\n                                                '#3CBC81') ||\n                                            'black',\n                                    }}\n                                >\n                                    Password\n                                </Span>\n                                <InputFormMargin0\n                                    type={type}\n                                    name=\"password\"\n                                    placeholder=\"Enter password\"\n                                    value={values.password}\n                                    errors={errors.password}\n                                    touched={touched.password?.toString()}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                />\n                                <ButtonEye\n                                    type=\"button\"\n                                    onClick={handlerEyeClick}\n                                >\n                                    {icon}\n                                </ButtonEye>\n\n                                {touched.password &&\n                                    (errors.password ? (\n                                        <Error\n                                            component=\"div\"\n                                            name=\"password\"\n                                        />\n                                    ) : (\n                                        <ErrorMes>\n                                            This is an CORRECT name\n                                        </ErrorMes>\n                                    ))}\n\n                                {touched.password && (\n                                    <SvgStatus\n                                        width=\"24\"\n                                        height=\"24\"\n                                        error={errors.password}\n                                    >\n                                        <use\n                                            href={`${sprite}${\n                                                errors.password\n                                                    ? '#error-outline'\n                                                    : '#done'\n                                            }`}\n                                        />\n                                    </SvgStatus>\n                                )}\n                            </Label>\n                        </div>\n\n                        <Button type=\"submit\">\n                            Sign Up\n                            <svg width=\"20\" height=\"20\">\n                                <use href={`${sprite}#log-in`} />\n                            </svg>\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </ContainerForm>\n    );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport register_goose_rocket_desktop from '../images/login_register/register_goose_rocket_desktop.png';\nimport register_goose_rocket_desktop2x from '../images/login_register/register_goose_rocket_desktop@2x.png';\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n\n    body {\n        background-color: #DCEBF7;\n    }\n`;\n\nconst RegisterPage = () => {\n    return (\n        <WrapperRegister>\n            <GlobalStyles />\n            <RegisterForm />\n            <LinkToLogin to=\"/login\">Log In</LinkToLogin>\n            <Picture>\n                <source\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    media=\"(min-width: 1440px)\"\n                />\n                <img\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    width={368}\n                    height={521}\n                    alt=\"\"\n                />\n            </Picture>\n        </WrapperRegister>\n    );\n};\n\nconst WrapperRegister = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: #dcebf7;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n    width: 287px;\n    text-align: center;\n    margin-top: 18px;\n    display: block;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 14px;\n    text-decoration-line: underline;\n    padding: 14px 103px;\n    border-radius: 16px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 24px;\n        font-size: 18px;\n        line-height: 24px;\n        width: 400px;\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n            color: ${({ theme }) => theme.colors.white};\n        }\n    }\n`;\n\nconst Picture = styled.picture`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: block;\n        position: absolute;\n        top: 354px;\n        left: 49px;\n    }\n`;\n\nexport default RegisterPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","white","min","tablet","Title","_templateObject2","_ref2","brand","Label","_templateObject3","Span","_templateObject4","_ref3","black","InputForm","Field","_templateObject5","_ref4","errors","touched","_ref5","_ref6","_ref7","placeholder","InputFormMargin0","_templateObject6","mobile","Button","_templateObject7","_ref8","_ref9","_ref10","_ref11","_ref12","concat","animations","duration","cubicBezier","_ref13","backgroundBtnHover","_ref14","_ref15","_ref16","ButtonEye","_templateObject8","Error","ErrorMessage","_templateObject9","ErrorMes","_templateObject10","SvgStatus","_templateObject11","_ref17","error","Home","NavLink","_templateObject12","_ref18","_ref19","_ref20","TitleContainer","_templateObject13","schema","yup","shape","name","required","email","matches","password","dispatch","useDispatch","_useState","useState","_jsx","BsEyeFill","_useState2","_slicedToArray","icon","setIcon","_useState3","_useState4","type","setType","handlerEyeClick","BsEyeSlashFill","children","Formik","initialValues","validationSchema","onSubmit","values","register","_touched$name","_touched$email","_touched$password","handleChange","handleBlur","handleSubmit","isSubmitting","_jsxs","Form","to","htmlFor","style","color","value","onBlur","onChange","toString","component","width","height","href","sprite","onClick","GlobalStyles","createGlobalStyle","WrapperRegister","LinkToLogin","breakpoints","m","Picture","l","RegisterForm","srcSet","register_goose_rocket_desktop2x","media","alt","desktop","bp"],"sourceRoot":""}