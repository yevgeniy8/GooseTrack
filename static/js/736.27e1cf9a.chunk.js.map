{"version":3,"file":"static/js/736.27e1cf9a.chunk.js","mappings":"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","sources":["components/Header/ThemeToggler/ThemeToggler.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/AddFeedbackBtn/AddFeedbackBtn.styled.jsx","components/Header/AddFeedbackBtn/AddFeedbackBtn.jsx","components/FeedbackForm/FeedbackForm.styled.js","redux/reviews/reviewsSelectors.js","components/FeedbackForm/FeedbackForm.jsx","components/Header/AddFeedbackModal/AddFeedbackModal.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/LogoutBtn/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","redux/calendar/calendarSelector.js","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ToggleBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    background-color: transparent;\n    fill: ${({ theme }) => theme.colors.brand};\n    transition: ${({ theme }) =>\n        `fill ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 32px;\n        height: 32px;\n    }\n    :hover,\n    :focus {\n        fill: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n`;\n\nexport const Svg = styled.svg`\n    width: 100%;\n    height: 100%;\n`;\n","import { LIGHT } from 'constants';\nimport { useThemeContext } from 'hooks/ThemeContext';\nimport { ToggleBtn, Svg } from './ThemeToggler.styled';\nimport sprite from 'images/icons.svg';\n\nconst ThemeToggler = () => {\n    const { theme, onChangeTheme } = useThemeContext();\n    const isLightTheme = theme === LIGHT;\n\n    return (\n        <ToggleBtn onClick={onChangeTheme}>\n            {isLightTheme ? (\n                <Svg>\n                    <use href={`${sprite}#moon`} />\n                </Svg>\n            ) : (\n                <Svg>\n                    <use href={`${sprite}#sun`} />\n                </Svg>\n            )}\n        </ToggleBtn>\n    );\n};\n\nexport default ThemeToggler;\n","import styled from '@emotion/styled';\n\nimport { tablet, min } from 'styles/media';\n\nexport const InfoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n\n    ${min(tablet)} {\n        gap: 14px;\n    }\n`;\n\nexport const NameP = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: calc(18 / 14);\n    color: ${({ theme }) => theme.colors.textUserName};\n\n    ${min(tablet)} {\n        font-size: ${({ theme }) => theme.fontSizes.l};\n        line-height: calc(18 / 18);\n    }\n`;\n\nexport const AvatarDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    border-radius: ${({ theme }) => theme.borderRadius.xl};\n    background-color: transparent;\n    border: ${({ theme }) => theme.borders.avatar};\n\n    ${min(tablet)} {\n        width: 44px;\n        height: 44px;\n    }\n`;\nexport const Img = styled.img`\n    border-radius: ${({ theme }) => theme.borderRadius.xl};\n`;\nexport const FirstLetterOfName = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.userDefaults};\n`;\n","import useAuth from 'hooks/useAuth';\n\nimport {\n    InfoContainer,\n    NameP,\n    AvatarDiv,\n    Img,\n    FirstLetterOfName,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n    const { user } = useAuth();\n\n    const { name, avatarURL } = user;\n\n    function getFirstName(name) {\n        if (name) {\n            const nameParts = name.split(' ');\n            if (nameParts.length >= 2) {\n                const firstName = nameParts[0];\n                if (firstName.length > 14) {\n                    return `${firstName.substring(0, 12)}...`;\n                }\n                return firstName;\n            }\n        }\n        return name;\n    }\n\n    const firstName = getFirstName(name);\n\n    return (\n        <InfoContainer>\n            {name ? <NameP>{firstName}</NameP> : <NameP>User</NameP>}\n            <AvatarDiv>\n                {(avatarURL === '' || !avatarURL) && name ? (\n                    <FirstLetterOfName>{name[0]}</FirstLetterOfName>\n                ) : avatarURL !== '' ? (\n                    <Img src={avatarURL} alt={name} />\n                ) : null}\n            </AvatarDiv>\n        </InfoContainer>\n    );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n    outline: none;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: calc(16 / 12);\n    padding: 8px 20px;\n    border-radius: 10px;\n    background-color: ${({ theme }) => theme.colors.backgroundBtn};\n    color: ${({ theme }) => theme.colors.white};\n\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        font-size: 14px;\n        line-height: calc(18 / 14);\n        padding: 12px 32px;\n    }\n\n    :hover,\n    :focus {\n        background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n`;\n","import { useEffect } from 'react';\nimport { Btn } from './AddFeedbackBtn.styled';\nimport { fetchReviewById } from 'redux/reviews/reviewsOperations';\nimport { useDispatch } from 'react-redux';\n\nconst AddFeedbackBtn = ({ showModal }) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // console.log('1');\n        dispatch(fetchReviewById());\n    }, [dispatch]);\n    return (\n        <Btn onClick={showModal} type=\"button\">\n            Feedback\n        </Btn>\n    );\n};\n\nexport default AddFeedbackBtn;\n","import styled from '@emotion/styled';\n\nimport { Field, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Wrap = styled.div`\n    position: relative;\n    text-align: left;\n    padding: 28px 20px;\n    border-radius: 16px;\n    width: 335px;\n    background: ${({ theme }) => theme.colors.backgroundModalTask};\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n    @media (min-width: 768px) {\n        width: 468px;\n        padding: 32px;\n    }\n`;\n\nexport const Label = styled.label`\n    font-family: Inter;\n    color: ${({ theme }) => theme.colors.textTitleModalTask};\n    /* background: ${({ theme }) => theme.colors.backgroundPrimary}; */\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: calc((14 / 12) * 100%);\n`;\n\nexport const WrapForReview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 20px;\n    margin-bottom: 8px;\n`;\n\nexport const WrapForEdit = styled.div`\n    display: flex;\n    gap: 8px;\n`;\n\nexport const EditBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({ theme }) => theme.colors.backgroundPencil};\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    stroke: rgba(62, 133, 243, 1);\n    /* fill: ${({ theme }) => theme.colors.backgroundPencil}; */\n    \n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #ffffff;\n        background-color: #3e85f3;\n        fill: #3e85f3;\n    }\n`;\n\nexport const DeleteBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 30px;\n    height: 30px;\n    background-color: rgba(234, 61, 101, 0.2);\n    fill: rgba(234, 61, 101, 0.2);\n    stroke: #ea3d65;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n\n    transition: {\n        stroke: #ea3d65;\n    }\n\n\n    &:hover,\n    &:focus {\n        stroke: #ffffff;\n        background-color: #ea3d65;\n    }\n`;\n\nexport const WrapForInput = styled.div`\n    margin-bottom: 14px;\n`;\n\nexport const Input = styled(Field)`\n    resize: none;\n    padding: 14px 18px 14px 18px;\n    width: 295px;\n    box-sizing: border-box;\n    height: 127px;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: calc((18 / 14) * 100%);\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n\n    background: ${({ theme }) => theme.colors.backgroundModalTaskForm};\n    border-radius: 8px;\n    border: ${({ theme }) => theme.borders.calendar};\n\n    @media (min-width: 768px) {\n        width: 404px;\n    }\n\n    @media (min-width: 1440px) {\n        margin-bottom: 18px;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    ::placeholder {\n        opacity: 1;\n        color: ${({ theme }) => theme.colors.textPrimary};\n        font-weight: 600;\n        font-size: 14px;\n    }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n    margin-left: 18px;\n    max-width: 100%;\n    color: #da1414;\n    max-width: 240px;\n    font-size: 12px;\n    font-weight: 500;\n    @media (min-width: 768px) {\n        max-width: 330px;\n    }\n`;\n\nexport const FormBtnWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\n\nexport const FormBtn = styled.button`\n    color: #ffffff;\n    background-color: #3e85f3;\n    text-transform: none;\n    width: 262px;\n    height: 48px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        background-color: #2b78ef;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n`;\n\nexport const FormBtnCancel = styled.button`\n    color: ${({ theme }) => theme.colors.textPrimary};\n    background-color: ${({ theme }) => theme.colors.backgroundBtnCanceled};\n    text-transform: none;\n    width: 262px;\n    height: 48px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: #2b78ef;\n    }\n`;\n\nexport const BtnCloseWrap = styled.button`\n    position: absolute;\n    top: 18px;\n    right: 18px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    stroke: ${({ theme }) => theme.colors.textTitleHeader};\n    transform-origin: 0px 0px;\n    transition: cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #2b78ef;\n    }\n`;\n\n\n\n\n\n\n\n","export const selectReviews = state => state.reviews.reviews;\nexport const selectIsLoading = state => state.reviews.isLoading;\nexport const selectError = state => state.reviews.error;\nexport const selectUserReview = state => state.reviews.userReview;\n","import * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\n\nimport {\n    Input,\n    Label,\n    FormBtn,\n    Wrap,\n    FormBtnWrap,\n    FormBtnCancel,\n    EditBtn,\n    DeleteBtn,\n    WrapForEdit,\n    WrapForReview,\n    BtnCloseWrap,\n    ErrorMessage,\n    WrapForInput,\n} from './FeedbackForm.styled';\n\nimport pencil from '../../images/icons.svg';\nimport trashReview from '../../images/icons.svg';\nimport close from '../../images/icons.svg';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserReview } from 'redux/reviews/reviewsSelectors';\nimport {\n    addReview,\n    deleteReview,\n    editReview,\n} from 'redux/reviews/reviewsOperations';\nimport { changeRating } from 'redux/reviews/reviewsSlice';\nimport { Rating } from '@smastrom/react-rating';\nimport '@smastrom/react-rating/style.css';\n\nconst rateIcon = (\n    <path d=\"M791.706 1024c-12.164 0-24.269-3.906-34.692-11.681l-245.007-183.662-245.007 183.662c-10.151 7.636-22.35 11.717-34.855 11.674s-24.677-4.22-34.777-11.922c-10.109-7.665-17.65-18.461-21.549-30.866-3.899-12.398-3.956-25.768-0.166-38.21l91.377-308.266-242.807-178.847c-10.063-7.763-17.536-18.636-21.363-31.082s-3.813-25.835 0.039-38.272c3.883-12.407 11.397-23.225 21.482-30.925s22.229-11.892 34.717-11.984l300.724-0.473 95.743-300.619c3.951-12.384 11.53-23.155 21.662-30.787s22.304-11.739 34.793-11.739c12.489 0 24.662 4.107 34.794 11.739s17.71 18.403 21.661 30.787l94.117 300.619 302.263 0.473c12.5 0.074 24.664 4.263 34.757 11.975s17.605 18.552 21.475 30.982c3.862 12.429 3.884 25.816 0.051 38.257-3.825 12.442-11.308 23.306-21.38 31.049l-242.805 178.847 91.37 308.266c3.803 12.434 3.752 25.805-0.139 38.21-3.899 12.398-11.432 23.201-21.541 30.866-10.13 7.768-22.374 11.944-34.94 11.93v0z\"></path>\n);\n\nconst rateStyled = {\n    itemShapes: rateIcon,\n    activeFillColor: '#FFAC33',\n    inactiveFillColor: '#CEC9C1',\n};\n\nconst FeedbackSchema = Yup.object().shape({\n    review: Yup.string()\n        .min(10, 'review is too short')\n        .max(300, 'review is too long')\n        .required('review is required'),\n});\n\nexport const FeedbackForm = ({ onClose, existingReviewId }) => {\n    const dispatch = useDispatch();\n    const userReview = useSelector(selectUserReview);\n    const [isEditActive, setIsEditActive] = useState(false);\n\n    // useEffect(() => {\n    //     if (existingReviewId) {\n    //         dispatch(fetchReviewById(existingReviewId));\n    //     }\n    // }, [dispatch, existingReviewId]);\n\n    // useEffect(() => {\n    //     console.log('2');\n    //     dispatch(fetchReviewById());\n    // }, [dispatch, userReview.review]);\n\n    // console.log(userReview);\n\n    const ratingChanged = newRating => {\n        // setRatingValue(newRating);\n        dispatch(changeRating(newRating));\n    };\n\n    const handleSubmit = (values, actions) => {\n        values.rating = Number(userReview.rating);\n        if (isEditActive) {\n            const reviewRequest = { id: userReview._id, review: values };\n            dispatch(editReview(reviewRequest));\n        } else {\n            dispatch(addReview(values));\n        }\n        actions.resetForm();\n        if (userReview.rating) {\n            onClose();\n        }\n    };\n\n    const handleEdit = () => {\n        setIsEditActive(!isEditActive);\n\n    };\n\n    const handleDelete = () => {\n        dispatch(deleteReview(userReview.id));\n        onClose();\n    };\n\n    return (\n        <Wrap>\n            <Formik\n                initialValues={{\n                    rating: userReview.rating,\n                    review: userReview.review || '',\n                }}\n                validationSchema={FeedbackSchema}\n                onSubmit={handleSubmit}\n            >\n                <Form>\n                    <Label name=\"rating\">Rating</Label>\n                    <Rating\n                        name=\"rating\"\n                        component=\"div\"\n                        value={Number(userReview.rating)}\n                        itemStyles={rateStyled}\n                        style={{ maxWidth: 110, gap: 4, marginBottom: '20px' }}\n                        onChange={ratingChanged}\n                        readOnly={Boolean(userReview.rating) && !isEditActive}\n                    />\n                    <WrapForInput>\n                        <WrapForReview>\n                            <Label htmlFor=\"review\">Review</Label>\n                            {Boolean(userReview.review) && (\n                                <WrapForEdit>\n                                    <EditBtn\n                                        onClick={handleEdit}\n                                        isActive={isEditActive}\n                                        type=\"button\"\n                                    >\n                                        <svg width=\"30\" height=\"30\">\n                                            <use href={`${pencil}#pencil`} />\n                                        </svg>\n                                    </EditBtn>\n                                    <DeleteBtn\n                                        type=\"button\"\n                                        onClick={handleDelete}\n                                    >\n                                        <svg width=\"30\" height=\"30\">\n                                            <use\n                                                href={`${trashReview}#trash-review`}\n                                            />\n                                        </svg>\n                                    </DeleteBtn>\n                                </WrapForEdit>\n                            )}\n                        </WrapForReview>\n\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Enter text\"\n                            id=\"review\"\n                            name=\"review\"\n                            component=\"textarea\"\n                            disabled={\n                                !isEditActive && Boolean(userReview.review)\n                            }\n                            \n                        />\n                        <ErrorMessage name=\"review\" component=\"div\" />\n                    </WrapForInput>\n\n                    {(!Boolean(userReview.review) || isEditActive) && (\n                        <FormBtnWrap>\n                            <FormBtn\n                                type=\"submit\"\n                                disabled={!userReview.rating}\n                            >\n                                {isEditActive ? 'Edit' : 'Save'}\n                            </FormBtn>\n                            <FormBtnCancel type=\"button\" onClick={onClose}>\n                                Cancel\n                            </FormBtnCancel>\n                        </FormBtnWrap>\n                    )}\n\n                    <BtnCloseWrap\n                        type=\"button\"\n                        aria-label=\"close button\"\n                        onClick={onClose}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <use href={`${close}#x-close`} />\n                        </svg>\n                    </BtnCloseWrap>\n                </Form>\n            </Formik>\n        </Wrap>\n    );\n};\n","import Modal from '../../Modal/Modal';\nimport { FeedbackForm} from '../../FeedbackForm/FeedbackForm';\n\nexport const AddFeedbackModal = ({ onClose }) => {\n    return (\n        <Modal onClose={onClose}>\n            <FeedbackForm onClose={onClose} />\n        </Modal>\n    );\n};\n","import styled from '@emotion/styled';\nimport { tablet, desktop, min } from 'styles/media';\n\nexport const BurgerMenuBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n    stroke: ${({ theme }) => theme.colors.textPrimary};\n\n    transition: ${({ theme }) =>\n        `stroke ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    ${min(tablet)} {\n        width: 34px;\n        height: 34px;\n    }\n\n    ${min(desktop)} {\n        display: none;\n    }\n`;\n\nexport const Svg = styled.svg`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ImgWrapper = styled.div`\n    display: none;\n\n    ${min(desktop)} {\n        display: flex;\n        margin-right: 8px;\n    }\n`;\n\nexport const HeaderContainer = styled.div`\n    max-width: 1087px;\n    display: flex;\n    align-items: center;\n    margin-bottom: 64px;\n    background-color: transparent;\n\n    ${min(desktop)} {\n        margin-bottom: 32px;\n    }\n`;\n\nexport const TextDiv = styled.div`\n    display: none;\n\n    ${min(desktop)} {\n        display: flex;\n        align-items: start;\n        flex-direction: column;\n        gap: 8px;\n    }\n`;\n\nexport const TitleH2 = styled.h2`\n    font-size: ${({ theme }) => theme.fontSizes.xxxl};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: calc(32 / 32);\n    text-shadow: ${({ theme }) => theme.shadows.text};\n    color: ${({ theme }) => theme.colors.textTitleHeader};\n`;\n\nexport const MotivationTextP = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeight.sb};\n    line-height: calc(18 / 14);\n    color: ${({ theme }) => theme.colors.textTitleHeader};\n`;\n\nexport const Span = styled.span`\n    color: ${({ theme }) => theme.colors.brand};\n`;\n\nexport const UIComponentsWrapperDiv = styled.div`\n    display: flex;\n    margin-left: auto;\n    gap: 8px;\n\n    ${min(tablet)} {\n        gap: 14px;\n    }\n`;\n\nexport const MenuWrapperDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 18px;\n\n    ${min(tablet)} {\n        gap: 24px;\n    }\n`;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ThemeToggler from './ThemeToggler';\nimport UserInfo from './UserInfo';\nimport AddFeedbackBtn from './AddFeedbackBtn';\nimport { AddFeedbackModal } from './AddFeedbackModal/AddFeedbackModal';\nimport sprite from 'images/icons.svg';\n\nimport image1x from '../../images/calendar-page/goose_desktop_tablet_1x_motivation.png';\nimport image2x from '../../images/calendar-page/goose_desktop_tablet_2x_motivation.png';\n\nimport {\n    HeaderContainer,\n    BurgerMenuBtn,\n    Svg,\n    ImgWrapper,\n    TextDiv,\n    TitleH2,\n    MotivationTextP,\n    Span,\n    UIComponentsWrapperDiv,\n    MenuWrapperDiv,\n} from './Header.styled';\nimport { useLocation } from 'react-router-dom';\nimport { selectTasks } from 'redux/calendar/calendarSelector';\n\nexport const Header = ({ onOpenClick }) => {\n    const userTasks = useSelector(selectTasks);\n\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    const showAddFeedbackModal = () => {\n        setIsOpenModal(true);\n    };\n\n    const hiddenAddFeedbackModal = () => {\n        setIsOpenModal(false);\n    };\n\n    const location = useLocation().pathname;\n\n    const pageTitle = location.includes('/calendar')\n        ? 'Calendar'\n        : location.includes('/account')\n        ? 'User Profile'\n        : location.includes('/statistics')\n        ? 'Statistics'\n        : '';\n\n    const hasUncompletedTask = userTasks.some(\n        i => i.category === 'in-progress' || i.category === 'to-do'\n    );\n\n    const locationIncludesDay = location.includes('/calendar/day');\n\n    return (\n        <header>\n            <HeaderContainer>\n                <BurgerMenuBtn onClick={onOpenClick}>\n                    <Svg>\n                        <use href={`${sprite}#menu-01`} />\n                    </Svg>\n                </BurgerMenuBtn>\n                {hasUncompletedTask && locationIncludesDay && (\n                    <ImgWrapper>\n                        <img\n                            srcSet={`${image1x} 1x, ${image2x} 2x`}\n                            src={image1x}\n                            alt=\"Goose's motivation\"\n                            width=\"64px\"\n                            height=\"60px\"\n                        />\n                    </ImgWrapper>\n                )}\n\n                <TextDiv>\n                    <TitleH2>{pageTitle}</TitleH2>\n                    {hasUncompletedTask && locationIncludesDay && (\n                        <MotivationTextP>\n                            <Span>Let go</Span> of the past and focus on the\n                            present!\n                        </MotivationTextP>\n                    )}\n                </TextDiv>\n                <UIComponentsWrapperDiv>\n                    <MenuWrapperDiv>\n                        <AddFeedbackBtn showModal={showAddFeedbackModal} />\n\n                        <ThemeToggler />\n                    </MenuWrapperDiv>\n\n                    <UserInfo />\n                </UIComponentsWrapperDiv>\n            </HeaderContainer>\n            {isOpenModal && (\n                <AddFeedbackModal\n                    isOpenModal={isOpenModal}\n                    onClose={hiddenAddFeedbackModal}\n                ></AddFeedbackModal>\n            )}\n        </header>\n    );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { tablet, min } from '../../../styles/media';\n\nexport const NavWrap = styled.div`\n    width: 100%;\n`;\n\nexport const NavTitle = styled.h3`\n    color: ${({ theme }) => theme.colors.textTitleSideBar};\n    font-family: Inter;\n    font-size: font-size: ${({ theme }) => theme.fontSizes.xs};\n    font-style: normal;\n    font-weight: ${({ theme }) => theme.fontWeight.sb};\n    line-height: normal;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const Item = styled.li`\n    border-radius: 8px;\n    width: 100%;\n    height: 56px;\n`;\nexport const List = styled.ul`\n    margin-top: 32px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const Icon = styled.svg`\n    width: 20px;\n    height: 20px;\n    stroke: ${({ theme }) => theme.colors.iconSideBar};\n    margin-right: 10px;\n\n    ${min(tablet)} {\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const IconStat = styled.svg`\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    fill: ${({ theme }) => theme.colors.iconSideBar};\n\n    ${min(tablet)} {\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    color: ${({ theme }) => theme.colors.textSideBar};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-style: normal;\n    font-weight: ${({ theme }) => theme.fontWeight.sb};\n    line-height: normal;\n\n    display: block;\n    padding: 16px 20px;\n    border-radius: 8px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    display: flex;\n    align-items: center;\n\n    ${min(tablet)} {\n        font-size: ${({ theme }) => theme.fontSizes.m};\n    }\n\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundSideBarCurrentPage};\n    }\n\n    &.active {\n        background: ${({ theme }) => theme.colors.backgroundSideBarCurrentPage};\n        color: ${({ theme }) => theme.colors.textSideBarCurrentPage};\n\n        svg {\n            stroke: ${({ theme }) => theme.colors.iconSideBar};\n            fill: ${({ theme }) => theme.colors.iconSideBar};\n        }\n\n        &.active svg {\n            stroke: ${({ theme }) => theme.colors.iconSideBarActive};\n            fill: ${({ theme }) => theme.colors.iconSideBarActive};\n        }\n    }\n`;\n","import {\n    NavWrap,\n    NavTitle,\n    Link,\n    Item,\n    List,\n    Icon,\n    IconStat,\n} from './UserNav.styled';\nimport Icons from '../../../images/icons.svg';\n\nconst UserNav = ({ onCloseClick }) => {\n    return (\n        <NavWrap>\n            <NavTitle>User Panel</NavTitle>\n            <List>\n                <Item>\n                    <Link to=\"account\" onClick={onCloseClick}>\n                        <Icon>\n                            <use href={`${Icons}#user-check`} />\n                        </Icon>\n                        <span>My account</span>\n                    </Link>\n                </Item>\n                <Item>\n                    <Link to=\"calendar\" onClick={onCloseClick}>\n                        <Icon>\n                            <use href={`${Icons}#calendar-check`} />\n                        </Icon>\n                        <span>Calendar</span>\n                    </Link>\n                </Item>\n                <Item>\n                    <Link to=\"statistics\" onClick={onCloseClick}>\n                        <IconStat fill=\"inherit\">\n                            <use href={`${Icons}#chart-statistics`} />\n                        </IconStat>\n                        <span>Statistics</span>\n                    </Link>\n                </Item>\n            </List>\n        </NavWrap>\n    );\n};\n\nexport default UserNav;\n","import styled from '@emotion/styled';\nimport { tablet, min } from '../../../styles/media';\n\nexport const ButtonLogout = styled.button`\n    width: 131px;\n    height: 46px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n    padding: 16px 23px;\n    margin-bottom: 24xp;\n\n    color: ${({ theme }) => theme.colors.white};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-style: normal;\n    font-weight: ${({ theme }) => theme.fontWeight.sb};\n    line-height: 1.333;\n    letter-spacing: -0.36px;\n\n    border: none;\n    border-radius: 16px;\n    background-color: ${({ theme }) => theme.colors.brand};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n\n    ${min(tablet)} {\n        width: 141px;\n        height: 56px;\n        font-size: ${({ theme }) => theme.fontSizes.l};\n        gap: 11px;\n    }\n`;\n\nexport const Icon = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: rgba(255, 255, 255, 1);\n    fill: none;\n\n    ${min(tablet)} {\n        width: 20px;\n        height: 20px;\n    }\n`;\n","import { useDispatch } from 'react-redux';\nimport Icons from '../../../images/icons.svg';\nimport { logout } from '../../../redux/auth/authOperations';\nimport { ButtonLogout, Icon } from './LogoutBtn.styled';\n\nconst LogoutBtn = () => {\n    const dispatch = useDispatch();\n    return (\n        <ButtonLogout\n            type=\"button\"\n            text=\"Logout\"\n            onClick={() => dispatch(logout())}\n        >\n            LogOut\n            <Icon>\n                <use href={`${Icons}#log-out`} />\n            </Icon>\n        </ButtonLogout>\n    );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\nimport { desktop, tablet, min } from '../../styles/media';\n\nexport const Wrapper = styled.div`\n    height: 100vh;\n    width: 225px;\n    padding: 24px 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: ${({ theme }) => theme.colors.backgroundSideBar};\n    position: fixed;\n    z-index: 10;\n\n    transform: ${props =>\n        props.isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n    display: ${props => (props.isOpen ? 'flex' : 'none')};\n\n    ${min(tablet)} {\n        width: 289px;\n        padding: 24px 32px;\n    }\n\n    ${min(desktop)} {\n        z-index: 1;\n        border-right: none;\n        transform: translateX(0);\n        padding: 32px 24px 24px 24px;\n    }\n`;\n\nexport const LogoWrapper = styled.div`\n    display: inline-flex;\n    align-items: center;\n    margin-bottom: 32px;\n`;\n\nexport const LogoImg = styled.img`\n    height: 35px;\n    width: 36px;\n    margin-right: 6px;\n\n    ${min(tablet)} {\n        height: 58px;\n        width: 60px;\n    }\n\n    ${min(desktop)} {\n        height: 68px;\n        width: 71px;\n        margin-right: 10px;\n    }\n`;\n\nexport const LogoTitle = styled.p`\n    color: ${({ theme }) => theme.colors.textTitleLogo};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.fontSizes.m};\n    font-style: normal;\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: 1;\n    letter-spacing: 0em;\n    margin-right: 25px;\n\n    ${min(tablet)} {\n        margin-right: 31px;\n    }\n    ${min(desktop)}) {\n        font-size: 24px;\n    }\n`;\n\nexport const SpanTitle = styled.span`\n    font-style: italic;\n    padding-right: 2px;\n    margin-left: -2px;\n`;\n\nexport const CloseBtn = styled.button`\n    display: flex;\n    width: 24px;\n    height: 24px;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border: none;\n    background: none;\n    padding: 0px;\n\n    ${min(tablet)} {\n        width: 34px;\n        height: 34px;\n    }\n    ${min(desktop)} {\n        display: none;\n    }\n`;\n\nexport const IconX = styled.svg`\n    width: 24px;\n    height: 24px;\n    stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n    ${min(tablet)} {\n        width: 34px;\n        height: 34px;\n    }\n`;\n\nexport const BtnContainer = styled.div`\n    display: flex;\n    margin-top: auto;\n`;\n","import { useEffect, useRef } from 'react';\n\nimport UserNav from './UserNav';\nimport LogoutBtn from './LogoutBtn';\nimport {\n    Wrapper,\n    LogoWrapper,\n    LogoImg,\n    CloseBtn,\n    IconX,\n    LogoTitle,\n    SpanTitle,\n    BtnContainer,\n} from './SideBar.styled';\nimport LogoRetina from '../../images/logo/logo-GOOSE-desk-2x.png';\nimport Logo from '../../images/logo/logo-GOOSE-desk-1x.png';\nimport Icons from '../../images/icons.svg';\n\nconst SideBar = ({ onCloseClick, isOpen }) => {\n    const sideBarRef = useRef(null);\n\n    useEffect(() => {\n        const handleClickOutside = event => {\n            if (\n                isOpen &&\n                sideBarRef.current &&\n                !sideBarRef.current.contains(event.target)\n            ) {\n                onCloseClick();\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isOpen, onCloseClick]);\n\n    return (\n        <Wrapper isOpen={isOpen} ref={sideBarRef}>\n            <div>\n                <LogoWrapper>\n                    <picture>\n                        <source\n                            srcSet={LogoRetina}\n                            media=\"(min-resolution: 2dppx)\"\n                        />\n                        <LogoImg src={Logo} alt=\"logo\" />\n                    </picture>\n                    <LogoTitle>\n                        G<SpanTitle>oo</SpanTitle>\n                        seTrack\n                    </LogoTitle>\n                    <CloseBtn type=\"button\" onClick={onCloseClick}>\n                        <IconX stroke=\"black\">\n                            <use href={`${Icons}#x-close`} />\n                        </IconX>\n                    </CloseBtn>\n                </LogoWrapper>\n                <UserNav onCloseClick={onCloseClick} />\n            </div>\n            <BtnContainer>\n                <LogoutBtn />\n            </BtnContainer>\n        </Wrapper>\n    );\n};\n\nexport default SideBar;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    background-color: ${({ theme }) => theme.colors.backgroundPrimary};\n    display: flex;\n    width: 375px;\n    min-height: 100vh;\n    margin: 0 auto;\n\n    @media (min-width: 768px) {\n        width: 768px;\n    }\n\n    @media (min-width: 1440px) {\n        width: 1440px;\n    }\n`;\n\nexport const Section = styled.div`\n    width: 100%;\n    min-height: 100%;\n    display: flex;\n    padding: 24px 20px 40px 20px;\n    flex-direction: column;\n\n    @media (min-width: 768px) {\n        padding: 25px 32px 38px 32px;\n    }\n\n    @media (min-width: 1440px) {\n        max-width: 1151px;\n        padding: 41px 32px 32px 32px;\n    }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Header } from 'components/Header';\nimport SideBar from 'components/SideBar';\nimport Spinner from 'components/Spinner/Spinner';\nimport { Wrapper, Section } from './MainLayout.styled';\n\nconst MainLayout = () => {\n    const [sideBareShow, setSideBareShow] = useState(window.innerWidth >= 1440);\n\n    const handleSideBareShow = () => {\n        if (window.innerWidth >= 1440) {\n            return;\n        }\n        setSideBareShow(!sideBareShow);\n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSideBareShow(window.innerWidth >= 1440);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n        <Wrapper>\n            <SideBar isOpen={sideBareShow} onCloseClick={handleSideBareShow} />\n            {sideBareShow && window.innerWidth >= 1440 && (\n                <div id=\"smallScreenContainer\" style={{ width: 289 }} />\n            )}\n\n            <Section>\n                <Header\n                    isOpen={sideBareShow}\n                    onOpenClick={handleSideBareShow}\n                />\n                <main>\n                    <Suspense fallback={<Spinner />}>\n                        <Outlet />\n                    </Suspense>\n                </main>\n            </Section>\n        </Wrapper>\n    );\n};\n\nexport default MainLayout;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`; \n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Backdrop, Modal } from './Modal.styled';\n\nconst rootModal = document.querySelector('#modal');\n\nconst CreateModal = ({ children, onClose, }) => {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handleClose = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n    return createPortal(\n        <Backdrop onClick={handleClose} >\n            <Modal >\n                    <div>{children}</div>\n            </Modal>\n        </Backdrop>,\n        rootModal\n    );\n};\n\nexport default CreateModal;\n","export const selectTasks = state => state.calendar.tasks;\n\nexport const selectError = state => state.calendar.error;\n\nexport const selectIsLoading = state => state.calendar.isLoading;\n\nexport const selectUserTask = state => state.calendar.userTask;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ToggleBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","brand","_ref2","concat","animations","duration","cubicBezier","_ref3","breakpoints","m","_ref4","backgroundBtnHover","Svg","_templateObject2","_useThemeContext","useThemeContext","onChangeTheme","isLightTheme","LIGHT","_jsx","onClick","children","href","sprite","InfoContainer","min","tablet","NameP","fontSizes","s","fontWeight","b","textUserName","l","AvatarDiv","_templateObject3","_ref5","borderRadius","xl","_ref6","borders","avatar","Img","_templateObject4","_ref7","FirstLetterOfName","_templateObject5","_ref8","xxl","_ref9","_ref10","userDefaults","user","useAuth","name","avatarURL","firstName","nameParts","split","length","substring","getFirstName","_jsxs","src","alt","Btn","backgroundBtn","white","showModal","dispatch","useDispatch","useEffect","fetchReviewById","type","Wrap","backgroundModalTask","Label","textTitleModalTask","backgroundPrimary","WrapForReview","WrapForEdit","EditBtn","backgroundPencil","DeleteBtn","_templateObject6","WrapForInput","_templateObject7","Input","Field","_templateObject8","textPrimary","backgroundModalTaskForm","calendar","ErrorMessage","FormikErrorMessage","_templateObject9","FormBtnWrap","_templateObject10","FormBtn","_templateObject11","FormBtnCancel","_templateObject12","_ref11","backgroundBtnCanceled","BtnCloseWrap","_templateObject13","_ref12","textTitleHeader","selectUserReview","state","reviews","userReview","rateStyled","itemShapes","d","activeFillColor","inactiveFillColor","FeedbackSchema","Yup","shape","review","max","required","FeedbackForm","onClose","existingReviewId","useSelector","_useState","useState","_useState2","_slicedToArray","isEditActive","setIsEditActive","Formik","initialValues","rating","validationSchema","onSubmit","values","actions","Number","reviewRequest","id","_id","editReview","addReview","resetForm","Form","Rating","component","value","itemStyles","style","maxWidth","gap","marginBottom","onChange","newRating","changeRating","readOnly","Boolean","htmlFor","isActive","width","height","pencil","deleteReview","trashReview","placeholder","disabled","close","AddFeedbackModal","Modal","BurgerMenuBtn","desktop","ImgWrapper","HeaderContainer","TextDiv","TitleH2","xxxl","shadows","text","MotivationTextP","sb","Span","UIComponentsWrapperDiv","MenuWrapperDiv","Header","onOpenClick","userTasks","selectTasks","isOpenModal","setIsOpenModal","location","useLocation","pathname","pageTitle","includes","hasUncompletedTask","some","i","category","locationIncludesDay","srcSet","image1x","AddFeedbackBtn","ThemeToggler","UserInfo","NavWrap","NavTitle","textTitleSideBar","xs","Item","List","Icon","iconSideBar","IconStat","Link","NavLink","textSideBar","backgroundSideBarCurrentPage","textSideBarCurrentPage","_ref13","_ref14","_ref15","iconSideBarActive","_ref16","onCloseClick","to","Icons","fill","ButtonLogout","logout","Wrapper","backgroundSideBar","props","isOpen","LogoWrapper","LogoImg","LogoTitle","textTitleLogo","SpanTitle","CloseBtn","IconX","BtnContainer","sideBarRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","media","stroke","UserNav","LogoutBtn","Section","window","innerWidth","sideBareShow","setSideBareShow","handleSideBareShow","handleResize","SideBar","Suspense","fallback","Spinner","Outlet","Backdrop","rootModal","querySelector","handleKeyDown","e","code","createPortal","currentTarget","tasks","mobile","bp"],"sourceRoot":""}