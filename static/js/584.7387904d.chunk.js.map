{"version":3,"file":"static/js/584.7387904d.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/locale/en-GB/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-GB/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, d MMMM yyyy',\n  long: 'd MMMM yyyy',\n  medium: 'd MMM yyyy',\n  short: 'dd/MM/yyyy'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import formatDistance from \"../en-US/_lib/formatDistance/index.js\";\nimport formatRelative from \"../en-US/_lib/formatRelative/index.js\";\nimport localize from \"../en-US/_lib/localize/index.js\";\nimport match from \"../en-US/_lib/match/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author Alex [@glintik]{@link https://github.com/glintik}\n */\nvar locale = {\n  code: 'en-GB',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","code","formatDistance","formatLong","formatRelative","localize","match","options","weekStartsOn","firstWeekContainsDate","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}