{"version":3,"file":"static/js/31.1cede63c.chunk.js","mappings":"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","sources":["components/Header/ThemeToggler/ThemeToggler.styled.jsx","components/Header/ThemeToggler/ThemeToggler.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/AddFeedbackBtn/AddFeedbackBtn.styled.jsx","components/Header/AddFeedbackBtn/AddFeedbackBtn.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/FeedbackForm/FeedbackForm.styled.js","redux/reviews/reviewsSelectors.js","components/FeedbackForm/FeedbackForm.jsx","components/Header/AddFeedbackModal/AddFeedbackModal.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SideBar/UserNav/UserNav.styled.jsx","components/SideBar/UserNav/UserNav.jsx","components/SideBar/LogoutBtn/LogoutBtn.styled.jsx","components/SideBar/LogoutBtn/LogoutBtn.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ToggleBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    background-color: transparent;\n    fill: ${({ theme }) => theme.colors.brand};\n    transition: ${({ theme }) =>\n        `fill ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 32px;\n        height: 32px;\n    }\n    :hover,\n    :focus {\n        fill: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n`;\n\nexport const Svg = styled.svg`\n    width: 100%;\n    height: 100%;\n`;\n","import { LIGHT } from 'constants';\nimport { useThemeContext } from 'hooks/ThemeContext';\nimport { ToggleBtn, Svg } from './ThemeToggler.styled';\nimport sprite from 'images/icons.svg';\n\nconst ThemeToggler = () => {\n    const { theme, onChangeTheme } = useThemeContext();\n    const isLightTheme = theme === LIGHT;\n\n    return (\n        <ToggleBtn onClick={onChangeTheme}>\n            {isLightTheme ? (\n                <Svg>\n                    <use href={`${sprite}#moon`} />\n                </Svg>\n            ) : (\n                <Svg>\n                    <use href={`${sprite}#sun`} />\n                </Svg>\n            )}\n        </ToggleBtn>\n    );\n};\n\nexport default ThemeToggler;\n","import styled from '@emotion/styled';\n\nexport const InfoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        gap: 14px;\n    }\n`;\n\nexport const NameP = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: calc(18 / 14);\n    color: ${({ theme }) => theme.colors.textUserName};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        font-size: ${({ theme }) => theme.fontSizes.l};\n        line-height: calc(18 / 18);\n    }\n`;\n\nexport const AvatarDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    border-radius: ${({ theme }) => theme.borderRadius.xl};\n    background-color: transparent;\n    border: ${({ theme }) => theme.borders.avatar};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 44px;\n        height: 44px;\n    }\n`;\n\nexport const FirstLetterOfName = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.userDefaults};\n`;\n","import useAuth from 'hooks/useAuth';\n\nimport {\n    InfoContainer,\n    NameP,\n    AvatarDiv,\n    FirstLetterOfName,\n} from './UserInfo.styled';\n\nconst UserInfo = () => {\n    const { user } = useAuth();\n\n    // if (!user) {\n    //     return console.log('bbwvenvenvlev');\n    // }\n\n    const { name = '', avatarURL } = user;\n    // const firstLetterOfUserName = name[0];\n\n    // console.log(avatarURL);\n    return (\n        <InfoContainer>\n            {name ? <NameP>{name}</NameP> : <NameP>User</NameP>}\n            <AvatarDiv>\n                {(avatarURL === '' || !avatarURL) && name ? (\n                    <FirstLetterOfName>\n                        {/* {firstLetterOfUserName} */}\n                        {name[0]}\n                    </FirstLetterOfName>\n                ) : avatarURL !== '' ? (\n                    <img src={avatarURL} alt={name} />\n                ) : null}\n            </AvatarDiv>\n        </InfoContainer>\n    );\n};\n\nexport default UserInfo;\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n    outline: none;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: calc(16 / 12);\n    padding: 8px 20px;\n    border-radius: 10px;\n    background-color: ${({ theme }) => theme.colors.backgroundBtn};\n    color: ${({ theme }) => theme.colors.white};\n\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        font-size: 14px;\n        line-height: calc(18 / 14);\n        padding: 12px 32px;\n    }\n\n    :hover,\n    :focus {\n        background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n`;\n","import { useEffect } from 'react';\nimport { Btn } from './AddFeedbackBtn.styled';\nimport { fetchReviewById } from 'redux/reviews/reviewsOperations';\nimport { useDispatch } from 'react-redux';\n\nconst AddFeedbackBtn = ({ showModal }) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // console.log('1');\n        dispatch(fetchReviewById());\n    }, [dispatch]);\n    return (\n        <Btn onClick={showModal} type=\"button\">\n            Feedback\n        </Btn>\n    );\n};\n\nexport default AddFeedbackBtn;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`; \n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Backdrop, Modal } from './Modal.styled';\n\nconst rootModal = document.querySelector('#modal');\n\nconst CreateModal = ({ children, onClose, }) => {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handleClose = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n    return createPortal(\n        <Backdrop onClick={handleClose} >\n            <Modal >\n                    <div>{children}</div>\n            </Modal>\n        </Backdrop>,\n        rootModal\n    );\n};\n\nexport default CreateModal;\n","import styled from '@emotion/styled';\n\nimport { Field, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Wrap = styled.div`\n    position: relative;\n    text-align: left;\n    padding: 28px 20px;\n    border-radius: 16px;\n    width: 335px;\n    background: ${({ theme }) => theme.colors.backgroundModalTask};\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n    @media (min-width: 768px) {\n        width: 468px;\n        padding: 32px;\n    }\n`;\n\nexport const Label = styled.label`\n    font-family: Inter;\n    color: ${({ theme }) => theme.colors.textTitleModalTask};\n    /* background: ${({ theme }) => theme.colors.backgroundPrimary}; */\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: calc((14 / 12) * 100%);\n`;\n\nexport const WrapForReview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 20px;\n    margin-bottom: 8px;\n`;\n\nexport const WrapForEdit = styled.div`\n    display: flex;\n    gap: 8px;\n`;\n\nexport const EditBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    stroke: rgba(62, 133, 243, 1);\n    fill: ${({ theme }) => theme.colors.backgroundPencel};\n    background-color: ${({ theme }) => theme.colors.backgroundPencel};\n\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #ffffff;\n        background-color: #3e85f3;\n        fill: #3e85f3;\n    }\n`;\n\nexport const DeleteBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 30px;\n    height: 30px;\n    background-color: rgba(234, 61, 101, 0.2);\n    fill: rgba(234, 61, 101, 0.2);\n    stroke: #ea3d65;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: {\n        stroke: #ea3d65;\n    }\n\n    &:hover,\n    &:focus {\n        stroke: #ffffff;\n        background-color: #ea3d65;\n    }\n`;\n\nexport const WrapForInput = styled.div`\n    margin-bottom: 14px;\n`;\n\nexport const Input = styled(Field)`\n    resize: none;\n    padding: 14px 18px 14px 18px;\n    width: 295px;\n    box-sizing: border-box;\n    height: 127px;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: calc((18 / 14) * 100%);\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    background: ${({ theme }) => theme.colors.backgroundModalTaskForm};\n    border-radius: 8px;\n    border: ${({ theme }) => theme.borders.modalTask};\n\n    @media (min-width: 768px) {\n        width: 404px;\n    }\n\n    @media (min-width: 1440px) {\n        margin-bottom: 18px;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n\n    ::placeholder {\n        opacity: 1;\n        color: rgba(52, 52, 52, 1);\n        font-weight: 600;\n        font-size: 14px;\n    }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n    margin-left: 18px;\n    max-width: 100%;\n    color: #da1414;\n    max-width: 240px;\n    font-size: 12px;\n    font-weight: 500;\n    @media (min-width: 768px) {\n        max-width: 330px;\n    }\n`;\n\nexport const FormBtnWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\n\nexport const FormBtn = styled.button`\n    color: #ffffff;\n    background-color: #3e85f3;\n    text-transform: none;\n    width: 262px;\n    height: 48px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        background-color: #2b78ef;\n    }\n\n    &:disabled {\n        cursor: not-allowed;\n    }\n`;\n\nexport const FormBtnCancel = styled.button`\n    color: rgba(52, 52, 52, 1);\n    background-color: #e5edfa;\n    text-transform: none;\n    width: 262px;\n    height: 48px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: #2b78ef;\n    }\n`;\n\nexport const BtnCloseWrap = styled.button`\n    position: absolute;\n    top: 18px;\n    right: 18px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    stroke: ${({ theme }) => theme.colors.textTitleHeader};\n    transform-origin: 0px 0px;\n    transition: cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #2b78ef;\n    }\n`;\n\n\n\n\n\n\n\n","export const selectReviews = state => state.reviews.reviews;\nexport const selectIsLoading = state => state.reviews.isLoading;\nexport const selectError = state => state.reviews.error;\nexport const selectUserReview = state => state.reviews.userReview;\n","import * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\n\nimport {\n    Input,\n    Label,\n    FormBtn,\n    Wrap,\n    FormBtnWrap,\n    FormBtnCancel,\n    EditBtn,\n    DeleteBtn,\n    WrapForEdit,\n    WrapForReview,\n    BtnCloseWrap,\n    ErrorMessage,\n    WrapForInput,\n} from './FeedbackForm.styled';\n\nimport pencil from '../../images/icons.svg';\nimport trashReview from '../../images/icons.svg';\nimport close from '../../images/icons.svg';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserReview } from 'redux/reviews/reviewsSelectors';\nimport {\n    addReview,\n    deleteReview,\n    editReview,\n} from 'redux/reviews/reviewsOperations';\nimport { changeRating } from 'redux/reviews/reviewsSlice';\nimport { Rating } from '@smastrom/react-rating';\nimport '@smastrom/react-rating/style.css';\n\nconst rateIcon = (\n    <path d=\"M791.706 1024c-12.164 0-24.269-3.906-34.692-11.681l-245.007-183.662-245.007 183.662c-10.151 7.636-22.35 11.717-34.855 11.674s-24.677-4.22-34.777-11.922c-10.109-7.665-17.65-18.461-21.549-30.866-3.899-12.398-3.956-25.768-0.166-38.21l91.377-308.266-242.807-178.847c-10.063-7.763-17.536-18.636-21.363-31.082s-3.813-25.835 0.039-38.272c3.883-12.407 11.397-23.225 21.482-30.925s22.229-11.892 34.717-11.984l300.724-0.473 95.743-300.619c3.951-12.384 11.53-23.155 21.662-30.787s22.304-11.739 34.793-11.739c12.489 0 24.662 4.107 34.794 11.739s17.71 18.403 21.661 30.787l94.117 300.619 302.263 0.473c12.5 0.074 24.664 4.263 34.757 11.975s17.605 18.552 21.475 30.982c3.862 12.429 3.884 25.816 0.051 38.257-3.825 12.442-11.308 23.306-21.38 31.049l-242.805 178.847 91.37 308.266c3.803 12.434 3.752 25.805-0.139 38.21-3.899 12.398-11.432 23.201-21.541 30.866-10.13 7.768-22.374 11.944-34.94 11.93v0z\"></path>\n);\n\nconst rateStyled = {\n    itemShapes: rateIcon,\n    activeFillColor: '#FFAC33',\n    inactiveFillColor: '#CEC9C1',\n};\n\nconst FeedbackSchema = Yup.object().shape({\n    review: Yup.string()\n        .min(10, 'review is too short')\n        .max(300, 'review is too long')\n        .required('review is required'),\n});\n\nexport const FeedbackForm = ({ onClose, existingReviewId }) => {\n    const dispatch = useDispatch();\n    const userReview = useSelector(selectUserReview);\n    const [isEditActive, setIsEditActive] = useState(false);\n\n    // useEffect(() => {\n    //     if (existingReviewId) {\n    //         dispatch(fetchReviewById(existingReviewId));\n    //     }\n    // }, [dispatch, existingReviewId]);\n\n    // useEffect(() => {\n    //     console.log('2');\n    //     dispatch(fetchReviewById());\n    // }, [dispatch, userReview.review]);\n\n    // console.log(userReview);\n\n    const ratingChanged = newRating => {\n        // setRatingValue(newRating);\n        dispatch(changeRating(newRating));\n    };\n\n    const handleSubmit = (values, actions) => {\n        values.rating = Number(userReview.rating);\n        if (isEditActive) {\n            const reviewRequest = { id: userReview._id, review: values };\n            dispatch(editReview(reviewRequest));\n        } else {\n            dispatch(addReview(values));\n        }\n        actions.resetForm();\n        if (userReview.rating) {\n            onClose();\n        }\n    };\n\n    const handleEdit = () => {\n        setIsEditActive(!isEditActive);\n    };\n\n    const handleDelete = () => {\n        dispatch(deleteReview(userReview.id));\n        onClose();\n    };\n\n    return (\n        <Wrap>\n            <Formik\n                initialValues={{\n                    rating: userReview.rating,\n                    review: userReview.review || '',\n                }}\n                validationSchema={FeedbackSchema}\n                onSubmit={handleSubmit}\n            >\n                <Form>\n                    <Label name=\"rating\">Rating</Label>\n                    <Rating\n                        name=\"rating\"\n                        component=\"div\"\n                        value={Number(userReview.rating)}\n                        itemStyles={rateStyled}\n                        style={{ maxWidth: 110, gap: 4, marginBottom: '20px' }}\n                        onChange={ratingChanged}\n                        readOnly={Boolean(userReview.rating) && !isEditActive}\n                    />\n                    <WrapForInput>\n                        <WrapForReview>\n                            <Label htmlFor=\"review\">Review</Label>\n                            {Boolean(userReview.review) && (\n                                <WrapForEdit>\n                                    <EditBtn\n                                        onClick={handleEdit}\n                                        isActive={isEditActive}\n                                        type=\"button\"\n                                    >\n                                        <svg width=\"30\" height=\"30\">\n                                            <use href={`${pencil}#pencil`} />\n                                        </svg>\n                                    </EditBtn>\n                                    <DeleteBtn\n                                        type=\"button\"\n                                        onClick={handleDelete}\n                                    >\n                                        <svg width=\"30\" height=\"30\">\n                                            <use\n                                                href={`${trashReview}#trash-review`}\n                                            />\n                                        </svg>\n                                    </DeleteBtn>\n                                </WrapForEdit>\n                            )}\n                        </WrapForReview>\n\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Enter text\"\n                            id=\"review\"\n                            name=\"review\"\n                            component=\"textarea\"\n                            disabled={\n                                !isEditActive && Boolean(userReview.review)\n                            }\n                        />\n                        <ErrorMessage name=\"review\" component=\"div\" />\n                    </WrapForInput>\n\n                    {(!Boolean(userReview.review) || isEditActive) && (\n                        <FormBtnWrap>\n                            <FormBtn\n                                type=\"submit\"\n                                disabled={!userReview.rating}\n                            >\n                                {isEditActive ? 'Edit' : 'Save'}\n                            </FormBtn>\n                            <FormBtnCancel type=\"button\" onClick={onClose}>\n                                Cancel\n                            </FormBtnCancel>\n                        </FormBtnWrap>\n                    )}\n\n                    <BtnCloseWrap\n                        type=\"button\"\n                        aria-label=\"close button\"\n                        onClick={onClose}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <use href={`${close}#x-close`} />\n                        </svg>\n                    </BtnCloseWrap>\n                </Form>\n            </Formik>\n        </Wrap>\n    );\n};\n","import Modal from '../../Modal/Modal';\nimport { FeedbackForm} from '../../FeedbackForm/FeedbackForm';\n\nexport const AddFeedbackModal = ({ onClose }) => {\n    return (\n        <Modal onClose={onClose}>\n            <FeedbackForm onClose={onClose} />\n        </Modal>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const BurgerMenuBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n    stroke: ${({ theme }) => theme.colors.textPrimary};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 34px;\n        height: 34px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: none;\n    }\n`;\n\nexport const Svg = styled.svg`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ImgWrapper = styled.div`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: flex;\n        margin-right: 8px;\n    }\n`;\n\nexport const HeaderContainer = styled.div`\n    max-width: 1087px;\n    display: flex;\n    align-items: center;\n    margin-bottom: 64px;\n    background-color: ${({ theme }) => theme.colors.backgroundPrimary};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        margin-bottom: 32px;\n    }\n`;\n\nexport const TextDiv = styled.div`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: flex;\n        align-items: start;\n        flex-direction: column;\n        gap: 8px;\n    }\n`;\n\nexport const TitleH2 = styled.h2`\n    font-size: ${({ theme }) => theme.fontSizes.xxxl};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: calc(32 / 32);\n    text-shadow: ${({ theme }) => theme.shadows.text};\n    color: ${({ theme }) => theme.colors.textTitleHeader};\n`;\n\nexport const MotivationTextP = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeight.sb};\n    line-height: calc(18 / 14);\n    color: ${({ theme }) => theme.colors.textTitleHeader};\n`;\n\nexport const Span = styled.span`\n    color: ${({ theme }) => theme.colors.brand};\n`;\n\nexport const UIComponentsWrapperDiv = styled.div`\n    display: flex;\n    margin-left: auto;\n    gap: 8px;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        gap: 14px;\n    }\n`;\n\nexport const MenuWrapperDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 18px;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        gap: 24px;\n    }\n`;\n","import React, { useState } from 'react';\nimport ThemeToggler from './ThemeToggler';\nimport UserInfo from './UserInfo';\nimport AddFeedbackBtn from './AddFeedbackBtn';\nimport { AddFeedbackModal } from './AddFeedbackModal/AddFeedbackModal';\nimport sprite from 'images/icons.svg';\n\nimport image1x from '../../images/calendar-page/goose_desktop_tablet_1x_motivation.png';\nimport image2x from '../../images/calendar-page/goose_desktop_tablet_2x_motivation.png';\n\nimport {\n    HeaderContainer,\n    BurgerMenuBtn,\n    Svg,\n    ImgWrapper,\n    TextDiv,\n    TitleH2,\n    MotivationTextP,\n    Span,\n    UIComponentsWrapperDiv,\n    MenuWrapperDiv,\n} from './Header.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const Header = ({ onOpenClick }) => {\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    const showAddFeedbackModal = () => {\n        setIsOpenModal(true);\n    };\n\n    const hiddenAddFeedbackModal = () => {\n        setIsOpenModal(false);\n    };\n\n    const location = useLocation().pathname;\n    // для перевірки userTasks тимчасово\n    const userTasks = [{ category: 'in-progress' }, { category: 'to-do' }];\n    // const userTasks = [{}];\n\n    const pageTitle = location.includes('/calendar')\n        ? 'Calendar'\n        : location.includes('/account')\n        ? 'User Profile'\n        : location.includes('/statistics')\n        ? 'Statistics'\n        : '';\n\n    const hasUncompletedTask = userTasks.some(\n        i => i.category === 'in-progress' || i.category === 'to-do'\n    );\n    const locationPageCalendar = pageTitle === 'Calendar';\n\n    return (\n        <header>\n            <HeaderContainer>\n                <BurgerMenuBtn onClick={onOpenClick}>\n                    <Svg>\n                        <use href={`${sprite}#menu-01`} />\n                    </Svg>\n                </BurgerMenuBtn>\n                {hasUncompletedTask && locationPageCalendar && (\n                    <ImgWrapper>\n                        <img\n                            srcSet={`${image1x} 1x, ${image2x} 2x`}\n                            src={image1x}\n                            alt=\"Goose's motivation\"\n                            width=\"64px\"\n                            height=\"60px\"\n                        />\n                    </ImgWrapper>\n                )}\n\n                <TextDiv>\n                    <TitleH2>{pageTitle}</TitleH2>\n                    {hasUncompletedTask && locationPageCalendar && (\n                        <MotivationTextP>\n                            <Span>Let go</Span> of the past and focus on the\n                            present!\n                        </MotivationTextP>\n                    )}\n                </TextDiv>\n                <UIComponentsWrapperDiv>\n                    <MenuWrapperDiv>\n                        <AddFeedbackBtn showModal={showAddFeedbackModal} />\n\n                        <ThemeToggler />\n                    </MenuWrapperDiv>\n\n                    <UserInfo />\n                </UIComponentsWrapperDiv>\n            </HeaderContainer>\n            {isOpenModal && (\n                <AddFeedbackModal\n                    isOpenModal={isOpenModal}\n                    onClose={hiddenAddFeedbackModal}\n                ></AddFeedbackModal>\n            )}\n        </header>\n    );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const NavWrap = styled.div`\n    width: 100%;\n`;\n\nexport const NavTitle = styled.h3`\n    color: ${({ theme }) => theme.colors.textTitleSideBar};\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n`;\n\nexport const Item = styled.li`\n    border-radius: 8px;\n    width: 100%;\n    height: 56px;\n`;\nexport const List = styled.ul`\n    margin-top: 32px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const Icon = styled.svg`\n    width: 20px;\n    height: 20px;\n    stroke: ${({ theme }) => theme.colors.iconSideBar};\n    margin-right: 10px;\n\n    @media (min-width: 768px) {\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const IconStat = styled.svg`\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    fill: ${({ theme }) => theme.colors.iconSideBar};\n\n    @media (min-width: 768px) {\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    color: ${({ theme }) => theme.colors.textSideBar};\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    display: block;\n    padding: 16px 20px;\n    border-radius: 8px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    display: flex;\n    align-items: center;\n\n    @media (min-width: 768px) {\n        font-size: 16px;\n    }\n\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundSideBarCurrentPage};\n    }\n\n    &.active {\n        background: ${({ theme }) => theme.colors.backgroundSideBarCurrentPage};\n        color: ${({ theme }) => theme.colors.textSideBarCurrentPage};\n\n        svg {\n            stroke: ${({ theme }) => theme.colors.iconSideBar};\n            fill: ${({ theme }) => theme.colors.iconSideBar};\n        }\n\n        &.active svg {\n            stroke: ${({ theme }) => theme.colors.iconSideBarActive};\n            fill: ${({ theme }) => theme.colors.iconSideBarActive};\n        }\n    }\n`;\n","import {\n    NavWrap,\n    NavTitle,\n    Link,\n    Item,\n    List,\n    Icon,\n    IconStat,\n} from './UserNav.styled';\nimport Icons from '../../../images/icons.svg';\n\nconst UserNav = () => {\n    return (\n        <NavWrap>\n            <NavTitle>User Panel</NavTitle>\n            <List>\n                <Item>\n                    <Link to=\"account\">\n                        <Icon>\n                            <use href={`${Icons}#user-check`} />\n                        </Icon>\n                        <span>My account</span>\n                    </Link>\n                </Item>\n                <Item>\n                    <Link to=\"calendar\">\n                        <Icon>\n                            <use href={`${Icons}#calendar-check`} />\n                        </Icon>\n                        <span>Calendar</span>\n                    </Link>\n                </Item>\n                <Item>\n                    <Link to=\"statistics\">\n                        <IconStat fill=\"inherit\">\n                            <use href={`${Icons}#chart-statistics`} />\n                        </IconStat>\n                        <span>Statistics</span>\n                    </Link>\n                </Item>\n            </List>\n        </NavWrap>\n    );\n};\n\nexport default UserNav;\n","import styled from '@emotion/styled';\n\nexport const ButtonLogout = styled.button`\n    width: 131px;\n    height: 46px;\n    padding: 16px 23px;\n    border: none;\n    border-radius: 16px;\n    color: #ffffff;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.333;\n    letter-spacing: -0.36px;\n\n    background-color: #3e85f3;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n    margin-bottom: 24xp;\n    &:hover,\n    &:focus {\n        background-color: #2b78ef;\n    }\n\n    @media (min-width: 768px) {\n        width: 141px;\n        height: 56px;\n        font-size: 18px;\n        gap: 11px;\n    }\n`;\n\nexport const Icon = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: rgba(255, 255, 255, 1);\n    fill: none;\n\n    @media (min-width: 768px) {\n        width: 20px;\n        height: 20px;\n    }\n`;\n","import { useDispatch } from 'react-redux';\nimport Icons from '../../../images/icons.svg';\nimport { logout } from '../../../redux/auth/authOperations';\nimport { ButtonLogout, Icon } from './LogoutBtn.styled';\n\nconst LogoutBtn = () => {\n    const dispatch = useDispatch();\n    return (\n        <ButtonLogout\n            type=\"button\"\n            text=\"Logout\"\n            onClick={() => dispatch(logout())}\n        >\n            LogOut\n            <Icon>\n                <use href={`${Icons}#log-out`} />\n            </Icon>\n        </ButtonLogout>\n    );\n};\n\nexport default LogoutBtn;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    height: 812px;\n    width: 225px;\n    padding: 32px 24px 24px 24px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: ${({ theme }) => theme.colors.backgroundSideBar};\n    position: absolute;\n    z-index: 10;\n    border-right: 1px solid rgba(220, 227, 229, 0.5);\n\n    transform: ${props =>\n        props.isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n    display: ${props => (props.isOpen ? 'flex' : 'none')};\n\n    @media (min-width: 768px) {\n        width: 289px;\n        height: 1024px;\n    }\n\n    @media (min-width: 1440px) {\n        height: 900px;\n        position: relative;\n        z-index: 1;\n        border-right: none;\n        transform: translateX(0);\n    }\n`;\n\nexport const LogoWrapper = styled.div`\n    display: inline-flex;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 32px;\n`;\n\nexport const LogoImg = styled.img`\n    height: 35px;\n    width: 36px;\n    margin-right: 6px;\n\n    @media (min-width: 768px) {\n        height: 58px;\n        width: 60px;\n    }\n\n    @media (min-width: 1440px) {\n        height: 68px;\n        width: 71px;\n        margin-right: 10px;\n    }\n`;\n\nexport const LogoTitle = styled.p`\n    color: ${({ theme }) => theme.colors.textTitleLogo};\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1;\n    letter-spacing: 0em;\n\n    @media (min-width: 1440px) {\n        font-size: 24px;\n    }\n`;\n\nexport const SpanTitle = styled.span`\n    font-style: italic;\n    padding-right: 2px;\n    margin-left: -2px;\n`;\n\nexport const CloseBtn = styled.button`\n    display: flex;\n    width: 24px;\n    height: 24px;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border: none;\n    background: none;\n    padding: 0px;\n\n    @media (min-width: 768px) {\n        width: 34px;\n        height: 34px;\n    }\n    @media (min-width: 1440px) {\n        display: none;\n    }\n`;\n\nexport const IconX = styled.svg`\n    width: 24px;\n    height: 24px;\n    stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n    @media (min-width: 768px) {\n        width: 34px;\n        height: 34px;\n    }\n`;\n\nexport const BtnContainer = styled.div`\n    display: flex;\n    margin-top: auto;\n`;\n","import UserNav from './UserNav';\nimport LogoutBtn from './LogoutBtn';\nimport {\n    Wrapper,\n    LogoWrapper,\n    LogoImg,\n    CloseBtn,\n    IconX,\n    LogoTitle,\n    SpanTitle,\n    BtnContainer,\n} from './SideBar.styled';\nimport LogoRetina from '../../images/logo/logo-GOOSE-desk-2x.png';\nimport Logo from '../../images/logo/logo-GOOSE-desk-1x.png';\nimport Icons from '../../images/icons.svg';\n\nconst SideBar = ({ onCloseClick, isOpen }) => {\n    return (\n        <Wrapper isOpen={isOpen}>\n            <div>\n                <LogoWrapper>\n                    <picture>\n                        <source\n                            srcSet={LogoRetina}\n                            media=\"(min-resolution: 2dppx)\"\n                        />\n                        <LogoImg src={Logo} alt=\"logo\" />\n                    </picture>\n                    <LogoTitle>\n                        G<SpanTitle>oo</SpanTitle>\n                        seTrack\n                    </LogoTitle>\n                    <CloseBtn type=\"button\" onClick={onCloseClick}>\n                        <IconX stroke=\"black\">\n                            <use href={`${Icons}#x-close`} />\n                        </IconX>\n                    </CloseBtn>\n                </LogoWrapper>\n                <UserNav />\n            </div>\n            <BtnContainer>\n                <LogoutBtn />\n            </BtnContainer>\n        </Wrapper>\n    );\n};\n\nexport default SideBar;\n","import styled from '@emotion/styled';\n\nexport const SpinnerStyled = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerStyled } from './Spinner.styled';\n\nexport default function Spinner() {\n    return (\n        <SpinnerStyled>\n            <RotatingLines\n                strokeColor=\"3E85F3\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"130\"\n                visible={true}\n            />\n        </SpinnerStyled>\n    );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    background-color: ${({ theme }) => theme.colors.backgroundPrimary};\n    display: flex;\n    width: 375px;\n    min-height: 100vh;\n    margin: 0 auto;\n\n    @media (min-width: 768px) {\n        width: 768px;\n    }\n\n    @media (min-width: 1440px) {\n        width: 1440px;\n    }\n`;\n\nexport const Section = styled.div`\n    width: 100%;\n    min-height: 100%;\n    display: flex;\n    padding: 24px 20px 40px 20px;\n    flex-direction: column;\n\n    @media (min-width: 768px) {\n        padding: 25px 32px 38px 32px;\n    }\n\n    @media (min-width: 1440px) {\n        max-width: 1151px;\n        padding: 41px 32px 32px 32px;\n    }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Header } from 'components/Header';\nimport SideBar from 'components/SideBar';\nimport Spinner from 'components/Spinner/Spinner';\nimport { Wrapper, Section } from './MainLayout.styled';\n\nconst MainLayout = () => {\n    const [sideBareShow, setSideBareShow] = useState(window.innerWidth >= 1440);\n\n    const handleSideBareShow = () => {\n        if (window.innerWidth >= 1440) {\n            return;\n        }\n        setSideBareShow(!sideBareShow);\n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSideBareShow(window.innerWidth >= 1440);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n        <Wrapper>\n            <SideBar isOpen={sideBareShow} onCloseClick={handleSideBareShow} />\n            <Section>\n                <Header\n                    isOpen={sideBareShow}\n                    onOpenClick={handleSideBareShow}\n                />\n                <main>\n                    <Suspense fallback={<Spinner />}>\n                        <Outlet />\n                    </Suspense>\n                </main>\n            </Section>\n        </Wrapper>\n    );\n};\n\nexport default MainLayout;\n"],"names":["ToggleBtn","styled","theme","colors","brand","animations","duration","cubicBezier","breakpoints","m","backgroundBtnHover","Svg","useThemeContext","onChangeTheme","isLightTheme","LIGHT","onClick","href","sprite","InfoContainer","NameP","fontSizes","s","fontWeight","b","textUserName","l","AvatarDiv","borderRadius","xl","borders","avatar","FirstLetterOfName","xxl","userDefaults","user","useAuth","name","avatarURL","src","alt","Btn","backgroundBtn","white","showModal","dispatch","useDispatch","useEffect","fetchReviewById","type","Backdrop","Modal","rootModal","document","querySelector","children","onClose","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Wrap","backgroundModalTask","Label","textTitleModalTask","backgroundPrimary","WrapForReview","WrapForEdit","EditBtn","backgroundPencel","DeleteBtn","WrapForInput","Input","Field","textPrimary","backgroundModalTaskForm","modalTask","ErrorMessage","FormikErrorMessage","FormBtnWrap","FormBtn","FormBtnCancel","BtnCloseWrap","textTitleHeader","selectUserReview","state","reviews","userReview","rateStyled","itemShapes","d","activeFillColor","inactiveFillColor","FeedbackSchema","Yup","shape","review","min","max","required","FeedbackForm","existingReviewId","useSelector","useState","isEditActive","setIsEditActive","initialValues","rating","validationSchema","onSubmit","values","actions","Number","reviewRequest","id","_id","editReview","addReview","resetForm","component","value","itemStyles","style","maxWidth","gap","marginBottom","onChange","newRating","changeRating","readOnly","Boolean","htmlFor","isActive","width","height","pencil","deleteReview","trashReview","placeholder","disabled","close","AddFeedbackModal","BurgerMenuBtn","ImgWrapper","HeaderContainer","TextDiv","TitleH2","xxxl","shadows","text","MotivationTextP","sb","Span","UIComponentsWrapperDiv","MenuWrapperDiv","Header","onOpenClick","isOpenModal","setIsOpenModal","location","useLocation","pathname","pageTitle","includes","hasUncompletedTask","category","some","i","locationPageCalendar","srcSet","image1x","NavWrap","NavTitle","textTitleSideBar","Item","List","Icon","iconSideBar","IconStat","Link","NavLink","textSideBar","backgroundSideBarCurrentPage","textSideBarCurrentPage","iconSideBarActive","to","Icons","fill","ButtonLogout","logout","Wrapper","backgroundSideBar","props","isOpen","LogoWrapper","LogoImg","LogoTitle","textTitleLogo","SpanTitle","CloseBtn","IconX","BtnContainer","onCloseClick","media","stroke","SpinnerStyled","Spinner","strokeColor","strokeWidth","animationDuration","visible","Section","innerWidth","sideBareShow","setSideBareShow","handleSideBareShow","handleResize","Suspense","fallback"],"sourceRoot":""}