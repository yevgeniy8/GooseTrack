{"version":3,"file":"static/js/744.eac53b81.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedDay/DayCalendarHead.styled.js","components/Calendar/ChoosedDay/DayCalendarHead.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/Calendar/ChoosedDay/TasksColumn/AddBtns.styled.js","components/Calendar/ChoosedDay/TasksColumn/AddTaskBtn.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnHeadBar.styled.js","components/Calendar/ChoosedDay/TasksColumn/AddTopBtn.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnHeadBar.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.styled.js","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.styled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskToolbar.styled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskToolbar.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.jsx","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.styled.js","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx","components/Header/UserInfo/UserInfo.styled.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/TaskModal/TaskForm/TaskForm.styled.js","components/TaskModal/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","redux/calendar/calendarSelector.js","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const WeekdaysList = styled.ul`\n    display: flex;\n    justify-content: space-around;\n    padding: 14px 0;\n    color: ${({ theme }) => theme.colors.textTitleHeader};\n    background: ${({ theme }) => theme.colors.backgroundSecondary};\n    border: 1px solid rgba(220, 227, 229, 0.8);\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 15px;\n`;\n\nexport const WeekdaysItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center; /* Выравнивание по центру по горизонтали */\n    text-align: center; /* Выравнивание текста по центру */\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: left;\n    text-transform: uppercase;\n\n    cursor: pointer;\n    /* &:nth-last-child(-n + 2) {\n        color: #3e85f3;\n    } */\n\n    /* &:nth-last-of-type(-n + 2) {\n    color: #3e85f3;\n  } */\n\n    /* &.current-day {\n        border-radius: 8px;\n        color: white;\n        width: 45px;\n        padding: 2px;\n        background-color: #3e85f3; /* Цвет выделения \n        font-weight: bold; /* Жирный шрифт для текущего дня \n    } */\n`;\n\nexport const Number = styled.div`\n    &.current-day {\n        border-radius: 8px;\n        color: white;\n        ${'' /* width: 45px; */}\n        padding: 4px 8px;\n        background-color: #3e85f3; /* Цвет выделения */\n        font-weight: bold; /* Жирный шрифт для текущего дня */\n    }\n`;\n\nexport const Day = styled.div`\n    color: #343434;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px; /* 128.571% */\n    text-transform: uppercase;\n\n    margin-bottom: 4px;\n`;\n","import {\n    WeekdaysItem,\n    WeekdaysList,\n    Number,\n    Day,\n} from './DayCalendarHead.styled';\nimport { useMediaQuery } from 'react-responsive';\n// import { DAYS, DAYS_MOB } from '../ChoosedMonth/utils';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport moment from 'moment';\n\nimport { useEffect, useState } from 'react';\n\nconst DayCalendarHead = () => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    const navigate = useNavigate();\n\n    const [isSelected, setIsSelected] = useState('');\n\n    const { currentDay } = useParams();\n\n    useEffect(() => {\n        moment.updateLocale('en', { week: { dow: 1 } });\n\n        [...Array(7)].map((_, idx) => {\n            const curr = moment(currentDay)\n                .clone()\n                .startOf('week')\n                .day(idx + 1)\n                .format('DD');\n\n            if (curr === currentDay.split('-')[2]) {\n                setIsSelected(idx);\n            }\n            return null;\n        });\n    }, [currentDay]);\n\n    const handleClick = date => {\n        const dateFormat = date.format('YYYY-MM-DD');\n        localStorage.setItem('date', dateFormat);\n        navigate(`/calendar/day/${dateFormat}`);\n    };\n\n    return (\n        <WeekdaysList>\n            {[...Array(7)].map((_, index) => (\n                <WeekdaysItem\n                    key={index}\n                    // className={index === isSelected ? 'current-day' : ''}\n                    onClick={() =>\n                        handleClick(\n                            moment(currentDay)\n                                .clone()\n                                .startOf('week')\n                                .day(index + 1)\n                        )\n                    }\n                >\n                    <Day>\n                        {isMobile\n                            ? moment()\n                                  .day(index + 1)\n                                  .format('ddd')[0]\n                            : moment()\n                                  .day(index + 1)\n                                  .format('ddd')}\n                    </Day>\n                    <Number\n                        className={index === isSelected ? 'current-day' : ''}\n                    >\n                        {moment(currentDay)\n                            .clone()\n                            .startOf('week')\n                            .day(index + 1)\n                            .format('D')}\n                    </Number>\n                </WeekdaysItem>\n            ))}\n        </WeekdaysList>\n    );\n};\n\nexport default DayCalendarHead;\n","import styled from '@emotion/styled';\nimport { desktop, min } from '../../../../styles/media';\n\nexport const ColumnList = styled.ul`\n    display: flex;\n    justify-content: space-between;\n    gap: 16px;\n    // height: 100vh;\n    overflow: auto hidden;\n    scroll-snap-type: x mandatory;\n\n    ${min(desktop)} {\n        gap: 27px;\n    }\n\n    &::-webkit-scrollbar {\n        width: 8px;\n        scrollbar-placement: bottom;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        border-radius: 12px;\n\n        background: ${({ theme }) => theme.colors.horizontalScroll};\n    }\n\n    &::-webkit-scrollbar-track {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundHorizontalScroll};\n    }\n`;\n","import styled from '@emotion/styled';\n\nexport const PlusIcon = styled.svg`\n  width: 50px;\n  height: 100%;\n\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // }\n`;\nexport const TopBtn = styled.button`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  padding: 0px;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  align-items: center;\n  ${'' /* width: 100%; */}\n\n  cursor: pointer;\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n  display: flex;\n\n  ${\n    '' /* border: none;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // } */\n  }\n`;\nexport const BtnToAdd = styled.button`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 18px; /* 128.571% */\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: ${({ theme }) => theme.colors.backgroundSideBarCurrentPage};\n\n  margin-top: 32px;\n  margin-bottom: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 52px;\n  width: 100%;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    background: ${({ theme }) => theme.colors.buttonAddTaskHover};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 4px #3e85f3;\n  }\n`;\nexport const IconX = styled.svg`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // }\n`;\n","import Icons from '../../../../images/icons.svg';\nimport { BtnToAdd, IconX } from './AddBtns.styled';\nimport { TaskModal } from '../../../TaskModal/TaskModal';\nimport React, { useState } from 'react';\n\nconst AddTaskBtn = ({ value }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  return (\n    <>\n      <BtnToAdd onClick={openModal}>\n        <IconX>\n          <use href={`${Icons}#add-plus`} />\n        </IconX>\n        Add task\n      </BtnToAdd>\n      {modalOpen && <TaskModal value={value} closeModal={closeModal} />}\n    </>\n  );\n};\n\nexport default AddTaskBtn;\n","import styled from '@emotion/styled';\n\nexport const ColumnHeader = styled.h2`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  ${'' /* text-align: center; */}\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.2; /* 120% */\n`;\nexport const ColumnContainer = styled.div`\n  display: flex;\n  margin-top: 27px;\n  margin-bottom: 47px;\n  justify-content: space-between;\n`;\nexport const PlusIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // }\n`;\nexport const TopAddBTN = styled.button`\n  display: flex;\n  padding: 0px;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  margin-left: auto;\n  cursor: pointer;\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n  display: flex;\n\n  border: none;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // }\n`;\n","import Icons from '../../../../images/icons.svg';\nimport { TaskModal } from '../../../TaskModal/TaskModal';\nimport React, { useState } from 'react';\nimport { PlusIcon, TopBtn } from './AddBtns.styled';\n\nconst TopAddBtn = ({ value }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  return (\n    <>\n      <TopBtn onClick={openModal}>\n        <PlusIcon>\n          <use href={`${Icons}#icon-plus-add`} />\n        </PlusIcon>\n      </TopBtn>\n      {modalOpen && <TaskModal value={value} closeModal={closeModal} />}\n    </>\n  );\n};\n\nexport default TopAddBtn;\n","import { ColumnHeader, ColumnContainer } from './ColumnHeadBar.styled';\nimport { PlusIcon } from './AddBtns.styled';\nimport Icons from '../../../../images/icons.svg';\nimport AddTopBtn from './AddTopBtn';\nconst ColumnHeadBar = ({ header, value }) => {\n  return (\n    <ColumnContainer>\n      <ColumnHeader>{header}</ColumnHeader>\n      <AddTopBtn value={value}>\n        <PlusIcon>\n          <use href={`${Icons}#icon-plus-add`} />\n        </PlusIcon>\n      </AddTopBtn>\n    </ColumnContainer>\n  );\n};\nexport default ColumnHeadBar;\n","import styled from '@emotion/styled';\n\nexport const TaskList = styled.ul`\n  gap: 17px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  overflow-y: auto;\n  max-height: 380px;\n  padding-right: 7px;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    padding: 50px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    padding: 50px;\n    border-radius: 12px;\n    background: ${({ theme }) => theme.colors.scrollbar};\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${({ theme }) => theme.colors.backgroundScrollbar};\n  }\n`;\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 27px;\n`;\nexport const ColumnItem = styled.li`\n  flex-basis: calc((100% - 2 * 27px) / 3);\n  background: snow;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  min-width: 135px;\n`;\n","import styled from '@emotion/styled';\n\nexport const CardItem = styled.li`\n  ${\n    '' /* width: 300px;\n  height: 112px; */\n  }\n  padding: 14px 14px 18px 14px;\n  background: ${({ theme }) => theme.colors.backgroundPrimary};\n  border-radius: 8px;\n  border: ${({ theme }) => theme.borders.calendar};\n`;\nexport const CardContainer = styled.div`\n  width: 100%;\n`;\n\nexport const CardMain = styled.div`\n  display: flex;\n`;\nexport const CardTitle = styled.h3`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n  padding: 0px;\n  margin-bottom: 30px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  height: 32px;\n  width: 32px;\n  ${'' /* padding: 6px; */}\n  border-radius: 50%;\n  border: 1.8px solid #3e85f3;\n`;\n\nexport const AvatarStyle = styled.img`\n  width: 16px;\n  height: 16px;\n`;\nexport const StatusHigh = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  text-align: center;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #f00;\n`;\nexport const StatusLow = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #0015ff;\n`;\n\nexport const StatusMedium = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #ff7700;\n`;\n","import styled from '@emotion/styled';\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${({ theme }) => theme.colors.iconTasks};\n`;\n\nexport const CardEditMenu = styled.ul`\n  padding: 0px;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: 14px;\n  margin-top: auto;\n  display: flex;\n  list-style: none;\n`;\nexport const CardEditBtn = styled.button`\n  padding: 0px;\n  border: none;\n  border-radius: 2px;\n  display: flex;\n  background-color: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    /* outline: none;\n        border: none; */\n    svg {\n      stroke: #3e85f3;\n    }\n  }\n\n  &:focus {\n    /* outline: none; */\n    /* border: none; */\n    /* box-shadow: 0 0 2px 2px #3e85f3; */\n  }\n`;\nexport const CtgPopUp = styled.div`\n  width: 140px;\n  align-items: center;\n  padding: 14px 16px;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  border-radius: 8px;\n`;\n\nexport const CtgPopBtn = styled.button`\n  ${'' /* padding: 5px 10px; */}\n  background: #fff;\n  ${'' /* border-radius: 8px; */}\n  border:none;\n  padding: 7px 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n","import Icons from '../../../../images/icons.svg';\nimport { Icon, CardEditMenu, CardEditBtn, CtgPopUp, CtgPopBtn } from './TaskToolbar.styled';\n// import {} from './TaskColumnCard.styled';\n\nimport { deleteTask } from 'redux/calendar/calendarOperations';\n\nimport { TaskModal } from 'components/TaskModal/TaskModal';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst TaskToolbar = ({ taskId, task }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [showCtgPopUp, setShowCtgPopUp] = useState(false);\n\n  const dispatch = useDispatch();\n  // Кнопка вызова категорий\n  const handleChangeCtg = () => {\n    setShowCtgPopUp(prevState => !prevState);\n  };\n  // Кнопка редактирования таски\n  const handleEditClick = () => setIsOpenModal(true);\n  const closeModal = () => {\n    setIsOpenModal(false);\n  };\n  // Кнопка удаления\n  const handleDeleteClick = () => {\n    dispatch(deleteTask(taskId));\n  };\n\n  return (\n    <>\n      <CardEditMenu>\n        <li>\n          {/* Кнопка стрелка, которая вызывает список категорий с маленьким попапом */}\n          <CardEditBtn type=\"button\" onClick={handleChangeCtg}>\n            <Icon>\n              <use href={`${Icons}#arrow-circle-broken-right`} />\n            </Icon>\n          </CardEditBtn>\n          {/* Сам попап с кнопками категорий */}\n          {showCtgPopUp && (\n            <CtgPopUp>\n              {/* 1 кнопка категории */}\n              <CtgPopBtn type=\"button\" onClick={handleChangeCtg}>\n                Category1\n                <Icon>\n                  <use href={`${Icons}#arrow-circle-broken-right`} />\n                </Icon>\n              </CtgPopBtn>\n              {/* 2 кнопка категории */}\n              <CtgPopBtn type=\"button\" onClick={handleChangeCtg}>\n                Category2\n                <Icon>\n                  <use href={`${Icons}#arrow-circle-broken-right`} />\n                </Icon>\n              </CtgPopBtn>\n            </CtgPopUp>\n          )}\n        </li>\n\n        {/* Остальные 2 кнопки в меню редактирования, уже сделанные */}\n        <li>\n          <CardEditBtn type=\"button\" onClick={handleEditClick}>\n            <Icon>\n              <use href={`${Icons}#pencil`} />\n            </Icon>\n          </CardEditBtn>\n        </li>\n        <li>\n          <CardEditBtn type=\"button\" onClick={handleDeleteClick}>\n            <Icon>\n              <use href={`${Icons}#trash`} />\n            </Icon>\n          </CardEditBtn>\n        </li>\n      </CardEditMenu>\n\n      {isOpenModal && <TaskModal action={'edit'} closeModal={closeModal} task={task} />}\n    </>\n  );\n};\nexport default TaskToolbar;\n","import useAuth from 'hooks/useAuth';\n\nimport { Img, FirstLetterOfName } from '../../../Header/UserInfo/UserInfo.styled';\nimport {\n  CardItem,\n  CardContainer,\n  CardMain,\n  CardTitle,\n  Container,\n  AvatarWrapper,\n  StatusHigh,\n  StatusMedium,\n  StatusLow,\n} from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar';\n\nconst TaskColumnCard = ({ tasks }) => {\n  const { user } = useAuth();\n  const { name, avatarURL } = user;\n  return (\n    <>\n      {tasks.map(taskData => (\n        <CardItem key={taskData._id}>\n          <CardContainer>\n            <CardTitle>{taskData.title}</CardTitle>\n            <CardMain>\n              <Container>\n                <AvatarWrapper>\n                  {(avatarURL === '' || !avatarURL) && name ? (\n                    <FirstLetterOfName>{name[0]}</FirstLetterOfName>\n                  ) : avatarURL !== '' ? (\n                    <Img src={avatarURL} alt={name} />\n                  ) : null}\n                </AvatarWrapper>\n                {taskData.priority === 'high' && <StatusHigh>{taskData.priority}</StatusHigh>}\n                {taskData.priority === 'medium' && <StatusMedium>{taskData.priority}</StatusMedium>}\n                {taskData.priority === 'low' && <StatusLow>{taskData.priority}</StatusLow>}\n              </Container>\n              <TaskToolbar taskId={taskData._id} task={taskData}></TaskToolbar>\n            </CardMain>\n          </CardContainer>\n        </CardItem>\n      ))}\n    </>\n  );\n};\n\nexport default TaskColumnCard;\n","import { TaskList } from './ColumnsTasksList.styled';\n\nimport TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\n\nconst ColumnsTasksList = ({ tasks }) => {\n    return (\n        <TaskList>\n            {tasks.length > 0 ? (\n                <TaskColumnCard tasks={tasks}></TaskColumnCard>\n            ) : (\n                <></>\n            )}\n        </TaskList>\n    );\n};\nexport default ColumnsTasksList;\n","import styled from '@emotion/styled';\nimport { tablet, min } from '../../../../styles/media';\n\nexport const TaskList = styled.ul`\n  gap: 18px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\nexport const Column = styled.li`\n  border-radius: 8px;\n  border: ${({ theme }) => theme.borders.calendar};\n  background: ${({ theme }) => theme.colors.backgroundSecondary};\n  /* margin-bottom: 100%; */\n  min-width: 335px;\n  padding-left: 14px;\n  padding-right: 18px;\n\n  ${min(tablet)} {\n    min-width: 344px;\n  }\n`;\nexport const Container = styled.div`\n  ${'' /* margin-bottom: 35px; */}\n`;\n// export const ColumnHeader = styled.div`\n//   list-style: none;\n// `;\n","import AddTaskBtn from './AddTaskBtn';\nimport ColumnHeadBar from './ColumnHeadBar';\nimport ColumnsTasksList from './ColumnsTasksList';\nimport { Column } from './TasksColumn.styled';\n\nconst TasksColumn = ({ header, tasks, value }) => {\n    return (\n        <Column>\n            <ColumnHeadBar header={header} value={value} />\n            <ColumnsTasksList tasks={tasks} />\n            <AddTaskBtn value={value} />\n        </Column>\n    );\n};\nexport default TasksColumn;\n","import { ColumnList } from './TasksColumnsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from 'redux/calendar/calendarOperations';\nimport { selectTasks } from 'redux/calendar/calendarSelector';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport TasksColumn from '../TasksColumn/TasksColumn';\n\nconst TasksColumnsList = () => {\n    const categoryOptions = [\n        { name: 'To do', value: 'to-do', id: 1 },\n        { name: 'In progress', value: 'in-progress', id: 2 },\n        { name: 'Done', value: 'done', id: 3 },\n    ];\n\n    const { currentDay } = useParams();\n\n    const dispatch = useDispatch();\n    const tasks = useSelector(selectTasks);\n    useEffect(() => {\n        dispatch(fetchTasks(currentDay));\n    }, [currentDay, dispatch]);\n\n    const filtredTasksByDay = tasks.filter(task => task.date === currentDay);\n\n    const filterTasksByCategory = category =>\n        filtredTasksByDay.filter(task => task.category === category);\n\n    return (\n        <ColumnList>\n            {categoryOptions.map(option => (\n                <TasksColumn\n                    header={option.name}\n                    tasks={filterTasksByCategory(option.value)}\n                    value={option.value}\n                    key={option.id}\n                />\n            ))}\n        </ColumnList>\n    );\n};\nexport default TasksColumnsList;\n","import DayCalendarHead from './DayCalendarHead';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nconst ChoosedDay = () => {\n    return (\n        <>\n            <DayCalendarHead />\n\n            <TasksColumnsList />\n        </>\n    );\n};\n\nexport default ChoosedDay;\n","import styled from '@emotion/styled';\n\nimport { tablet, min } from 'styles/media';\n\nexport const InfoContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n\n    ${min(tablet)} {\n        gap: 14px;\n    }\n`;\n\nexport const NameP = styled.p`\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    line-height: calc(18 / 14);\n    color: ${({ theme }) => theme.colors.textUserName};\n\n    ${min(tablet)} {\n        font-size: ${({ theme }) => theme.fontSizes.l};\n        line-height: calc(18 / 18);\n    }\n`;\n\nexport const AvatarDiv = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    border-radius: ${({ theme }) => theme.borderRadius.xl};\n    background-color: transparent;\n    border: ${({ theme }) => theme.borders.avatar};\n\n    ${min(tablet)} {\n        width: 44px;\n        height: 44px;\n    }\n`;\nexport const Img = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: ${({ theme }) => theme.borderRadius.xl};\n`;\nexport const FirstLetterOfName = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: ${({ theme }) => theme.fontSizes.xxl};\n    font-weight: ${({ theme }) => theme.fontWeight.b};\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.userDefaults};\n`;\n\nexport const BirthdayDiv = styled.div`\n    position: absolute;\n    top: -28%;\n    left: 30px;\n    transform: translate(-50%, -50%) rotate(40deg);\n    width: 100%;\n    height: auto;\n\n    ${min(tablet)} {\n        top: -15%;\n        left: 45px;\n    }\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.1);\n`;\n\nexport const Modal = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`; \n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { Backdrop, Modal } from './Modal.styled';\n\nconst rootModal = document.querySelector('#modal');\n\nconst CreateModal = ({ children, onClose, }) => {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handleClose = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n    return createPortal(\n        <Backdrop onClick={handleClose} >\n            <Modal >\n                    <div>{children}</div>\n            </Modal>\n        </Backdrop>,\n        rootModal\n    );\n};\n\nexport default CreateModal;\n","// import styled from '@emotion/styled'; \nimport styled from 'styled-components';\n\nimport {\n    Form as FormikForm,\n    Field,\n    ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n    position: relative;\n    width: 303px;\n    max-height: 420px;\n    padding: 48px 18px 40px;\n    background-color: #fff;\n   \n\n    border-radius: 8px;\n    border: #fff;\n\n    @media (min-width: 768px) {\n        width: 396px;\n        padding: 40px 28px;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    color: rgba(52, 52, 52, 0.8);\n\n    font-size: 12px;\n    font-family: Inter;\n    font-weight: 500;\n    line-height: 14px;\n`;\n\nexport const InputTitle = styled(Field)`\n    width: 267px;\n    height: 42px;\n    padding: 12px 14px;\n    border-radius: 8px;\n    background: #f6f6f6;\n    border: 1px solid #f6f6f6;\n\n    color: #343434;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    @media (min-width: 768px) {\n        width: 340px;\n        height: 46px;\n        padding: 14px 18px;\n    }\n\n    &::placeholder {\n        opacity: 1;\n        color: #343434;\n        font-size: 14px;\n        font-family: Inter;\n        font-weight: 600;\n        line-height: 18px;\n    }\n`;\n\nexport const TimeWrapper = styled.div`\n    display: flex;\n    gap: 14px;\n    margin-top: 16px;\n\n    @media (min-width: 768px) {\n        margin-top: 18px;\n    }\n`;\n\nexport const InputTime = styled(Field)`\n    width: 126px;\n    height: 42px;\n    padding: 12px 14px;\n    border-radius: 8px;\n    background: #f6f6f6;\n    border: 1px solid #f6f6f6;\n    cursor: pointer;\n\n    color: #343434;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    @media (min-width: 768px) {\n        width: 163px;\n        height: 46px;\n        padding: 14px 18px;\n    }\n\n    &::-webkit-calendar-picker-indicator {\n        display: none;\n    }\n`;\n\nexport const RadioWrapper = styled.div`\n    display: flex;\n    gap: 16px;\n`;\n\nexport const RadioField = styled(Field)`\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n`;\n\nexport const RadioLabel = styled.label`\n    position: relative;\n    padding-left: 16px;\n    display: flex;\n    align-items: center;\n    margin-top: 16px;\n\n    color: #343434;\n    font-size: 12px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 14px;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n        font-size: 14px;\n        line-height: 18px;\n        margin-top: 28px;\n    }\n`;\n\nexport const RadioSpan = styled.span`\n    position: absolute;\n    left: 0;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: ${({value}) => {\n        switch (value) {\n            case 'low':\n                return '#72C2F8';\n            case 'medium':\n                return '#F3B249';\n            case 'high':\n                return '#EA3D65';\n            default:\n                return 'black';\n        }\n    }};\n\n    ${RadioLabel}:nth-child(1) ${RadioField}:checked + & {\n        outline: 1.2px solid #72c2f8;\n        outline-offset: 1px;\n    }\n\n    ${RadioLabel}:nth-child(2) ${RadioField}:checked + & {\n        outline: 1.2px solid #f3b249;\n        outline-offset: 1px;\n    }\n\n    ${RadioLabel}:nth-child(3) ${RadioField}:checked + & {\n        outline: 1.2px solid #ea3d65;\n        outline-offset: 1px;\n    }\n`;\n\nexport const ButtonWrapper = styled.div`\n    display: flex;\n    gap: 14px;\n    margin-top: 32px;\n`;\n\nexport const ButtonAction = styled.button`\n    display: flex;\n    width: 135px;\n    height: 42px;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    padding: 12px;\n\n    border-radius: 8px;\n    border: none;\n    background-color: #3e85f3;\n    cursor: pointer;\n\n    color: #fff;\n    text-align: center;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    transition: background-color 250ms linear;\n\n    &:hover,\n    &:focus {\n        background-color: #2b78ef;\n    }\n\n    @media (min-width: 768px) {\n        width: 182px;\n        height: 48px;\n        padding: 15px;\n    }\n`;\n\nexport const ButtonCancel = styled.button`\n    width: 118px;\n    height: 42px;\n    padding: 12px;\n\n    border-radius: 8px;\n    border: none;\n    background: #efefef;\n    cursor: pointer;\n\n    color: #111;\n    text-align: center;\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 600;\n    line-height: 18px;\n\n    transition: background-color 250ms linear;\n\n    &:hover,\n    &:focus {\n        background-color: #e7e3e3;\n    }\n\n    @media (min-width: 768px) {\n        width: 182px;\n        height: 48px;\n        padding: 15px;\n    }\n`;\n\nexport const ButtonCloseWrap = styled.button`\n    position: absolute;\n    top: 14px;\n    right: 18px;\n\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    stroke: #111111;\n\n    transition: stroke 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        stroke: #2b78ef;\n    }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n    margin-left: 18px;\n    max-width: 100%;\n    color: #da1414;\n    font-size: 12px;\n    font-family: Inter;\n    line-height: 14px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport close from '../../../images/icons.svg';\nimport plus from '../../../images/icons.svg';\nimport pencil from '../../../images/icons.svg';\n\nimport {\n    ButtonAction,\n    ButtonCancel,\n    ButtonCloseWrap,\n    ButtonWrapper,\n    ErrorMessage,\n    Form,\n    InputTime,\n    InputTitle,\n    Label,\n    RadioField,\n    RadioLabel,\n    RadioSpan,\n    RadioWrapper,\n    TimeWrapper,\n} from './TaskForm.styled';\n\nimport { addTask, editTask } from 'redux/calendar/calendarOperations';\n\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst TaskSchema = Yup.object().shape({\n    title: Yup.string()\n        .max(250, 'Title is too long')\n        .required('Title is required'),\n    start: Yup.string().required('Start time is required'),\n    end: Yup.string()\n        .required('End time is required')\n        .test(\n            'is-greater',\n            'End time should be greater than start time',\n            function (value) {\n                const { start } = this.parent;\n                if (start && value) {\n                    const startTime = new Date(`2000-01-01T${start}`);\n                    const endTime = new Date(`2000-01-01T${value}`);\n                    return endTime > startTime;\n                }\n                return true;\n            }\n        ),\n    priority: Yup.string()\n        .oneOf(['low', 'medium', 'high'])\n        .required('Priority is required'),\n});\n\nexport const TaskForm = ({ value, onClose, action, task }) => {\n    const dispatch = useDispatch();\n    const { currentDay } = useParams();\n\n    const handleSubmit = (values, actions) => {\n        if (action) {\n            dispatch(editTask({ id: task._id, task: values }));\n            onClose();\n            return;\n        }\n\n        const obj = {\n            ...values,\n            category: value,\n            date: currentDay,\n        };\n        console.log(obj);\n        dispatch(addTask(obj));\n        onClose();\n    };\n\n    return (\n        <Formik\n            validationSchema={TaskSchema}\n            initialValues={{\n                title: task?.title || '',\n                start: task?.start || '09:00',\n                end: task?.end || '09:30',\n                priority: task?.priority || 'low',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                /* and other goodies */\n            }) => (\n                <Form>\n                    <Label>\n                        Title\n                        <InputTitle\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Enter text\"\n                            value={values.title}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                        />\n                        <ErrorMessage name=\"title\" component=\"div\" />\n                    </Label>\n\n                    <TimeWrapper>\n                        <Label>\n                            Start\n                            <InputTime\n                                type=\"time\"\n                                name=\"start\"\n                                value={values.start}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <ErrorMessage name=\"start\" component=\"div\" />\n                        </Label>\n                        <Label>\n                            End\n                            <InputTime\n                                type=\"time\"\n                                name=\"end\"\n                                value={values.end}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <ErrorMessage name=\"end\" component=\"div\" />\n                        </Label>\n                    </TimeWrapper>\n\n                    <RadioWrapper role=\"group\" aria-labelledby=\"my-radio-group\">\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"low\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"low\" />\n                            Low\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"medium\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"medium\" />\n                            Medium\n                        </RadioLabel>\n                        <RadioLabel>\n                            <RadioField\n                                type=\"radio\"\n                                name=\"priority\"\n                                value=\"high\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                            <RadioSpan value=\"high\" />\n                            High\n                        </RadioLabel>\n                        <ErrorMessage name=\"priority\" component=\"div\" />\n                    </RadioWrapper>\n\n                    {/* <button type=\"submit\">Ok</button> */}\n\n                    <ButtonWrapper>\n                        {action === 'edit' ? (\n                            <ButtonAction type=\"submit\">\n                                <svg width=\"18\" height=\"18\" stroke=\"#fff\">\n                                    <use href={`${pencil}#pencil`} />\n                                </svg>\n                                Edit\n                            </ButtonAction>\n                        ) : (\n                            <ButtonAction type=\"submit\">\n                                <svg width=\"20\" height=\"20\" stroke=\"#fff\">\n                                    <use href={`${plus}#add-plus`} />\n                                </svg>\n                                Add\n                            </ButtonAction>\n                        )}\n\n                        <ButtonCancel type=\"button\" onClick={onClose}>\n                            Cancel\n                        </ButtonCancel>\n                    </ButtonWrapper>\n\n                    <ButtonCloseWrap\n                        type=\"button\"\n                        aria-label=\"close button\"\n                        onClick={onClose}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <use href={`${close}#x-close`} />\n                        </svg>\n                    </ButtonCloseWrap>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n","import Modal from '../Modal/Modal';\nimport { TaskForm } from './TaskForm/TaskForm';\n\nexport const TaskModal = ({ action, value, closeModal, task }) => {\n    return (\n        <Modal onClose={closeModal}>\n            <TaskForm\n                action={action}\n                value={value}\n                onClose={closeModal}\n                task={task}\n            />\n        </Modal>\n    );\n};\n","export const selectTasks = state => state.calendar.tasks;\n\nexport const selectError = state => state.calendar.error;\n\nexport const selectIsLoading = state => state.calendar.isLoading;\n\nexport const selectUserTask = state => state.calendar.userTask;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["WeekdaysList","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","textTitleHeader","_ref2","backgroundSecondary","WeekdaysItem","_templateObject2","Number","_templateObject3","Day","_templateObject4","isMobile","useMediaQuery","maxWidth","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isSelected","setIsSelected","currentDay","useParams","useEffect","moment","week","dow","_toConsumableArray","Array","map","_","idx","clone","startOf","day","format","split","_jsx","children","index","_jsxs","onClick","date","dateFormat","localStorage","setItem","concat","handleClick","className","ColumnList","min","desktop","horizontalScroll","backgroundHorizontalScroll","PlusIcon","TopBtn","BtnToAdd","_ref3","textPrimary","_ref4","backgroundSideBarCurrentPage","_ref5","buttonAddTaskHover","IconX","_ref6","value","modalOpen","setModalOpen","_Fragment","href","Icons","TaskModal","closeModal","ColumnHeader","ColumnContainer","header","AddTopBtn","TaskList","scrollbar","backgroundScrollbar","CardItem","backgroundPrimary","borders","calendar","CardContainer","CardMain","CardTitle","Container","_templateObject5","AvatarWrapper","_templateObject6","StatusHigh","_templateObject7","_templateObject8","StatusLow","_templateObject9","StatusMedium","_templateObject10","Icon","iconTasks","CardEditMenu","CardEditBtn","CtgPopUp","CtgPopBtn","taskId","task","isOpenModal","setIsOpenModal","_useState3","_useState4","showCtgPopUp","setShowCtgPopUp","dispatch","useDispatch","handleChangeCtg","prevState","type","deleteTask","action","tasks","user","useAuth","name","avatarURL","taskData","title","Img","src","alt","FirstLetterOfName","priority","TaskToolbar","_id","length","TaskColumnCard","Column","tablet","ColumnHeadBar","ColumnsTasksList","AddTaskBtn","useSelector","selectTasks","fetchTasks","filtredTasksByDay","filter","id","option","TasksColumn","category","DayCalendarHead","TasksColumnsList","InfoContainer","NameP","fontSizes","s","fontWeight","b","textUserName","l","AvatarDiv","borderRadius","xl","avatar","_ref7","_ref8","xxl","_ref9","_ref10","userDefaults","BirthdayDiv","Backdrop","Modal","rootModal","document","querySelector","onClose","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Form","FormikForm","Label","InputTitle","Field","TimeWrapper","InputTime","RadioWrapper","RadioField","RadioLabel","RadioSpan","ButtonWrapper","ButtonAction","_templateObject11","ButtonCancel","_templateObject12","ButtonCloseWrap","_templateObject13","ErrorMessage","FormikErrorMessage","_templateObject14","TaskSchema","Yup","shape","max","required","start","end","test","this","parent","startTime","Date","oneOf","TaskForm","Formik","validationSchema","initialValues","onSubmit","values","actions","editTask","obj","_objectSpread","console","log","addTask","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","placeholder","onBlur","onChange","component","role","width","height","stroke","pencil","plus","close","state","mobile","bp"],"sourceRoot":""}