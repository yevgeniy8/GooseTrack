{"version":3,"file":"static/js/544.de3e932f.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nimport { mobile, tablet, min } from '../../styles/media';\n\nexport const ContainerForm = styled.div`\n    max-width: 335px;\n    max-height: 469px;\n    border-radius: 8px;\n    padding: 40px 24px;\n    background-color: ${({ theme }) => theme.colors.white};\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    } */\n\n    ${min(tablet)} {\n        width: 100%;\n        padding: 40px 40px;\n        max-width: 480px;\n        max-height: 521px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: ${({ theme }) => theme.colors.brand};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: ${({ theme }) => theme.colors.black};\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n\n    margin-bottom: 8px;\n\n    ${min(tablet)} {\n        font-size: 14px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    padding: 14px;\n    width: 100%;\n    height: 46px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n\n    border-color: ${({ errors, touched }) =>\n        touched\n            ? errors\n                ? '#E74A3B;'\n                : '#3CBC81'\n            : 'rgba(220, 227, 229, 0.6)'};\n\n    color: ${({ theme }) => theme.colors.black};\n    outline: none;\n    font-family: Inter;\n    margin-bottom: 24px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px; /* 112.5% */\n\n    &:hover,\n    &:focus {\n        border: 1px solid ${({ theme }) => theme.colors.black};\n    }\n\n    ::placeholder {\n        color: ${({ theme }) => theme.colors.placeholder};\n\n        font-weight: 400;\n    }\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        padding: 18px;\n        margin-bottom: 18px;\n\n        font-size: 16px;\n    } */\n\n    ${min(tablet)} {\n        padding: 18px;\n        margin-bottom: 18px;\n        height: 54px;\n        font-size: 16px;\n    }\n`;\n\nexport const InputFormMargin0 = styled(InputForm)`\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.s}) {\n        margin-bottom: 0;\n    } */\n    margin-bottom: 0;\n\n    ${min(mobile)} {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 287px;\n    margin-top: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 14px;\n    gap: 11px;\n\n    border-radius: 16px;\n    background-color: ${({ theme }) => theme.colors.brand};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    border: none;\n    outline: none;\n\n    color: ${({ theme }) => theme.colors.white};\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    letter-spacing: -0.28px;\n    stroke: ${({ theme }) => theme.colors.white};\n    fill: ${({ theme }) => theme.colors.brand};\n\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}, color ${theme.animations.duration} ${theme.animations.cubicBezier}, fill ${theme.animations.duration} ${theme.animations.cubicBezier}, stroke ${theme.animations.duration} ${theme.animations.cubicBezier},`};\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n    } */\n\n    ${min(tablet)} {\n        margin-top: 48px;\n        width: 400px;\n        padding: 16px 152px;\n        font-size: 18px;\n        line-height: 24px;\n        letter-spacing: -0.36px;\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n            color: ${({ theme }) => theme.colors.white};\n            fill: ${({ theme }) => theme.colors.backgroundBtnHover};\n            stroke: ${({ theme }) => theme.colors.white};\n        }\n    }\n`;\n\n// export const Svg = styled.svg`\n//     stroke: white;\n//     fill: ${({ theme }) => theme.colors.brand};\n//     width: 18px;\n//     height: 18px;\n// `;\n\nexport const ButtonEye = styled.svg`\n    position: absolute;\n    top: 70%;\n    left: 75%;\n    width: 24px;\n    height: 24px;\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    /* @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    } */\n\n    ${min(tablet)} {\n        position: absolute;\n        top: 70%;\n        left: 85%;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -37px;\n    left: 0;\n    margin-left: 18px;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const ErrorMes = styled.span`\n    position: absolute;\n    bottom: -37px;\n    left: 18px;\n    color: #3cbc81;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.16; /* 116.667% */\n`;\n\nexport const SvgStatus = styled.svg`\n    position: absolute;\n    fill: ${({ error }) => (!error ? 'green' : 'red')};\n    right: 14px;\n    top: 83%;\n    transform: translateY(-50%);\n`;\n\nexport const Home = styled(NavLink)`\n    margin-bottom: 32px;\n    color: ${({ theme }) => theme.colors.brand};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 100% */\n    transition: ${({ theme }) =>\n        ` color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n\n    &:hover,\n    &:focus {\n        color: ${({ theme }) => theme.colors.backgroundBtnHover};\n    }\n\n    ${min(tablet)} {\n        margin-bottom: 40px;\n        font-size: 24px;\n    }\n`;\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { BsEyeFill } from 'react-icons/bs';\nimport { BsEyeSlashFill } from 'react-icons/bs';\n\nimport {\n  ContainerForm,\n  Title,\n  Span,\n  InputForm,\n  Button,\n  InputFormMargin0,\n  Error,\n  Label,\n  ButtonEye,\n  ErrorMes,\n  SvgStatus,\n  Home,\n  TitleContainer,\n} from './RegisterForm.styled';\n\nimport sprite from '../../images/icons.svg';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n// import Notiflix from 'notiflix';\n// import { useNavigate } from 'react-router-dom';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n// const baseURL = 'https://goose-track-backend-q3re.onrender.com';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().matches(emailRegexp, 'email invalid').required(),\n  password: yup.string().min(6).required(),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handlerSubmit = (values, actions) => {\n    dispatch(register(values));\n    // navigate('/user');\n    // console.log(values);\n    // actions.resetForm();\n  };\n\n  const [icon, setIcon] = useState(<BsEyeFill />);\n  const [type, setType] = useState('password');\n\n  const handlerEyeClick = () => {\n    if (type === 'password') {\n      setType('text');\n      return setIcon(<BsEyeSlashFill />);\n    }\n    setIcon(<BsEyeFill />);\n    setType('password');\n  };\n\n  return (\n    <ContainerForm>\n      <Formik initialValues={initialValues} validationSchema={schema} onSubmit={handlerSubmit}>\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <Form>\n            <TitleContainer>\n              <Title>Sign Up</Title>\n              <Home to={'/'}>Home</Home>\n            </TitleContainer>\n            <div>\n              <Label htmlFor=\"\">\n                <Span\n                  style={{\n                    color:\n                      (touched.name && errors.name && '#E74A3B') ||\n                      (touched.name && !errors.name && '#3CBC81') ||\n                      'black',\n                  }}\n                >\n                  Name\n                </Span>\n                <InputForm\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n                  value={values.name}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  errors={errors.name}\n                  touched={touched.name?.toString()}\n                />\n                {touched.name &&\n                  (errors.name ? (\n                    <Error component=\"div\" name=\"name\" />\n                  ) : (\n                    <ErrorMes>This is an CORRECT name</ErrorMes>\n                  ))}\n                {touched.name && (\n                  <SvgStatus width=\"24\" height=\"24\" error={errors.name}>\n                    <use href={`${sprite}${errors.name ? '#error-outline' : '#done'}`} />\n                  </SvgStatus>\n                )}\n              </Label>\n            </div>\n\n            <div>\n              <Label htmlFor=\"\">\n                <Span\n                  style={{\n                    color:\n                      (touched.email && errors.email && '#E74A3B') ||\n                      (touched.email && !errors.email && '#3CBC81') ||\n                      'black',\n                  }}\n                >\n                  Email\n                </Span>\n                <InputForm\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={values.email}\n                  errors={errors.email}\n                  touched={touched.email?.toString()}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {/* <Error component=\"div\" name=\"email\" /> */}\n\n                {touched.email &&\n                  (errors.email ? (\n                    <Error component=\"div\" name=\"email\" />\n                  ) : (\n                    <ErrorMes>This is an CORRECT name</ErrorMes>\n                  ))}\n\n                {touched.email && (\n                  <SvgStatus width=\"24\" height=\"24\" error={errors.email}>\n                    <use href={`${sprite}${errors.email ? '#error-outline' : '#done'}`} />\n                  </SvgStatus>\n                )}\n              </Label>\n            </div>\n\n            <div>\n              <Label htmlFor=\"\">\n                <Span\n                  style={{\n                    color:\n                      (touched.password && errors.password && '#E74A3B') ||\n                      (touched.password && !errors.password && '#3CBC81') ||\n                      'black',\n                  }}\n                >\n                  Password\n                </Span>\n                <InputFormMargin0\n                  type={type}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  value={values.password}\n                  errors={errors.password}\n                  touched={touched.password?.toString()}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <ButtonEye type=\"button\" onClick={handlerEyeClick}>\n                  {icon}\n                </ButtonEye>\n\n                {/* <Error component=\"div\" name=\"password\" /> */}\n\n                {touched.password &&\n                  (errors.password ? (\n                    <Error component=\"div\" name=\"password\" />\n                  ) : (\n                    <ErrorMes>This is an CORRECT name</ErrorMes>\n                  ))}\n\n                {touched.password && (\n                  <SvgStatus width=\"24\" height=\"24\" error={errors.password}>\n                    <use href={`${sprite}${errors.password ? '#error-outline' : '#done'}`} />\n                  </SvgStatus>\n                )}\n              </Label>\n            </div>\n\n            <Button type=\"submit\">\n              Sign Up\n              <svg width=\"20\" height=\"20\">\n                <use href={`${sprite}#log-in`} />\n              </svg>\n            </Button>\n\n            {/* <a href={`${baseURL}/auth/google`}>Google</a> */}\n          </Form>\n        )}\n      </Formik>\n    </ContainerForm>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport register_goose_rocket_desktop from '../images/login_register/register_goose_rocket_desktop.png';\nimport register_goose_rocket_desktop2x from '../images/login_register/register_goose_rocket_desktop@2x.png';\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n\n    body {\n        background-color: #DCEBF7;\n    }\n`;\n\nconst RegisterPage = () => {\n    return (\n        <WrapperRegister>\n            <GlobalStyles />\n            <RegisterForm />\n            <LinkToLogin to=\"/login\">Log In</LinkToLogin>\n            <Picture>\n                <source\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    media=\"(min-width: 1440px)\"\n                />\n                <img\n                    srcSet={\n                        (register_goose_rocket_desktop,\n                        register_goose_rocket_desktop2x)\n                    }\n                    width={368}\n                    height={521}\n                    alt=\"\"\n                />\n            </Picture>\n        </WrapperRegister>\n    );\n};\n\nconst WrapperRegister = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: #dcebf7;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\n\nconst LinkToLogin = styled(NavLink)`\n    width: 287px;\n    text-align: center;\n    margin-top: 18px;\n    display: block;\n    color: #3e85f3;\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n        0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 14px;\n    text-decoration-line: underline;\n    padding: 14px 103px;\n    border-radius: 16px;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 24px;\n        font-size: 18px;\n        line-height: 24px;\n        width: 400px;\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.backgroundBtnHover};\n            color: ${({ theme }) => theme.colors.white};\n        }\n    }\n`;\n\nconst Picture = styled.picture`\n    display: none;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.l}) {\n        display: block;\n        position: absolute;\n        top: 354px;\n        left: 49px;\n    }\n`;\n\nexport default RegisterPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","white","_ref2","breakpoints","m","min","tablet","Title","_templateObject2","_ref3","brand","Label","_templateObject3","Span","_templateObject4","_ref4","black","InputForm","Field","_templateObject5","_ref5","errors","touched","_ref6","_ref7","_ref8","placeholder","_ref9","InputFormMargin0","_templateObject6","_ref10","s","mobile","Button","_templateObject7","_ref11","_ref12","_ref13","_ref14","_ref15","concat","animations","duration","cubicBezier","_ref16","_ref17","backgroundBtnHover","_ref18","_ref19","_ref20","ButtonEye","_templateObject8","_ref21","Error","ErrorMessage","_templateObject9","ErrorMes","_templateObject10","SvgStatus","_templateObject11","_ref22","error","Home","NavLink","_templateObject12","_ref23","_ref24","_ref25","TitleContainer","_templateObject13","schema","yup","shape","name","required","email","matches","password","dispatch","useDispatch","_useState","useState","_jsx","BsEyeFill","_useState2","_slicedToArray","icon","setIcon","_useState3","_useState4","type","setType","handlerEyeClick","BsEyeSlashFill","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","_touched$name","_touched$email","_touched$password","handleChange","handleBlur","handleSubmit","isSubmitting","_jsxs","Form","to","htmlFor","style","color","value","onBlur","onChange","toString","component","width","height","href","sprite","onClick","GlobalStyles","createGlobalStyle","WrapperRegister","LinkToLogin","Picture","l","RegisterForm","srcSet","register_goose_rocket_desktop2x","media","alt","desktop","bp"],"sourceRoot":""}