{"version":3,"file":"static/js/340.d2bbb1b1.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","redux/auth/authSelectors.js","components/UserForm/UserInfo.jsx","components/UserForm/helpers/handleInput.js","components/UserForm/schemas/userSchema.js","components/UserForm/ReactDatePickerCalendar.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Field, ErrorMessage, Form } from 'formik';\nimport { motion } from 'framer-motion';\n\nexport const MainContainer = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin: 31px auto 0;\n    max-width: 355px;\n    position: relative;\n    padding: 135px 18px 0 18px;\n\n    border-radius: 16px;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n    @media (min-width: 768px) {\n        padding: 40px 175px 0 175px;\n    }\n    @media (min-width: 768px) {\n        margin: 0 auto;\n        max-width: 704px;\n        padding: 60px 164px 0 164px;\n    }\n    @media (min-width: 1440px) {\n        max-width: 1087px;\n    }\n`;\n\n// export const AvatarContainer = styled(motion.div)`\n//     position: relative;\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     margin-bottom: 40px;\n//     margin-left: auto;\n//     margin-right: auto;\n// `;\n\nexport const AvatarContainer = styled(motion.div)`\n    @media (max-width: 767px) {\n        position: absolute;\n        top: 12px;\n        left: 40%;\n        transform: translateX(-50%);\n    }\n    @media (min-width: 768px) {\n        position: static;\n        margin-top: 51px;\n        margin-bottom: 0px;\n    }\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 40px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ImgContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 18px;\n    width: 72px;\n    height: 76px;\n    border: 2px solid #3e85f3;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    @media (min-width: 768px) {\n        width: 124px;\n        height: 124px;\n        margin-bottom: 20px;\n    }\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n`;\n\nexport const ImgAvatar = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n   \n`;\n\nexport const InputFile = styled(Field)`\n    position: absolute;\n    top: 55px;\n    left: 34px;\n    width: 50px;\n    opacity: 0;\n    z-index: 2;\n    @media (min-width: 768px) {\n        top: 114px;\n        left: 62px;\n    }\n`;\n\nexport const SvgPlus = styled.svg`\n    stroke: white;\n    fill: #3e85f3;\n    position: absolute;\n    top: 60px;\n    left: 48px;\n    cursor: pointer;\n    @media (min-width: 768px) {\n        top: 112px;\n        left: 84px;\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nexport const UserName = styled.h2`\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.285;\n    @media (min-width: 768px) {\n        margin-bottom: 8px;\n        font-size: 18px;\n    }\n`;\n\nexport const UserP = styled.p`\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-size: 12px;\n    font-weight: 600;\n    font-family: Inter;\n    line-height: 1.1666;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n`;\n\nexport const FieldsWrap = styled(motion.div)`\n    width: 100%;\n    margin-top: 40px;\n    @media (min-width: 1440px) {\n        max-width: 758px;\n        display: grid;\n        grid-template: repeat(3, 1fr) / repeat(2, 1fr);\n        justify-content: center;\n        gap: 18px 50px;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n`;\n\nexport const Span = styled.span`\n    display: block;\n    color: ${({ theme }) => theme.colors.textPrimary};\n    font-size: 12px;\n    line-height: 1.166;\n    margin-bottom: 8px;\n    @media (min-width: 768px) {\n        font-size: 14px;\n    }\n    line-height: 1.285;\n`;\n\nexport const LabelWrap = styled.div`\n    width: 100%;\n    &:not(:last-child) {\n        margin-bottom: 18px;\n    }\n    @media (min-width: 768px) {\n        &:not(:last-child) {\n            margin-bottom: 24px;\n        }\n    }\n    @media (min-width: 1440px) {\n        width: 354px;\n    }\n`;\n\nexport const InputForm = styled(Field)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n    outline: none;\n    line-height: 1.28;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    color: ${({ theme }) => theme.colors.textPrimary};\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n    ::placeholder {\n        color: ${({ theme }) => theme.colors.textPrimary};\n        font-weight: 600;\n        font-size: 14px;\n    }\n\n    &.input-error {\n        border: 1px solid #e74a3b;\n    }\n\n    &.input-valid {\n        border: 1px solid #3cbc81;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: ${({ theme }) => theme.colors.textPrimary};\n            font-weight: 600;\n            font-size: 16px;\n        }\n    }\n`;\n\nexport const IconDone = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #3cbc81;\n`;\n\nexport const IconErr = styled.svg`\n    position: absolute;\n    top: 35px;\n    right: 18px;\n    fill: #e74a3b;\n`;\nexport const Button = styled(motion.button)`\n    // margin: 40px 0;\n    /* width: 195px; */\n    margin: 20px 0;\n    padding: 14px 50px;\n    align-self: center;\n    border: none;\n    outline: none;\n\n    border-radius: 16px;\n    background: #3e85f3;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n    color: #fff;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.333;\n    letter-spacing: -0.36px;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background-color: #1d56ac;\n        color: ${({ theme }) => theme.colors.white};\n    }\n    @media (min-width: 768px) {\n        padding: 15px 84px;\n    }\n\n    @media (min-width: 1440px) {\n        margin: 48px 0 26px 0;\n    }\n\n    &:disabled {\n        opacity: 0.75;\n        cursor: not-allowed;\n        background-color: #3e85f3;\n    }\n`;\n\nexport const Error = styled(ErrorMessage)`\n    position: absolute;\n    bottom: -28px;\n    left: 0;\n\n    color: #da1414;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 14px;\n    @media (min-width: 768px) {\n        bottom: -28px;\n        left: 6px;\n    }\n`;\n","export const selectUser = state => state.auth.user;","import React from 'react';\nimport avatarDefault from '../../images/Avatar.png';\nimport sprite from '../../images/icons.svg';\nimport axios from 'axios';\n\nimport {\n    AvatarContainer,\n    ImgAvatar,\n    ImgContainer,\n    InputFile,\n    SvgPlus,\n    UserName,\n    UserP,\n} from './UserForm.styled';\nimport { useState } from 'react';\n\naxios.defaults.baseURL = 'https://goose-track-backend-q3re.onrender.com/api';\n\nexport const UserInfo = ({\n  setCurrentAvatar,\n  avatarURL,\n  userName,\n  setFieldValue,\n}) => {\n  const [avatar, setAvatar] = useState(null);\n\n  const handleChange = async e => {\n    setCurrentAvatar(e.target.files[0]);\n    const formData = new FormData();\n    formData.append('avatar', e.target.files[0]);\n  \n    try {\n      const {\n        data: { newUser },\n      } = await axios.patch('/users/edit', formData);\n      setFieldValue('avatarURL', e);\n      setAvatar(newUser.avatarURL);\n     \n    \n    } catch (error) {\n      console.log(error);\n    }\n  \n  };\n\n  return (\n    <AvatarContainer animate={{ y: -50 }} transition={{ ease: 'easeOut', duration: 2 }}>\n      <ImgContainer>\n        {avatar ? (\n          <ImgAvatar src={avatar || avatarURL} alt=\"avatar\" />\n        ) : (\n          <img src={avatarDefault} width={48} height={48} alt=\"default avatar\" />\n        )}\n      </ImgContainer>\n      <InputFile\n        type=\"file\"\n        onChange={handleChange}\n        name=\"avatar\"\n        aria-label=\"upload-avatar\"\n        accept=\"image/png, image/jpeg, image/jpg\"\n      />\n      <SvgPlus width=\"14\" height=\"14\">\n        <use href={`${sprite}#icon-image`} />\n      </SvgPlus>\n      <UserName>{userName || 'User Name'}</UserName>\n      <UserP>User</UserP>\n    </AvatarContainer>\n  );\n};\n","import { IconErr, IconDone } from '../UserForm.styled';\nimport sprite from '../../../images/icons.svg';\n\nfunction handleInput(errors, touched, fieldName) {\n    if (errors[fieldName] && touched[fieldName]) {\n        return (\n            <IconErr width={24} height={24}>\n                <use href={`${sprite}#error-outline`} />\n            </IconErr>\n        );\n    } else if (touched[fieldName]) {\n        return (\n            <IconDone width={24} height={24}>\n                <use href={`${sprite}#done`} />\n            </IconDone>\n        );\n    }\n}\nexport default handleInput;\n","import * as yup from 'yup';\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst phoneRegexp = /^\\+\\d{1,15}\\d{1,15}$/;\n\nconst schema = yup.object().shape({\n    name: yup.string().max(16).required(),\n    email: yup\n        .string()\n        .email()\n        .matches(emailRegexp, 'email invalid')\n        .required(),\n    birthday: yup.date().max(new Date(), 'Birthday must be earlier than today'),\n    phone: yup.string().matches(phoneRegexp),\n    skype: yup.string().max(16),\n});\nexport default schema;","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styled from '@emotion/styled';\n\nexport const DatePickerStyled = styled(ReactDatePicker)`\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    border: 1px solid rgba(220, 227, 229, 0.6);\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    outline: none;\n    font-family: Inter;\n    color: ${({ theme }) => theme.colors.textPrimary};\n    line-height: 1.28;\n\n    &:hover,\n    &:focus {\n        border: 1px solid #111;\n    }\n\n    ::placeholder {\n        color: ${({ theme }) => theme.colors.textPrimary};\n        font-weight: 600;\n        font-size: 14px;\n    }\n    @media (min-width: 768px) {\n        padding: 14px;\n        ::placeholder {\n            color: #111;\n            font-weight: 600;\n            font-size: 16px;\n        }\n        &.input-error {\n            border: 1px solid #e74a3b;\n        }\n\n        &.input-valid {\n            border: 1px solid #3cbc81;\n        }\n    }\n`;\nexport const DatePickerWrapp = styled.div`\n    .react-datepicker-wrapper {\n        display: block;\n    }\n    .react-datepicker {\n        position: absolute;\n        top: -80px;\n        left: -15px;\n\n        @media (min-width: 768px) {\n            top: -60px;\n            left: 110px;\n        }\n        display: flex;\n        justify-content: center;\n        background-color: #3e85f3;\n        border-radius: 16px;\n        color: #fff;\n        overflow: hidden;\n        border: none;\n        width: 327px;\n        font-size: 18px;\n        line-height: 1.3;\n\n        @media (min-width: 768px) {\n            width: 373px;\n            height: 354px;\n            font-size: 22px;\n            line-height: 1.3;\n        }\n\n        &__header {\n            background-color: #3e85f3;\n            color: #fff;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        }\n        &__month-container {\n            background-color: #3e85f3;\n        }\n\n        &__current-month {\n            font-size: 24px;\n            text-align: center;\n            font-family: Inter;\n            font-weight: 600;\n            line-height: 1.666;\n        }\n        &__day {\n            color: #fff;\n            width: 40px;\n            height: 40px;\n            font-size: 14px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            @media (min-width: 768px) {\n                font-size: 18px;\n            }\n            &:hover {\n                border-radius: 50%;\n                background-color: #fff;\n                color: #3e85f3;\n                opacity: 0.7;\n            }\n            &--weekend {\n                opacity: 40%;\n            }\n\n            &--selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n\n                padding: 12px 15px;\n                text-align: center;\n                background-color: white;\n                color: #3e85f3;\n            }\n            &--keyboard-selected {\n                border-radius: 50%;\n                opacity: 1;\n                outline: none;\n            }\n        }\n        &__day-name {\n            color: #fff;\n            width: 40px;\n        }\n        &__current-month {\n            color: #fff;\n        }\n\n        &__navigation--years {\n            background-color: #fff;\n            border-radius: 50%;\n            width: 15px;\n            height: 15px;\n            margin: 5px auto;\n            &:hover {\n                background-color: #3e85f3;\n                border: 1px solid #fff;\n            }\n        }\n        &__year-option {\n            background-color: #3e85f3;\n            color: #fff;\n            line-height: 30px;\n            &:hover {\n                background-color: #3e85f3;\n                font-size: 14px;\n                font-weight: 700;\n            }\n        }\n        &__year-dropdown {\n            border-radius: 0;\n            &::-webkit-scrollbar {\n                width: 15px;\n                height: 20px;\n                background: #3e85f3;\n                border-radius: 8px;\n            }\n            &::-webkit-scrollbar-thumb {\n                background: #fff;\n                border-radius: 8px;\n            }\n            &--scrollable {\n                height: 250px;\n            }\n        }\n\n        &__navigation--years-previous {\n            top: -0.5px;\n        }\n\n        &__navigation--years-upcoming {\n            top: -1px;\n        }\n\n        &__navigation--years-upcoming {\n        }\n        &__week {\n            display: flex;\n        }\n        &__month {\n            margin: 0;\n            padding-bottom: 9px;\n        }\n    }\n`;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { FieldsWrap } from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { editUser } from 'redux/auth/authOperations';\nimport { UserInfo } from './UserInfo';\nimport handleInput from './helpers/handleInput';\nimport schema from './schemas/userSchema';\nimport { enGB } from 'date-fns/esm/locale';\nimport avatarDefault from '../../images/Avatar.png';\nimport { registerLocale } from 'react-datepicker';\nimport {\n    Button,\n    Error,\n    InputForm,\n    Label,\n    LabelWrap,\n    MainContainer,\n    Span,\n    StyledForm,\n} from './UserForm.styled';\nimport {\n    DatePickerStyled,\n    DatePickerWrapp,\n} from './ReactDatePickerCalendar.styled';\n\nregisterLocale('en', enGB);\n\nexport const UserForm = () => {\n    const dispatch = useDispatch();\n    // const [isFormChanged, setIsFormChanged] = useState(false);\n    const [currentAvatar, setCurrentAvatar] = useState(null);\n\n    const user = useSelector(selectUser);\n\n    const initialValues = {\n        name: user.name,\n        email: user.email,\n        phone: user.phone,\n        skype: user.skype,\n        birthday: user.birthday || new Date(),\n        avatarURL: user.avatarURL || avatarDefault,\n    };\n\n    const handleSubmit = async (\n        { name, phone, email, skype, birthday },\n        actions\n    ) => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('email', email);\n        formData.append('phone', phone);\n        formData.append('skype', skype);\n        formData.append('birthday', birthday);\n        if (currentAvatar) {\n            formData.append('avatar', currentAvatar);\n        }\n\n        dispatch(editUser(formData));\n    };\n\n    return (\n        <MainContainer>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n                validateOnChange={false}\n                enableReinitialize={true}\n            >\n                {({\n                    errors,\n                    touched,\n                    values,\n                    dirty,\n                    handleChange,\n                    setFieldValue,\n                    setFieldTouched,\n                    handleBlur,\n                    isSubmitting,\n                }) => {\n                    console.log('dirty:', dirty);\n                    console.log('issUBMITTING', isSubmitting);\n                    return (\n                        <StyledForm>\n                            <UserInfo\n                                avatarURL={user.avatarURL}\n                                userName={user.name}\n                                setCurrentAvatar={setCurrentAvatar}\n                                setFieldValue={setFieldValue}\n                            />\n                            <FieldsWrap\n                                animate={{ y: -50 }}\n                                transition={{ ease: 'easeOut', duration: 2 }}\n                            >\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>User name</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Enter your name\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.name}\n                                            className={\n                                                errors.name && touched.name\n                                                    ? 'input-error'\n                                                    : touched.name\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"name\" />\n                                        {handleInput(errors, touched, 'name')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"name\">\n                                        <Span> Birthday</Span>\n                                        <DatePickerWrapp>\n                                            <DatePickerStyled\n                                                name=\"birthday\"\n                                                selected={\n                                                    new Date(values.birthday) ||\n                                                    new Date()\n                                                }\n                                             \n                                                className={\n                                                    errors.birthday &&\n                                                    touched.birthday\n                                                        ? 'input-error'\n                                                        : touched.birthday\n                                                        ? 'input-valid'\n                                                        : ''\n                                                }\n                                                dateFormat=\"yyyy/MM/dd\"\n                                                maxDate={new Date()}\n                                                locale=\"en\"\n                                                showYearDropdown\n                                                scrollableYearDropdown\n                                                yearDropdownItemNumber={30}\n                                                formatWeekDay={nameOfDay =>\n                                                    nameOfDay.charAt(0)\n                                                }\n                                                onChange={date => {\n                                                    setFieldValue(\n                                                        'birthday',\n                                                        date\n                                                    );\n                                                }}\n                                                onBlur={() => {\n                                                    setFieldTouched(\n                                                        'birthday',\n                                                        true\n                                                    );\n                                                }}\n                                            />\n                                             <Error\n                                            component=\"div\"\n                                            name=\"birthday\"\n                                        />\n                                        {handleInput(\n                                            errors,\n                                            touched,\n                                            'birthday'\n                                        )}\n                                        </DatePickerWrapp>\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Email</Span>\n                                        <InputForm\n                                            type=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter your email\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.email}\n                                            className={\n                                                errors.email && touched.email\n                                                    ? 'input-error'\n                                                    : touched.email\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"email\" />\n                                        {handleInput(errors, touched, 'email')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Phone</Span>\n                                        <InputForm\n                                            type=\"tel\"\n                                            name=\"phone\"\n                                            placeholder=\"Enter your phone number\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.phone}\n                                            className={[\n                                                errors.phone && touched.phone\n                                                    ? 'input-error'\n                                                    : touched.phone\n                                                    ? 'input-valid'\n                                                    : '',\n                                            ]}\n                                        />\n                                        <Error component=\"div\" name=\"phone\" />\n                                        {handleInput(errors, touched, 'phone')}\n                                    </Label>\n                                </LabelWrap>\n                                <LabelWrap>\n                                    <Label htmlFor=\"\">\n                                        <Span>Skype</Span>\n                                        <InputForm\n                                            type=\"text\"\n                                            name=\"skype\"\n                                            placeholder=\"Add your skype number\"\n                                            value={values.skype}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={\n                                                errors.skype && touched.skype\n                                                    ? 'input-error'\n                                                    : touched.skype\n                                                    ? 'input-valid'\n                                                    : ''\n                                            }\n                                        />\n                                        <Error component=\"div\" name=\"skype\" />\n                                        {handleInput(errors, touched, 'skype')}\n                                    </Label>\n                                </LabelWrap>\n                            </FieldsWrap>\n\n                            <Button\n                                animate={{ y: -25 }}\n                                transition={{ ease: 'easeOut', duration: 2 }}\n                                type=\"submit\"\n                                disabled={!dirty || isSubmitting}\n                            >\n                                Save changes\n                            </Button>\n                        </StyledForm>\n                    );\n                }}\n            </Formik>\n        </MainContainer>\n    );\n};\n","import { UserForm } from 'components/UserForm/UserForm';\nimport { useThemeContext } from 'hooks/ThemeContext';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n\n    body {\n        background-color: ${({ theme }) => theme.colors.backgroundPrimary};\n    }\n`;\n\nconst AccountPage = () => {\n    const { theme } = useThemeContext();\n\n    return (\n        <div>\n            <GlobalStyles theme={theme} />\n            <UserForm />\n        </div>\n    );\n};\n\nexport default AccountPage;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","backgroundSecondary","_ref2","concat","animations","duration","cubicBezier","AvatarContainer","motion","_templateObject2","ImgContainer","_templateObject3","_ref3","_ref4","ImgAvatar","_templateObject4","InputFile","Field","_templateObject5","SvgPlus","_templateObject6","UserName","_templateObject7","_ref5","textPrimary","UserP","_templateObject8","_ref6","StyledForm","Form","_templateObject9","FieldsWrap","_templateObject10","Label","_templateObject11","Span","_templateObject12","_ref7","LabelWrap","_templateObject13","InputForm","_templateObject14","_ref8","_ref9","_ref10","_ref11","IconDone","_templateObject15","IconErr","_templateObject16","Button","_templateObject17","_ref12","white","Error","ErrorMessage","_templateObject18","selectUser","state","auth","user","axios","UserInfo","setCurrentAvatar","avatarURL","userName","setFieldValue","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","_yield$axios$patch","newUser","wrap","_context","prev","next","target","files","FormData","append","sent","data","t0","console","log","stop","_x","apply","arguments","_jsxs","animate","y","transition","ease","children","_jsx","src","alt","avatarDefault","width","height","type","onChange","name","accept","href","sprite","errors","touched","fieldName","yup","shape","max","required","email","matches","birthday","Date","phone","skype","DatePickerStyled","ReactDatePicker","DatePickerWrapp","registerLocale","enGB","UserForm","dispatch","useDispatch","currentAvatar","useSelector","initialValues","handleSubmit","actions","editUser","_x2","Formik","validationSchema","schema","onSubmit","validateOnChange","enableReinitialize","values","dirty","setFieldTouched","handleBlur","isSubmitting","htmlFor","placeholder","onBlur","value","className","component","handleInput","selected","dateFormat","maxDate","locale","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","formatWeekDay","nameOfDay","charAt","date","disabled","GlobalStyles","createGlobalStyle","backgroundPrimary","useThemeContext"],"sourceRoot":""}