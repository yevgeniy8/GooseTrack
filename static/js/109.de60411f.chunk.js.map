{"version":3,"file":"static/js/109.de60411f.chunk.js","mappings":"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","sources":["components/Calendar/ChoosedDay/DayCalendarHead.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.styled.js","components/Calendar/ChoosedDay/TasksColumn/AddTaskBtn.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnHeadBar.styled.js","components/Calendar/ChoosedDay/TasksColumn/ColumnHeadBar.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.styled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskToolbar.styled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskToolbar.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.jsx","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.styled.js","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx"],"sourcesContent":["// import TasksColumnsList from '../TasksColumnsList/TasksColumnsList';\nconst DayCalendarHead = () => {\n  return <p>Hello world часть календаря Наташа</p>;\n};\n\nexport default DayCalendarHead;\n","import styled from '@emotion/styled';\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  gap: 16px;\n  overflow: auto hidden;\n  scroll-snap-type: x mandatory;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #e7e5e5;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const TaskList = styled.ul`\n  gap: 17px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  overflow-y: auto;\n  max-height: 380px;\n  padding-right: 7px;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    padding: 50px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    padding: 50px;\n    border-radius: 12px;\n    background: #e7e5e5;\n  }\n`;\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 27px;\n`;\nexport const ColumnItem = styled.li`\n  flex-basis: calc((100% - 2 * 27px) / 3);\n  background: snow;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  min-width: 135px;\n`;\nexport const BtnToAdd = styled.button`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  text-align: center;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 18px; /* 128.571% */\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: ${({ theme }) => theme.colors.backgroundSideBarCurrentPage};\n\n  margin-top: 32px;\n  margin-bottom: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 52px;\n  width: 100%;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    background: ${({ theme }) => theme.colors.buttonAddTaskHover};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 4px #3e85f3;\n  }\n`;\nexport const IconX = styled.svg`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n  // @media (min-width: 768px) {\n  //   width: 34px;\n  //   height: 34px;\n  // }\n`;\n","import Icons from '../../../../images/icons.svg';\nimport { BtnToAdd, IconX } from './ColumnsTasksList.styled';\n\nconst AddTaskBtn = () => {\n    return (\n        <BtnToAdd>\n            <IconX>\n                <use href={`${Icons}#add-plus`} />\n            </IconX>\n            Add task\n        </BtnToAdd>\n    );\n};\n\nexport default AddTaskBtn;\n","import styled from '@emotion/styled';\n\nexport const ColumnHeader = styled.h2`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  ${'' /* text-align: center; */}\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.2; /* 120% */\n`;\nexport const ColumnContainer = styled.div`\n  margin-top: 27px;\n  margin-bottom: 47px;\n`;\n","import { ColumnHeader, ColumnContainer } from './ColumnHeadBar.styled';\n\nconst ColumnHeadBar = () => {\n  return (\n    <ColumnContainer>\n      <ColumnHeader>Назва колонки</ColumnHeader>\n    </ColumnContainer>\n  );\n};\nexport default ColumnHeadBar;\n","import styled from '@emotion/styled';\n\nexport const CardItem = styled.li`\n  ${\n    '' /* width: 300px;\n  height: 112px; */\n  }\n  padding: 14px 14px 18px 14px;\n  background: ${({ theme }) => theme.colors.backgroundPrimary};\n  border-radius: 8px;\n  border: ${({ theme }) => theme.borders.calendar};\n`;\nexport const CardContainer = styled.div`\n  width: 100%;\n`;\n\nexport const CardMain = styled.div`\n  display: flex;\n`;\nexport const CardTitle = styled.h3`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n  padding: 0px;\n  margin-bottom: 30px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  height: 32px;\n  width: 32px;\n  padding: 6px;\n  border-radius: 50%;\n  border: 1.8px solid #3e85f3;\n`;\n\nexport const AvatarStyle = styled.img`\n  width: 16px;\n  height: 16px;\n`;\nexport const StatusHigh = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  text-align: center;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #f00;\n`;\nexport const StatusLow = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #0015ff;\n`;\n\nexport const StatusMedium = styled.p`\n  padding: 4px 12px;\n  border-radius: 4px;\n  max-height: 20px;\n  font-size: 10px;\n  line-height: 1.2;\n  color: white;\n\n  background-color: #ff7700;\n`;\n","import styled from '@emotion/styled';\n\nexport const Icon = styled.svg`\n    width: 16px;\n    height: 16px;\n    stroke: ${({ theme }) => theme.colors.iconTasks};\n`;\n\nexport const CardEditMenu = styled.ul`\n    padding: 0px;\n    gap: 10px;\n    margin-left: auto;\n    margin-right: 14px;\n    margin-top: auto;\n    display: flex;\n    list-style: none;\n`;\n\nexport const CardEditBtn = styled.button`\n    padding: 0px;\n    border: none;\n    border-radius: 2px;\n    display: flex;\n    background-color: inherit;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n    &:hover {\n        svg {\n            stroke: #3e85f3;\n        }\n    }\n\n    &:focus {\n        outline: none;\n        box-shadow: 0 0 2px 2px #3e85f3;\n    }\n`;\n","import Icons from '../../../../images/icons.svg';\nimport { Icon, CardEditMenu, CardEditBtn } from './TaskToolbar.styled';\nimport {} from './TaskColumnCard.styled';\n\nconst TaskToolbar = () => {\n  const handleAddClick = () => {\n    alert('Вы нажали на кнопку \"Добавить\"');\n  };\n\n  const handleEditClick = () => {\n    alert('Вы нажали на кнопку \"Редактировать\"');\n  };\n\n  const handleDeleteClick = () => {\n    alert('Вы нажали на кнопку \"Удалить\"');\n  };\n  return (\n    <>\n      <CardEditMenu>\n        <li>\n          <CardEditBtn type=\"button\" onClick={handleAddClick}>\n            <Icon>\n              <use href={`${Icons}#arrow-circle-broken-right`} />\n            </Icon>\n          </CardEditBtn>\n        </li>\n        <li>\n          <CardEditBtn type=\"button\" onClick={handleEditClick}>\n            <Icon>\n              <use href={`${Icons}#pencil`} />\n            </Icon>\n          </CardEditBtn>\n        </li>\n        <li>\n          <CardEditBtn type=\"button\" onClick={handleDeleteClick}>\n            <Icon>\n              <use href={`${Icons}#trash`} />\n            </Icon>\n          </CardEditBtn>\n        </li>\n      </CardEditMenu>\n    </>\n  );\n};\nexport default TaskToolbar;\n","import Avatar from '../../../../images/Avatar.png';\nimport {\n  CardItem,\n  CardContainer,\n  CardMain,\n  CardTitle,\n  Container,\n  AvatarWrapper,\n  AvatarStyle,\n  StatusHigh,\n  StatusMedium,\n  StatusLow,\n} from './TaskColumnCard.styled';\n// import task from '../data/tasksdata.json';\nimport TaskToolbar from './TaskToolbar';\n\nconst TaskColumnCard = ({ tasks }) => {\n  return (\n    <>\n      {tasks.map(taskData => (\n        <CardItem key={taskData.id}>\n          <CardContainer>\n            <CardTitle>{taskData.title}</CardTitle>\n            <CardMain>\n              <Container>\n                <AvatarWrapper>\n                  <AvatarStyle src={Avatar} alt=\"avatar\" />\n                </AvatarWrapper>\n                {taskData.priority === 'high' && <StatusHigh>{taskData.priority}</StatusHigh>}\n                {taskData.priority === 'medium' && <StatusMedium>{taskData.priority}</StatusMedium>}\n                {taskData.priority === 'low' && <StatusLow>{taskData.priority}</StatusLow>}\n              </Container>\n              <TaskToolbar></TaskToolbar>\n            </CardMain>\n          </CardContainer>\n        </CardItem>\n      ))}\n    </>\n  );\n};\n\nexport default TaskColumnCard;\n","import { TaskList } from './ColumnsTasksList.styled';\n\nimport TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\nimport tasks from '../data/tasksdata.json';\n\nconst ColumnsTasksList = () => {\n  const sortedTasks = tasks\n    .filter(taskData => taskData.priority === 'high')\n    .concat(tasks.filter(taskData => taskData.priority === 'medium'))\n    .concat(tasks.filter(taskData => taskData.priority === 'low'));\n\n  return (\n    <TaskList>\n      <TaskColumnCard tasks={sortedTasks}></TaskColumnCard>\n    </TaskList>\n  );\n};\nexport default ColumnsTasksList;\n","import styled from '@emotion/styled';\n\nexport const TaskList = styled.ul`\n  gap: 18px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\nexport const Column = styled.li`\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: ${({ theme }) => theme.colors.backgroundSecondary};\n\n  min-width: 329px;\n  padding-left: 14px;\n  padding-right: 8px;\n`;\nexport const Container = styled.div`\n  ${'' /* margin-bottom: 35px; */}\n`;\n// export const ColumnHeader = styled.div`\n//   list-style: none;\n// `;\n","import AddTaskBtn from './AddTaskBtn';\nimport ColumnHeadBar from './ColumnHeadBar';\nimport ColumnsTasksList from './ColumnsTasksList';\nimport { Column } from './TasksColumn.styled';\n\nconst TasksColumn = () => {\n  return (\n    <Column>\n      <ColumnHeadBar />\n\n      <ColumnsTasksList />\n      <AddTaskBtn />\n    </Column>\n  );\n};\nexport default TasksColumn;\n","import { ColumnList } from './TasksColumnsList.styled';\n\nimport TasksColumn from '../TasksColumn/TasksColumn';\n\nconst TasksColumnsList = () => {\n  return (\n    <ColumnList>\n      <TasksColumn></TasksColumn>\n      <TasksColumn></TasksColumn>\n      <TasksColumn></TasksColumn>\n    </ColumnList>\n  );\n};\nexport default TasksColumnsList;\n","import DayCalendarHead from './DayCalendarHead';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nconst ChoosedDay = () => {\n  return (\n    <>\n      <DayCalendarHead />\n\n      <TasksColumnsList />\n    </>\n  );\n};\n\nexport default ChoosedDay;\n"],"names":["ColumnList","styled","TaskList","BtnToAdd","theme","colors","textPrimary","backgroundSideBarCurrentPage","buttonAddTaskHover","IconX","textTitleHeader","href","Icons","ColumnHeader","ColumnContainer","CardItem","backgroundPrimary","borders","calendar","CardContainer","CardMain","CardTitle","Container","AvatarWrapper","AvatarStyle","StatusHigh","StatusLow","StatusMedium","Icon","iconTasks","CardEditMenu","CardEditBtn","type","onClick","alert","tasks","map","taskData","title","src","alt","priority","id","sortedTasks","concat","Column","backgroundSecondary"],"sourceRoot":""}