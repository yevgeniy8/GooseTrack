{"version":3,"file":"static/js/806.fef972d4.chunk.js","mappings":"mOAKA,EAJwB,WACtB,OAAO,uBAAG,0IACX,E,mBCDYA,EAAaC,EAAAA,EAAAA,GAAH,iSCAVC,EAAWD,EAAAA,EAAAA,GAAH,2ZAiCRE,GAbaF,EAAAA,EAAAA,GAAH,wDAIGA,EAAAA,EAAAA,GAAH,2NASCA,EAAAA,EAAAA,OAAH,ybC7BrB,GDsDqBA,EAAAA,EAAAA,IAAH,oJAGN,qBAAGG,MAAkBC,OAAOC,eAA5B,IC7DO,WACf,OAAO,SAACH,EAAD,UAAU,MACpB,GCID,EAHsB,WACpB,OAAO,yBAAK,6EACb,ECLYI,EAAWN,EAAAA,EAAAA,GAAH,wIAMRO,EAAgBP,EAAAA,EAAAA,IAAH,4DAKbQ,EAAWR,EAAAA,EAAAA,IAAH,+DAIRS,EAAYT,EAAAA,EAAAA,GAAH,0OAWTU,EAAaV,EAAAA,EAAAA,EAAH,2QAaVW,EAAeX,EAAAA,EAAAA,GAAH,gKASZY,EAAcZ,EAAAA,EAAAA,GAAH,kYAqBXa,EAAYb,EAAAA,EAAAA,IAAH,qIAKlB,I,8uBCrCJ,EAzBoB,WAelB,OACE,+BACE,UAACW,EAAD,YACE,SAACC,EAAD,CAAaE,QAjBI,WAErBC,MAAM,yJACP,EAcK,SAAsC,yBACtC,SAACH,EAAD,CAAaE,QAbK,WAEtBC,MAAM,uLACP,EAUK,SAAuC,yBACvC,SAACH,EAAD,CAAaE,QATO,WAExBC,MAAM,mJACP,EAMK,SAAyC,kCAIhD,ECPD,EApBuB,WACrB,OACE,8BACGC,EAAAA,KAAS,SAAAC,GAAQ,OAChB,SAACX,EAAD,WACE,UAACC,EAAD,YACE,SAACE,EAAD,UAAYQ,EAASC,SACrB,UAACV,EAAD,YACE,UAACK,EAAD,WAAW,QACL,SAACH,EAAD,UAAaO,EAASE,eAE5B,SAAC,EAAD,WAPSF,EAASG,GADR,KAevB,EClBD,EAPyB,WACvB,OACE,SAACnB,EAAD,WACE,SAAC,EAAD,KAGL,ECDYoB,GAPWrB,EAAAA,EAAAA,GAAH,yHAOCA,EAAAA,EAAAA,GAAH,uOAUNa,EAAYb,EAAAA,EAAAA,IAAH,qECHtB,EAXoB,WAClB,OACE,UAACqB,EAAD,YACE,SAAC,EAAD,WACE,SAAC,EAAD,OAEF,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,ECAD,EAXyB,WACrB,OAEI,UAACtB,EAAD,YACI,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAIX,ECDD,EAVmB,WACjB,OACE,iCACE,SAAC,EAAD,KAEA,SAAC,EAAD,MAGL,C","sources":["components/Calendar/ChoosedDay/DayCalendarHead.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.styled.js","components/Calendar/ChoosedDay/TasksColumn/AddTaskBtn.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnHeadBar.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.styled.js","components/Calendar/ChoosedDay/TaskColumnCard/TaskToolbar.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.jsx","components/Calendar/ChoosedDay/TasksColumn/ColumnsTasksList.jsx","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.styled.js","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.jsx","components/Calendar/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx"],"sourcesContent":["// import TasksColumnsList from '../TasksColumnsList/TasksColumnsList';\nconst DayCalendarHead = () => {\n  return <p>Hello world часть календаря Наташа</p>;\n};\n\nexport default DayCalendarHead;\n","import styled from '@emotion/styled';\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  gap: 27px;\n  overflow: auto hidden;\n  scroll-snap-type: x mandatory;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background: #e7e5e5;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const TaskList = styled.ul`\n  list-style: none;\n  gap: 17px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  overflow-y: auto;\n  max-height: 380px;\n  padding: 0 7px; /**ДЛЯ СКРОЛЛУ */\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    margin: 50px;\n    border-radius: 12px;\n    background: #e7e5e5;\n  }\n`;\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 27px;\n`;\nexport const ColumnItem = styled.li`\n  flex-basis: calc((100% - 2 * 27px) / 3);\n  background: snow;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  min-width: 135px;\n`;\nexport const BtnToAdd = styled.button`\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: #e3f3ff;\n\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 52px;\n  width: 100%;\n\n  left: 20px;\n  bottom: 20px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    background: #cbe6ff;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 4px #3e85f3;\n  }\n`;\nexport const IconX = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${({ theme }) => theme.colors.textTitleHeader};\n\n  @media (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n","import { BtnToAdd } from './ColumnsTasksList.styled';\n\nconst AddTaskBtn = () => {\n    return <BtnToAdd>S+</BtnToAdd>;\n};\n\nexport default AddTaskBtn;\n","// import { TaskList } from './ColumnsTasksList.styled';\n// import TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\n// import AddTaskBtn from './AddTaskBtn';\n// import { ColumnHeader } from './TasksColumn.styled';\n\nconst ColumnHeadBar = () => {\n  return <div>Назва колонки</div>;\n};\nexport default ColumnHeadBar;\n// import TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\n// import AddTaskButton from './AddTaskBtn';\n\n// const TasksColumnsList = () => {\n//   return (\n//     <ColumnList>\n//       <ColumnItem>\n//         <h2>To do </h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n\n//       <ColumnItem>\n//         <h2>In progress</h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n\n//       <ColumnItem>\n//         <h2>Done</h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n//     </ColumnList>\n//   );\n// };\n// export default TasksColumnsList;\n","import styled from '@emotion/styled';\n\nexport const CardItem = styled.li`\n  padding: 15px;\n  background: #f7f6f9;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n`;\nexport const CardContainer = styled.div`\n  background: red;\n  width: 100%;\n`;\n\nexport const CardMain = styled.div`\n  display: flex;\n  background: pink;\n`;\nexport const CardTitle = styled.h3`\n  color: #111;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px; /* 128.571% */\n  background: orange;\n  padding: 0px;\n  margin: 14px 0px 30px 0px;\n`;\nexport const CardStatus = styled.p`\n  border-radius: 4px;\n  background: #ea3d65;\n  padding: 4px 12px;\n  margin-bottom: 0px;\n  color: #f7f6f9;\n  text-align: center;\n  font-family: Inter;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 12px;\n`;\nexport const CardEditMenu = styled.ul`\n  padding: 0px;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: 14px;\n  margin-top: auto;\n  display: flex;\n  list-style: none;\n`;\nexport const CardEditBtn = styled.li`\n  padding: 0px;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: 14px;\n  margin-top: auto;\n  display: flex;\n  list-style: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    background-color: #3e85f3;\n    color: #fff;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 2px 2px #3e85f3;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n  ${\n    '' /* width: 32px;\n  height: 32px; */\n  }\n  background-color: #3e85f3;\n  color: blue;\n`;\n// export const Container = styled.div`\n//   display: flex;\n//   align-items: flex-end;\n//   gap: 8px;\n//   ${\n//     '' /* width: 32px;\n//   height: 32px; */\n//   }\n//   background-color: #3e85f3;\n//   color: yellow;\n//   border-radius: 50%;\n// `;\n","import { CardEditMenu, CardEditBtn } from './TaskColumnCard.styled';\n// import task from '../../data/tasksdata.json';\n\n// const TaskColumnCard = () => {\n\n//   return (\n//     <>\n//       {task.map(taskData => (\n\n//       ))}\n//     </>\n//   );\n// };\n\nconst TaskToolbar = () => {\n  const handleAddClick = () => {\n    // Добавить обработчик для кнопки \"Добавить\"\n    alert('Вы нажали на кнопку \"Добавить\"');\n  };\n\n  const handleEditClick = () => {\n    // Добавить обработчик для кнопки \"Редактировать\"\n    alert('Вы нажали на кнопку \"Редактировать\"');\n  };\n\n  const handleDeleteClick = () => {\n    // Добавить обработчик для кнопки \"Удалить\"\n    alert('Вы нажали на кнопку \"Удалить\"');\n  };\n  return (\n    <>\n      <CardEditMenu>\n        <CardEditBtn onClick={handleAddClick}>Пер.</CardEditBtn>\n        <CardEditBtn onClick={handleEditClick}>Ред.</CardEditBtn>\n        <CardEditBtn onClick={handleDeleteClick}>Удал.</CardEditBtn>\n      </CardEditMenu>\n    </>\n  );\n};\nexport default TaskToolbar;\n","import {\n  CardItem,\n  CardContainer,\n  CardMain,\n  CardStatus,\n  CardTitle,\n  Container,\n} from './TaskColumnCard.styled';\nimport task from '../data/tasksdata.json';\nimport TaskToolbar from './TaskToolbar';\n\nconst TaskColumnCard = () => {\n  return (\n    <>\n      {task.map(taskData => (\n        <CardItem key={taskData.id}>\n          <CardContainer>\n            <CardTitle>{taskData.title}</CardTitle>\n            <CardMain>\n              <Container>\n                AVA <CardStatus>{taskData.priority}</CardStatus>\n              </Container>\n              <TaskToolbar></TaskToolbar>\n            </CardMain>\n          </CardContainer>\n        </CardItem>\n      ))}\n    </>\n  );\n};\n\nexport default TaskColumnCard;\n","import { TaskList } from './ColumnsTasksList.styled';\n\nimport TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\n\nconst ColumnsTasksList = () => {\n  return (\n    <TaskList>\n      <TaskColumnCard></TaskColumnCard>\n    </TaskList>\n  );\n};\nexport default ColumnsTasksList;\n// import TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\n// import AddTaskButton from './AddTaskBtn';\n\n// const TasksColumnsList = () => {\n//   return (\n//     <ColumnList>\n//       <ColumnItem>\n//         <h2>To do </h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n\n//       <ColumnItem>\n//         <h2>In progress</h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n\n//       <ColumnItem>\n//         <h2>Done</h2>\n//         <TaskList>\n//           <TaskColumnCard></TaskColumnCard>\n//         </TaskList>\n//         <AddTaskButton />\n//       </ColumnItem>\n//     </ColumnList>\n//   );\n// };\n// export default TasksColumnsList;\n","import styled from '@emotion/styled';\n\nexport const TaskList = styled.ul`\n  list-style: none;\n  gap: 18px;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\nexport const Column = styled.li`\n  list-style: none;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  padding-left: 14px;\n  padding-right: 16px;\n  padding-bottom: 28px;\n  padding-top: 18px;\n`;\nexport const Container = styled.div`\n  list-style: none;\n  margin-bottom: 35px;\n`;\n// export const ColumnHeader = styled.div`\n//   list-style: none;\n// `;\n","import AddTaskBtn from './AddTaskBtn';\nimport ColumnHeadBar from './ColumnHeadBar';\nimport ColumnsTasksList from './ColumnsTasksList';\nimport { Column, Container } from './TasksColumn.styled';\n\nconst TasksColumn = () => {\n  return (\n    <Column>\n      <Container>\n        <ColumnHeadBar />\n      </Container>\n      <ColumnsTasksList />\n      <AddTaskBtn />\n    </Column>\n  );\n};\nexport default TasksColumn;\n","import { ColumnList } from './TasksColumnsList.styled';\n\nimport TasksColumn from '../TasksColumn/TasksColumn';\n\nconst TasksColumnsList = () => {\n    return (\n        // <Container>\n        <ColumnList>\n            <TasksColumn></TasksColumn>\n            <TasksColumn></TasksColumn>\n            <TasksColumn></TasksColumn>\n        </ColumnList>\n        // </Container>\n    );\n};\nexport default TasksColumnsList;\n","import DayCalendarHead from './DayCalendarHead';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nconst ChoosedDay = () => {\n  return (\n    <>\n      <DayCalendarHead />\n\n      <TasksColumnsList />\n    </>\n  );\n};\n\nexport default ChoosedDay;\n"],"names":["ColumnList","styled","TaskList","BtnToAdd","theme","colors","textTitleHeader","CardItem","CardContainer","CardMain","CardTitle","CardStatus","CardEditMenu","CardEditBtn","Container","onClick","alert","task","taskData","title","priority","id","Column"],"sourceRoot":""}