{"version":3,"file":"static/js/130.5e6148a8.chunk.js","mappings":"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","sources":["components/Calendar/CalendarToolbar/CalendarToolbar.styled.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ToolbarContainer = styled.div`\n  margin-bottom: 24px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const PeriodTypeSelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 18px;\n  gap: 8px;\n`;\n\nexport const DateBox = styled.div`\n  background-color: #3e85f3;\n  width: 148px;\n  display: flex;\n  padding: 6px 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n`;\n\nexport const Date = styled.span`\n  text-transform: uppercase;\n  color: white;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n`;\n\nexport const ToggleBox = styled.div`\n  display: flex;\n  background-color: #fff;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  gap: 1px;\n  overflow: hidden;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ToggleBtn = styled.div`\n  padding: 7px 10px;\n  background-color: #fff;\n`;\n\nexport const Icon = styled.svg`\n  stroke: #dce3e5;\n  &:hover {\n    stroke: #343434;\n  }\n`;\n\nexport const BtnLeft = styled.button`\n  padding: 8px 10px;\n  width: 38px;\n  height: 34px;\n  background-color: #fff;\n  border: solid 1px rgba(220, 227, 229, 0.8);\n  border-radius: 8px 0 0 8px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    stroke: #343434;\n  }\n`;\n\nexport const BtnRight = styled.button`\n  padding: 8px 10px;\n  width: 38px;\n  height: 34px;\n  background-color: #fff;\n  border: solid 1px rgba(220, 227, 229, 0.8);\n  border-radius: 0 8px 8px 0;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    stroke: #343434;\n  }\n`;\n\nexport const PeriodPaginator = styled.div`\n  display: flex;\n  border-radius: 8px;\n  overflow: hidden;\n  height: 34px;\n`;\n\nexport const Period = styled.div`\n  width: 76px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 0;\n  background-color: rgba(62, 133, 243, 0.2);\n`;\n\nexport const BtnMonth = styled.button`\n  width: 82px;\n  height: 34px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 8px 0 0 8px;\n  border-right: 1px solid rgba(62, 133, 243, 0.2);\n  background-color: #e3f3ff;\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #3e85f3;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &.active {\n    background-color: rgba(62, 133, 243, 0.2);\n  }\n`;\n\nexport const BtnDay = styled.button`\n  width: 82px;\n  height: 34px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 0 8px 8px 0;\n  border-left: 1px solid rgba(62, 133, 243, 0.2);\n  background-color: #e3f3ff;\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #3e85f3;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &.active {\n    background-color: rgba(62, 133, 243, 0.2);\n  }\n`;\n\nexport const TypeLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n  color: #3e85f3;\n`;\n","// import { Link } from 'react-router-dom';\nimport moment from 'moment';\n// import DayCalendarHead from '../ChoosedDay/DayCalendarHead'; // Импортируем компонент\nimport sprite from 'images/icons.svg';\n\nimport {\n    Date,\n    DateBox,\n    PeriodPaginator,\n    PeriodTypeSelect,\n    Icon,\n    ToolbarContainer,\n    // TypeLink,\n    BtnRight,\n    BtnLeft,\n    BtnMonth,\n    BtnDay,\n} from './CalendarToolbar.styled';\n\nconst CalendarToolbar = ({\n    currentDate,\n    setCurrentDate,\n    format,\n    setFormat,\n}) => {\n    // const month = moment(currentDate).format('YYYY-MM');\n    // const day = moment(currentDate).format('YYYY-MM-DD');\n\n    const handlePrevDate = format => {\n        const date = moment(currentDate)\n            .subtract(1, format)\n            .format('YYYY-MM-DD');\n        setCurrentDate(date);\n        localStorage.setItem('date', date);\n    };\n\n    const handleNextDate = format => {\n        const date = moment(currentDate).add(1, format).format('YYYY-MM-DD');\n        setCurrentDate(date);\n        localStorage.setItem('date', date);\n    };\n\n    const handleChangePeriod = evt => {\n        switch (evt.currentTarget.textContent) {\n            case 'Month':\n                setFormat('month');\n                localStorage.setItem('type', 'month');\n                break;\n            case 'Day':\n                setFormat('day');\n                localStorage.setItem('type', 'day');\n                break;\n            default:\n                return format;\n        }\n    };\n\n    return (\n        <ToolbarContainer>\n            <PeriodTypeSelect>\n                <DateBox>\n                    <Date>\n                        {moment(currentDate).format(\n                            format === 'day' ? 'DD MMM YYYY' : 'MMMM YYYY'\n                        )}\n                    </Date>\n                </DateBox>\n                <div>\n                    <BtnLeft\n                        type=\"button\"\n                        onClick={() => handlePrevDate(format)}\n                    >\n                        <Icon width=\"18\" height=\"18\">\n                            <use href={`${sprite}#chevron-left`} />\n                        </Icon>\n                    </BtnLeft>\n                    <BtnRight\n                        type=\"button\"\n                        onClick={() => handleNextDate(format)}\n                    >\n                        <Icon width=\"18\" height=\"18\">\n                            <use href={`${sprite}#chevron-right`} />\n                        </Icon>\n                    </BtnRight>\n                </div>\n            </PeriodTypeSelect>\n            <PeriodPaginator>\n                <BtnMonth\n                    type=\"button\"\n                    onClick={handleChangePeriod}\n                    className={format === 'month' ? 'active' : ''}\n                >\n                    Month\n                </BtnMonth>\n                <BtnDay\n                    type=\"button\"\n                    onClick={handleChangePeriod}\n                    className={format === 'day' ? 'active' : ''}\n                >\n                    Day\n                </BtnDay>\n            </PeriodPaginator>\n        </ToolbarContainer>\n    );\n};\n\nexport default CalendarToolbar;\n","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport CalendarToolbar from 'components/Calendar/CalendarToolbar/CalendarToolbar';\nimport { Outlet, useNavigate } from 'react-router';\nimport moment from 'moment';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  const [currentDate, setCurrentDate] = useState(\n    localStorage.getItem('date') || moment().format('YYYY-MM-DD').toString()\n  );\n  const [format, setFormat] = useState(localStorage.getItem('type') || 'month');\n\n  useEffect(() => {\n    let date;\n    switch (format) {\n      case 'month':\n        date = moment(currentDate).format('YYYY-MM');\n        navigate(`/calendar/month/${date}`);\n        break;\n      case 'day':\n        date = moment(currentDate).format('YYYY-MM-DD');\n        navigate(`/calendar/day/${date}`);\n        break;\n      default:\n        return;\n    }\n  }, [format, navigate, currentDate]);\n\n  return (\n    <CalendarContainer>\n      <CalendarToolbar\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        format={format}\n        setFormat={setFormat}\n      />\n      <Outlet />\n    </CalendarContainer>\n  );\n};\n\nexport default CalendarPage;\n\nconst CalendarContainer = styled.div`\n  //   background-color: #f7f6f9;\n  //   max-width: 1085px;\n  // margin-top: 45px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n    margin-top: 0;\n  }\n`;\n\n// import React, { useEffect } from 'react';\n// import styled from '@emotion/styled';\n// import CalendarToolbar from 'components/Calendar/CalendarToolbar/CalendarToolbar';\n// // import ChoosedMonth from 'components/Calendar/ChoosedMonth/ChoosedMonth';\n// // import ChoosedDay from 'components/Calendar/ChoosedDay/ChoosedDay';\n// import { useLocation, useNavigate, Outlet } from 'react-router-dom';\n\n// const CalendarPage = () => {\n//     // const { currentDay } = useParams();\n\n//     const location = useLocation();\n\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // console.log(location);\n//         if (location.pathname === '/calendar') {\n//             navigate('/calendar/month/:currentDate');\n//             // navigate('/account');\n//         }\n//     });\n\n//     return (\n//         <CalendarContainer>\n//             <CalendarToolbar />\n//             {/* <ChoosedMonth />\n//             {currentDay ? <ChoosedDay /> : null} */}\n//             <Outlet />\n//         </CalendarContainer>\n//     );\n// };\n\n// const CalendarContainer = styled.div`\n//   padding: 0 32px 32px;\n// //   background-color: #f7f6f9;\n// //   max-width: 1085px;\n//   margin-top: 45px;\n//       @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n//         margin-top: 0;\n//     }\n// `;\n\n// export default CalendarPage;\n"],"names":["ToolbarContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoints","m","PeriodTypeSelect","_templateObject2","DateBox","_templateObject3","Date","_templateObject4","Icon","_templateObject5","_templateObject6","_templateObject7","BtnLeft","_templateObject8","BtnRight","_templateObject9","PeriodPaginator","_templateObject10","BtnMonth","_templateObject11","_templateObject12","BtnDay","_templateObject13","NavLink","_templateObject14","currentDate","setCurrentDate","format","setFormat","handleChangePeriod","evt","currentTarget","textContent","localStorage","setItem","_jsxs","children","_jsx","moment","type","onClick","date","subtract","handlePrevDate","width","height","href","concat","sprite","add","handleNextDate","className","navigate","useNavigate","_useState","useState","getItem","toString","_useState2","_slicedToArray","_useState3","_useState4","useEffect","CalendarContainer","CalendarToolbar","Outlet"],"sourceRoot":""}