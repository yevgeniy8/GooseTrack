{"version":3,"file":"static/js/130.937a20ab.chunk.js","mappings":"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","sources":["components/Calendar/CalendarToolbar/CalendarToolbar.styled.jsx","components/Calendar/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage.jsx","styles/media.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nimport { tablet, min } from 'styles/media';\n\nexport const ToolbarContainer = styled.div`\n    margin-bottom: 24px;\n\n    ${min(tablet)} {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n\nexport const PeriodTypeSelect = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 18px;\n    gap: 8px;\n`;\n\nexport const DateBox = styled.div`\n    background-color: ${({ theme }) => theme.colors.brand};\n    // width: 146px;\n    display: flex;\n    padding: 6px 12px;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border-radius: 8px;\n\n    ${min(tablet)} {\n        max-width: 168px;\n    }\n`;\n\nexport const Date = styled.span`\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.white};\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 18px;\n\n    ${min(tablet)} {\n        font-size: 16px;\n    }\n`;\n\nexport const Icon = styled.svg`\n    /* stroke: ${({ theme }) => theme.colors.sliderMonthDay};\n    fill: none;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        stroke: ${({ theme }) => theme.colors.sliderMonthDayHover};\n    } */\n`;\n\nexport const BtnLeft = styled.button`\n    padding: 6px;\n    width: 36px;\n    height: 30px;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    border: ${({ theme }) => theme.borders.calendar};\n    border-radius: 8px 0 0 8px;\n    transition: ${({ theme }) =>\n        `stroke ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n    stroke: ${({ theme }) => theme.colors.sliderMonthDay};\n    fill: none;\n    &:hover {\n        stroke: ${({ theme }) => theme.colors.sliderMonthDayHover};\n    }\n    ${min(tablet)} {\n        padding: 8px;\n        height: 34px;\n    }\n`;\n\nexport const BtnRight = styled.button`\n    padding: 6px 8px;\n    width: 36px;\n    height: 30px;\n    background-color: ${({ theme }) => theme.colors.backgroundSecondary};\n    border: ${({ theme }) => theme.borders.calendar};\n    border-radius: 0 8px 8px 0;\n    transition: ${({ theme }) =>\n        `stroke ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n    stroke: ${({ theme }) => theme.colors.sliderMonthDay};\n    fill: none;\n    &:hover {\n        stroke: ${({ theme }) => theme.colors.sliderMonthDayHover};\n    }\n    ${min(tablet)} {\n        padding: 8px;\n        height: 34px;\n    }\n`;\n//якщо не потрібно прибрати PeriodPaginator Period\nexport const PeriodPaginator = styled.div`\n    display: flex;\n    border-radius: 8px;\n    overflow: hidden;\n    height: 34px;\n`;\n\nexport const Period = styled.div`\n    width: 76px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 8px 0;\n    background-color: rgba(62, 133, 243, 0.2);\n`;\n\nexport const NavLinkMonth = styled(NavLink)`\n    width: 76px;\n    height: 34px;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 8px 0 0 8px;\n    color: ${({ theme }) => theme.colors.brand};\n    border-right: ${({ theme }) => theme.borders.rightMonth};\n    background-color: ${({ theme }) => theme.colors.backgroundMonthDay};\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}, color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundMonthDayActive};\n        color: ${({ theme }) => theme.colors.textMonthDayActive};\n    }\n    ${min(tablet)} {\n        font-size: 16px;\n        width: 82px;\n    }\n\n    &.active {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundMonthDayActive};\n        color: ${({ theme }) => theme.colors.textMonthDayActive};\n    }\n`;\n\nexport const NavLinkDay = styled(NavLink)`\n    width: 76px;\n    height: 34px;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 0 8px 8px 0;\n    /* border-left: 1px solid rgba(62, 133, 243, 0.2); */\n    background-color: ${({ theme }) => theme.colors.backgroundMonthDay};\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: ${({ theme }) => theme.colors.brand};\n    transition: ${({ theme }) =>\n        `background-color ${theme.animations.duration} ${theme.animations.cubicBezier}, color ${theme.animations.duration} ${theme.animations.cubicBezier}`};\n    &:hover,\n    &:focus {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundMonthDayActive};\n        color: ${({ theme }) => theme.colors.textMonthDayActive};\n    }\n    ${min(tablet)} {\n        font-size: 16px;\n        width: 82px;\n    }\n    &.active {\n        background-color: ${({ theme }) =>\n            theme.colors.backgroundMonthDayActive};\n        color: ${({ theme }) => theme.colors.textMonthDayActive};\n    }\n`;\n","import moment from 'moment';\nimport sprite from 'images/icons.svg';\n\nimport {\n    Date,\n    DateBox,\n    PeriodPaginator,\n    PeriodTypeSelect,\n    Icon,\n    ToolbarContainer,\n    BtnRight,\n    BtnLeft,\n    NavLinkMonth,\n    NavLinkDay,\n} from './CalendarToolbar.styled';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst CalendarToolbar = () => {\n    const [currentDate, setCurrentDate] = useState('');\n    const [format, setFormat] = useState('');\n\n    const month = moment(currentDate).format('YYYY-MM');\n    const day = moment(currentDate).format('YYYY-MM-DD');\n\n    const date = useParams();\n\n    useEffect(() => {\n        if (date.currentDate) {\n            setFormat('month');\n            setCurrentDate(date.currentDate);\n        } else {\n            setFormat('day');\n            setCurrentDate(date.currentDay);\n        }\n    }, [date.currentDate, date.currentDay]);\n\n    const navigate = useNavigate();\n\n    const handlePrevDate = format => {\n        const date = moment(currentDate)\n            .subtract(1, format)\n            .format('YYYY-MM-DD');\n        setCurrentDate(date);\n        localStorage.setItem('date', date);\n        if (format === 'month') {\n            const dataData = moment(date).format('YYYY-MM');\n            navigate(`${format}/${dataData}`);\n        } else {\n            navigate(`${format}/${date}`);\n        }\n    };\n\n    const handleNextDate = format => {\n        const date = moment(currentDate).add(1, format).format('YYYY-MM-DD');\n        setCurrentDate(date);\n        localStorage.setItem('date', date);\n        if (format === 'month') {\n            const dataData = moment(date).format('YYYY-MM');\n            navigate(`${format}/${dataData}`);\n        } else {\n            navigate(`${format}/${date}`);\n        }\n    };\n\n\n    const handleChangeType = e => {\n        switch (e.currentTarget.textContent) {\n            case 'Month':\n                setFormat('month');\n                localStorage.setItem('type', 'month');\n                navigate(`month/${month}`);\n                break;\n            case 'Day':\n                setFormat('day');\n                localStorage.setItem('type', 'day');\n                navigate(`day/${localStorage.getItem('date')}`);\n                break;\n            default:\n                return format;\n        }\n    };\n\n    return (\n        <ToolbarContainer>\n            <PeriodTypeSelect>\n                <DateBox>\n                    <Date>\n                        {moment(currentDate).format(\n                            format === 'day' ? 'DD MMM YYYY' : 'MMMM YYYY'\n                        )}\n                    </Date>\n                </DateBox>\n                <div>\n                    <BtnLeft\n                        type=\"button\"\n                        onClick={() => handlePrevDate(format)}\n                    >\n                        <Icon width=\"18\" height=\"18\">\n                            <use href={`${sprite}#chevron-left`} />\n                        </Icon>\n                    </BtnLeft>\n                    <BtnRight\n                        type=\"button\"\n                        onClick={() => handleNextDate(format)}\n                    >\n                        <Icon width=\"18\" height=\"18\">\n                            <use href={`${sprite}#chevron-right`} />\n                        </Icon>\n                    </BtnRight>\n                </div>\n            </PeriodTypeSelect>\n            <PeriodPaginator>\n                <NavLinkMonth to={`month/${month}`} onClick={handleChangeType}>\n                    Month\n                </NavLinkMonth>\n                <NavLinkDay to={`day/${day}`} onClick={handleChangeType}>\n                    Day\n                </NavLinkDay>\n            </PeriodPaginator>\n        </ToolbarContainer>\n    );\n};\n\nexport default CalendarToolbar;\n","import React, { useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport CalendarToolbar from 'components/Calendar/CalendarToolbar/CalendarToolbar';\nimport { Outlet, useNavigate } from 'react-router';\nimport moment from 'moment';\n\nimport { useThemeContext } from 'hooks/ThemeContext';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n\n    body {\n        background-color: ${({ theme }) => theme.colors.backgroundPrimary};\n    }\n`;\n\nconst CalendarPage = () => {\n    const { theme } = useThemeContext();\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const month = moment().format('YYYY-MM').toString();\n        navigate(`/calendar/month/${month}`);\n    }, [navigate]);\n\n    const format = localStorage.getItem('type') || 'month';\n    useEffect(() => {\n        const date =\n            localStorage.getItem('date') ||\n            moment().format('YYYY-MM-DD').toString();\n\n        if (format === 'month') {\n            navigate(`/calendar/month/${moment(date).format('YYYY-MM')}`);\n        } else {\n            navigate(`/calendar/day/${date}`);\n        }\n\n        localStorage.setItem('date', date);\n        localStorage.setItem('type', format);\n    }, [navigate, format]);\n\n    return (\n        <CalendarContainer>\n            <GlobalStyles theme={theme} />\n            <CalendarToolbar />\n            <Outlet />\n        </CalendarContainer>\n    );\n};\n\nexport default CalendarPage;\n\nconst CalendarContainer = styled.div`\n    //   background-color: #f7f6f9;\n    //   max-width: 1085px;\n    // margin-top: 45px;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n        margin-top: 0;\n    }\n`;\n\n// import React, { useEffect } from 'react';\n// import styled from '@emotion/styled';\n// import CalendarToolbar from 'components/Calendar/CalendarToolbar/CalendarToolbar';\n// // import ChoosedMonth from 'components/Calendar/ChoosedMonth/ChoosedMonth';\n// // import ChoosedDay from 'components/Calendar/ChoosedDay/ChoosedDay';\n// import { useLocation, useNavigate, Outlet } from 'react-router-dom';\n\n// const CalendarPage = () => {\n//     // const { currentDay } = useParams();\n\n//     const location = useLocation();\n\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // console.log(location);\n//         if (location.pathname === '/calendar') {\n//             navigate('/calendar/month/:currentDate');\n//             // navigate('/account');\n//         }\n//     });\n\n//     return (\n//         <CalendarContainer>\n//             <CalendarToolbar />\n//             {/* <ChoosedMonth />\n//             {currentDay ? <ChoosedDay /> : null} */}\n//             <Outlet />\n//         </CalendarContainer>\n//     );\n// };\n\n// const CalendarContainer = styled.div`\n//   padding: 0 32px 32px;\n// //   background-color: #f7f6f9;\n// //   max-width: 1085px;\n//   margin-top: 45px;\n//       @media screen and (min-width: ${({ theme }) => theme.breakpoints.m}) {\n//         margin-top: 0;\n//     }\n// `;\n\n// export default CalendarPage;\n","const media = {\n    mobile: 375,\n    tablet: 768,\n    desktop: 1440,\n};\n\nconst { mobile, tablet, desktop } = media;\n\nconst min = bp => `@media screen and (min-width: ${bp}px)`;\nconst max = bp => `@media screen and (max-width: ${bp}px)`;\n\nexport { mobile, tablet, desktop, min, max };\n"],"names":["ToolbarContainer","styled","_templateObject","_taggedTemplateLiteral","min","tablet","PeriodTypeSelect","_templateObject2","DateBox","_templateObject3","_ref","theme","colors","brand","Date","_templateObject4","_ref2","white","Icon","_templateObject5","_ref3","sliderMonthDay","_ref4","sliderMonthDayHover","BtnLeft","_templateObject6","_ref5","backgroundSecondary","_ref6","borders","calendar","_ref7","concat","animations","duration","cubicBezier","_ref8","_ref9","BtnRight","_templateObject7","_ref10","_ref11","_ref12","_ref13","_ref14","PeriodPaginator","_templateObject8","NavLinkMonth","_templateObject9","NavLink","_templateObject10","_ref15","_ref16","rightMonth","_ref17","backgroundMonthDay","_ref18","_ref19","backgroundMonthDayActive","_ref20","textMonthDayActive","_ref21","_ref22","NavLinkDay","_templateObject11","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_useState","useState","_useState2","_slicedToArray","currentDate","setCurrentDate","_useState3","_useState4","format","setFormat","month","moment","day","date","useParams","useEffect","currentDay","navigate","useNavigate","handleChangeType","e","currentTarget","textContent","localStorage","setItem","getItem","_jsxs","children","_jsx","type","onClick","subtract","dataData","handlePrevDate","width","height","href","sprite","add","handleNextDate","to","GlobalStyles","createGlobalStyle","backgroundPrimary","useThemeContext","toString","CalendarContainer","CalendarToolbar","Outlet","breakpoints","m","mobile","desktop","bp"],"sourceRoot":""}